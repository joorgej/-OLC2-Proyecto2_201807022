graph {
	node [center=false shape=record]
	splines=false
	0 [label="{init → program\l |program → main\l |main → MAIN PAR_IZQ PAR_DER function_block\l |function_block → BRA_IZQ instructions BRA_DER\l |instructions → instructions instruction\l |instruction → if\l |if → IF PAR_IZQ expression PAR_DER function_block ELSE function_block\l |function_block → BRA_IZQ instructions BRA_DER\l |instructions → instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |function_block → BRA_IZQ instructions BRA_DER\l |instructions → instructions instruction\l |instruction → goto PUNTO_COMA\l |goto → GOTO ID\l |instructions → instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |expression → expression OR expression\l |expression → expression ES_IGUAL expression\l |expression → CADENA\l |expression → identifier\l |identifier → ID\l |expression → expression ES_IGUAL expression\l |expression → CADENA\l |expression → identifier\l |identifier → ID\l |instructions → instructions instruction\l |instruction → declaration PUNTO_COMA\l |declaration → primitive_type declaration_list\l |declaration_list → ID IGUAL expression\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ PAR_DER\l |primitive_type → CHAR\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instructions instruction\l |instruction → if\l |if → IF PAR_IZQ expression PAR_DER function_block ELSE if\l |if → IF PAR_IZQ expression PAR_DER function_block ELSE if\l |if → IF PAR_IZQ expression PAR_DER function_block ELSE if\l |if → IF PAR_IZQ expression PAR_DER function_block\l |function_block → BRA_IZQ instructions BRA_DER\l |instructions → instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression_list COMA expression\l |expression → expression DIV expression\l |expression → identifier\l |identifier → ID\l |expression → identifier\l |identifier → ID\l |expression_list → expression\l |expression → CADENA\l |expression → expression ES_IGUAL expression\l |expression → CADENA\l |expression → identifier\l |identifier → ID\l |function_block → BRA_IZQ instructions BRA_DER\l |instructions → instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression_list COMA expression\l |expression → expression MULT expression\l |expression → identifier\l |identifier → ID\l |expression → identifier\l |identifier → ID\l |expression_list → expression\l |expression → CADENA\l |expression → expression ES_IGUAL expression\l |expression → CADENA\l |expression → identifier\l |identifier → ID\l |function_block → BRA_IZQ instructions BRA_DER\l |instructions → instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression_list COMA expression\l |expression → expression RESTA expression\l |expression → identifier\l |identifier → ID\l |expression → identifier\l |identifier → ID\l |expression_list → expression\l |expression → CADENA\l |expression → expression ES_IGUAL expression\l |expression → CADENA\l |expression → identifier\l |identifier → ID\l |function_block → BRA_IZQ instructions BRA_DER\l |instructions → instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression_list COMA expression\l |expression → expression SUMA expression\l |expression → identifier\l |identifier → ID\l |expression → identifier\l |identifier → ID\l |expression_list → expression\l |expression → CADENA\l |expression → expression ES_IGUAL expression\l |expression → CADENA\l |expression → identifier\l |identifier → ID\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instructions instruction\l |instruction → declaration PUNTO_COMA\l |declaration → primitive_type declaration_list\l |declaration_list → ID IGUAL expression\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ PAR_DER\l |primitive_type → CHAR\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instructions instruction\l |instruction → declaration PUNTO_COMA\l |declaration → primitive_type declaration_list\l |declaration_list → ID IGUAL expression\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ PAR_DER\l |primitive_type → INT\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instructions instruction\l |instruction → declaration PUNTO_COMA\l |declaration → primitive_type declaration_list\l |declaration_list → ID IGUAL expression\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ PAR_DER\l |primitive_type → INT\l |instructions → instructions instruction\l |instruction → expression PUNTO_COMA\l |expression → function_call\l |function_call → ID param_val\l |param_val → PAR_IZQ expression_list PAR_DER\l |expression_list → expression\l |expression → CADENA\l |instructions → instruction\l |instruction → label\l |label → ID DOS_PUNTOS\l }"]
}
