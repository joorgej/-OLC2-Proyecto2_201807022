
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftOR_BITleftXOR_BITleftAND_BITnonassocES_IGUALNO_IGUALnonassocMAYORMENORMAYOR_IGUALMENOR_IGUALleftSHIFT_DERSHIFT_IZQleftSUMARESTAleftMULTDIVMODrightMENOSNOTNOT_BITREFERENCIAPRE_INCPRE_DECleftPOST_INCPOST_DECAND AND_BIT AND_BIT_IGUAL BRA_DER BRA_IZQ BREAK CADENA CARACTER CASE CHAR COMA COMENTARIO COMENTARIO_MULTILINEA CONTINUE COR_DER COR_IZQ DECIMAL DEFAULT DIV DIV_IGUAL DO DOS_PUNTOS DOUBLE ELSE ENTERO ES_IGUAL FOR GOTO ID IF IGUAL INT INTERROGACION MAIN MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MOD MOD_IGUAL MULT MULT_IGUAL NOT NOT_BIT NO_IGUAL OR OR_BIT OR_BIT_IGUAL PAR_DER PAR_IZQ PUNTO PUNTO_COMA RESTA RESTA_IGUAL RESTA_RESTA RETURN SHIFT_DER SHIFT_DER_IGUAL SHIFT_IZQ SHIFT_IZQ_IGUAL STRUCT SUMA SUMA_IGUAL SUMA_SUMA SWITCH VOID WHILE XOR_BIT XOR_BIT_IGUALinit                       : programinit                       : program                    : mainprogram                    : declars maindeclars                    : declars declardeclars                    : declardeclar                     : primitive_type functiondeclar                     : VOID functiondeclar                     : declaration PUNTO_COMAdeclar                     : assignation PUNTO_COMAdeclar                     : structmain                       : INT MAIN new_label PAR_IZQ PAR_DER function_blocknew_label                  : function                   : ID new_label param add_function function_blockadd_function               : param                      : PAR_IZQ PAR_DERparam                      : PAR_IZQ parameter_list PAR_DERparameter_list             : parameter_list COMA parameterparameter_list             : parameterparameter                  : primitive_type IDprimitive_type             : INTprimitive_type             : DOUBLEprimitive_type             : CHARprimitive_type             : STRUCT IDstruct                     : STRUCT ID struct_block PUNTO_COMAstruct_block               : BRA_IZQ new_scope declarations BRA_DERfunction_block             : BRA_IZQ new_scope instructions BRA_DERnew_scope                  : function_block             : BRA_IZQ BRA_DERinstructions               : instructions instructioninstructions               : instructioninstruction                : declaration PUNTO_COMAinstruction                : assignation PUNTO_COMAinstruction                : forinstruction                : whileinstruction                : do PUNTO_COMAinstruction                : ifinstruction                : switchinstruction                : labelinstruction                : goto PUNTO_COMAinstruction                : break PUNTO_COMAinstruction                : continue PUNTO_COMAinstruction                : return PUNTO_COMAinstruction                : expression PUNTO_COMAinstruction                : PUNTO_COMAdeclarations               : declarations declaration PUNTO_COMAdeclarations               : declaration PUNTO_COMAdeclaration                : primitive_type declaration_listdeclaration                : ID declaration_listdeclaration_list           : declaration_list COMA ID IGUAL expressiondeclaration_list           : declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DERdeclaration_list           : declaration_list COMA IDdeclaration_list           : declaration_list COMA ID bracketsdeclaration_list           : declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENAdeclaration_list           : ID IGUAL expressiondeclaration_list           : ID brackets IGUAL BRA_IZQ expression_list BRA_DERdeclaration_list           : IDdeclaration_list           : ID bracketsdeclaration_list           : ID COR_IZQ COR_DER IGUAL CADENAidentifier                 : IDidentifier                 : ID bracketbrackets                   : bracketbrackets                   : COR_IZQ COR_DERbracket                    : bracket COR_IZQ expression COR_DERbracket                    : COR_IZQ expression COR_DERassignation                : identifier equals expressionassignation                : identifier PUNTO ID equals expressionequals                   : IGUAL\n\t\t\t                    | SUMA_IGUAL\n\t\t\t                    | RESTA_IGUAL\n\t\t\t                    | MULT_IGUAL\n\t\t\t                    | DIV_IGUAL\n\t\t\t                    | MOD_IGUAL\n\t\t\t                    | SHIFT_IZQ_IGUAL\n\t\t\t                    | SHIFT_DER_IGUAL\n\t\t\t                    | AND_BIT_IGUAL\n                                | XOR_BIT_IGUAL\t\n                                | OR_BIT_IGUALif                         : IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_labeladd_if_label               : if_marcker                 : if                         : IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker ifelse_marcker               : if                         : IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_blockwhile                      : WHILE label_add PAR_IZQ expression PAR_DER while_add function_blockwhile_add                  : label_add                  : do                         : DO label_add function_block WHILE PAR_IZQ expression PAR_DERfor                        : FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_blockdo_marcker                 : step_marcker               : for_declaration            : declarationfor_declaration            : assignationstep                       : assignationstep                       : increasestep                       : decreaseswitch                     : SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DERcases                      : cases casecases                      : cases defaultcases                      : casecase                       : CASE expression DOS_PUNTOS instructionsdefault                    : DEFAULT DOS_PUNTOS instructionslabel                      : ID DOS_PUNTOSgoto                       : GOTO IDbreak                      : BREAKcontinue                   : CONTINUEreturn                     : RETURN expressionreturn                     : RETURNfunction_call              : ID param_valparam_val                  : PAR_IZQ PAR_DERparam_val                  : PAR_IZQ expression_list PAR_DERexpression_list            : expression_list COMA expressionexpression_list            : expressionexpression               : expression SUMA expression\n                                | expression RESTA expression\n                                | expression MULT expression\n                                | expression DIV expression\n                                | expression MOD expression\n                                | expression AND expression\n                                | expression OR expression\n                                | expression ES_IGUAL expression\n                                | expression NO_IGUAL expression\n                                | expression MENOR_IGUAL expression\n                                | expression MAYOR_IGUAL expression\n                                | expression MENOR expression\n                                | expression MAYOR expression\n                                | expression AND_BIT expression\n                                | expression OR_BIT expression\n                                | expression XOR_BIT expression\n                                | expression SHIFT_IZQ expression\n                                | expression SHIFT_DER expression\n                                | RESTA expression %prec MENOS\n                                | AND_BIT expression %prec REFERENCIA\n                                | NOT expression\n                                | NOT_BIT expression\n                                | PAR_IZQ expression PAR_DER\n                                | expression INTERROGACION expression DOS_PUNTOS expressionexpression                 : increaseexpression                 : decreaseexpression                 : ENTEROexpression                 : DECIMALexpression                 : CARACTERexpression                 : CADENAexpression                 : function_callexpression                 : conversionexpression                 : identifierexpression                 : identifier PUNTO IDconversion                 : PAR_IZQ INT PAR_DER expressionconversion                 : PAR_IZQ DOUBLE PAR_DER expressionconversion                 : PAR_IZQ CHAR PAR_DER expressionincrease                   : SUMA_SUMA expression %prec PRE_INCincrease                   : expression SUMA_SUMA %prec POST_INCdecrease                   : RESTA_RESTA expression %prec PRE_DECdecrease                   : expression RESTA_RESTA %prec POST_DEC'
    
_lr_action_items = {'$end':([0,1,2,3,17,167,189,226,],[-2,0,-1,-3,-4,-12,-29,-27,]),'INT':([0,4,6,11,18,20,23,25,26,53,60,78,82,83,134,168,172,174,181,188,189,194,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,238,267,272,274,275,282,283,291,292,294,295,297,],[5,5,-6,-11,-5,-7,-8,-9,-10,-28,112,130,-25,130,130,-28,-14,130,-47,130,-29,-46,130,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,130,-80,-85,-79,-97,130,130,130,130,-84,-82,-89,]),'VOID':([0,4,6,11,18,20,23,25,26,82,172,189,226,],[8,8,-6,-11,-5,-7,-8,-9,-10,-25,-14,-29,-27,]),'DOUBLE':([0,4,6,11,18,20,23,25,26,53,60,78,82,83,134,168,172,174,181,188,189,194,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,238,267,272,274,275,282,283,291,292,294,295,297,],[12,12,-6,-11,-5,-7,-8,-9,-10,-28,113,12,-25,12,12,-28,-14,12,-47,12,-29,-46,12,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,12,-80,-85,-79,-97,12,12,12,12,-84,-82,-89,]),'CHAR':([0,4,6,11,18,20,23,25,26,53,60,78,82,83,134,168,172,174,181,188,189,194,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,238,267,272,274,275,282,283,291,292,294,295,297,],[13,13,-6,-11,-5,-7,-8,-9,-10,-28,114,13,-25,13,13,-28,-14,13,-47,13,-29,-46,13,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,13,-80,-85,-79,-97,13,13,13,13,-84,-82,-89,]),'STRUCT':([0,4,6,11,18,20,23,25,26,53,78,82,83,134,168,172,174,181,188,189,194,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,238,267,272,274,275,282,283,291,292,294,295,297,],[14,14,-6,-11,-5,-7,-8,-9,-10,-28,131,-25,131,131,-28,-14,131,-47,131,-29,-46,131,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,131,-80,-85,-79,-97,131,131,131,131,-84,-82,-89,]),'ID':([0,4,5,6,7,8,11,12,13,14,15,18,20,23,25,26,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,48,50,53,54,56,57,58,59,60,71,72,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,115,117,120,122,124,129,130,131,132,134,136,137,159,160,161,168,172,176,181,182,187,188,189,190,194,197,198,200,202,203,205,206,207,213,220,223,226,227,228,229,230,231,232,233,234,235,236,237,238,241,242,250,254,259,261,267,270,271,272,274,275,280,282,283,291,292,294,295,297,],[15,15,-21,-6,22,24,-11,-22,-23,27,28,-5,-7,-8,-9,-10,-24,70,70,74,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,76,70,70,-28,70,70,70,70,70,70,70,70,-25,137,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,162,70,70,70,70,175,-21,176,70,137,28,28,70,70,70,-28,-14,-24,-47,70,70,213,-29,70,-46,213,-31,-45,-34,-35,-37,-38,-39,28,243,70,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,246,15,70,70,70,-87,70,70,-80,70,-91,-85,-79,-97,289,213,213,213,213,-84,-82,-89,]),'MAIN':([5,],[19,]),'PUNTO_COMA':([9,10,21,22,28,29,30,49,51,52,61,62,63,64,65,66,67,68,69,70,73,76,79,81,85,105,106,107,108,109,110,116,118,119,123,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,162,163,166,168,169,171,178,179,180,183,184,185,186,188,189,193,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,243,244,245,246,247,248,249,264,267,272,273,274,275,282,283,291,292,294,295,297,],[25,26,-48,-57,-57,-49,-61,-58,-62,82,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,-66,-52,-55,-63,-65,-152,-154,-132,-133,-134,-135,-109,-151,-153,-53,181,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-136,-147,-110,-67,-28,-50,-63,-59,-26,194,-148,-149,-150,-111,200,-29,-56,-137,200,-31,228,-45,229,-34,-35,230,-37,-38,-39,231,232,233,234,235,-60,-146,-105,-106,-108,-54,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-104,-107,-51,-147,254,-92,-93,271,-80,-85,-88,-79,-97,200,200,200,200,-84,-82,-89,]),'PUNTO':([15,16,30,69,70,85,138,213,214,289,],[-60,33,-61,115,-60,-65,-64,-60,237,-60,]),'IGUAL':([15,16,22,28,30,49,51,74,76,81,85,123,138,171,213,214,246,289,],[-60,34,48,48,-61,80,-62,34,122,133,-65,170,-64,191,-60,34,34,-60,]),'SUMA_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,35,-61,35,-65,-64,-60,35,35,-60,]),'RESTA_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,36,-61,36,-65,-64,-60,36,36,-60,]),'MULT_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,37,-61,37,-65,-64,-60,37,37,-60,]),'DIV_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,38,-61,38,-65,-64,-60,38,38,-60,]),'MOD_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,39,-61,39,-65,-64,-60,39,39,-60,]),'SHIFT_IZQ_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,40,-61,40,-65,-64,-60,40,40,-60,]),'SHIFT_DER_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,41,-61,41,-65,-64,-60,41,41,-60,]),'AND_BIT_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,42,-61,42,-65,-64,-60,42,42,-60,]),'XOR_BIT_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,43,-61,43,-65,-64,-60,43,43,-60,]),'OR_BIT_IGUAL':([15,16,30,74,85,138,213,214,246,289,],[-60,44,-61,44,-65,-64,-60,44,44,-60,]),'COR_IZQ':([15,22,28,30,51,70,76,85,138,213,289,],[31,50,50,54,54,31,124,-65,-64,31,31,]),'PAR_IZQ':([19,22,24,31,32,34,35,36,37,38,39,40,41,42,43,44,45,47,48,50,54,56,57,58,59,60,70,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,168,182,187,188,189,190,197,198,200,202,203,205,206,207,213,215,216,218,219,223,226,227,228,229,230,231,232,233,234,235,236,239,241,242,250,254,256,259,261,267,270,271,272,274,275,280,282,283,289,291,292,294,295,297,],[-13,-13,-13,60,60,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,75,78,60,60,60,60,60,60,60,60,117,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-28,60,60,60,-29,60,60,-31,-45,-34,-35,-37,-38,-39,117,238,-87,241,242,60,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,250,60,60,60,-87,261,60,60,-80,60,-91,-85,-79,-97,60,60,60,117,60,60,-84,-82,-89,]),'COMA':([21,22,28,29,30,49,51,61,62,63,64,65,66,67,68,69,70,76,79,81,85,105,106,107,108,109,110,116,118,119,123,127,128,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,162,163,164,165,169,171,175,177,178,183,184,185,186,192,193,195,196,224,225,245,],[46,-57,-57,46,-61,-58,-62,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,-52,-55,-63,-65,-152,-154,-132,-133,-134,-135,-109,-151,-153,-53,174,-19,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-136,-147,-110,187,-113,-50,-63,-20,187,-59,-148,-149,-150,-111,-18,-56,-137,-112,187,-54,-51,]),'BRA_IZQ':([27,77,80,121,125,126,170,173,217,240,257,258,260,262,265,281,290,293,296,],[53,-15,132,168,168,-16,190,-17,-87,168,-81,263,-86,168,168,-83,168,-90,168,]),'COR_DER':([30,50,55,61,62,63,64,65,66,67,68,69,70,84,85,105,106,107,108,109,110,116,118,119,124,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,162,163,183,184,185,186,195,],[-61,81,85,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,138,-65,-152,-154,-132,-133,-134,-135,-109,-151,-153,171,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-136,-147,-110,-148,-149,-150,-111,-137,]),'SUMA':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,86,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,86,86,86,-65,-152,-154,-132,-133,-134,-135,86,-109,-151,-153,-64,-114,-115,-116,-117,-118,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-136,-147,-110,86,86,86,86,86,86,-111,86,86,86,-60,-146,86,-147,86,86,86,86,86,86,86,-138,-139,-60,]),'RESTA':([30,31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,117,118,119,120,122,124,132,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,182,183,184,185,186,187,188,189,190,195,196,197,198,200,202,203,205,206,207,212,213,214,223,226,227,228,229,230,231,232,233,234,235,236,241,242,244,246,250,252,253,254,255,259,261,264,266,267,270,271,272,274,275,279,280,282,283,284,287,288,289,291,292,294,295,297,],[-61,56,56,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,56,56,56,87,56,56,56,56,56,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,56,56,87,87,87,-65,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-152,-154,-132,-133,-134,-135,87,-109,56,-151,-153,56,56,56,56,-64,-114,-115,-116,-117,-118,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-136,56,56,56,-147,-110,87,87,-28,87,56,87,87,87,-111,56,56,-29,56,87,87,56,-31,-45,-34,-35,-37,-38,-39,87,-60,-146,56,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,56,56,87,-147,56,87,87,-87,87,56,56,87,87,-80,56,-91,-85,-79,-97,87,56,56,56,87,-138,-139,-60,56,56,-84,-82,-89,]),'MULT':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,88,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,88,88,88,-65,-152,-154,-132,-133,-134,-135,88,-109,-151,-153,-64,88,88,-116,-117,-118,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-136,-147,-110,88,88,88,88,88,88,-111,88,88,88,-60,-146,88,-147,88,88,88,88,88,88,88,-138,-139,-60,]),'DIV':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,89,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,89,89,89,-65,-152,-154,-132,-133,-134,-135,89,-109,-151,-153,-64,89,89,-116,-117,-118,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-136,-147,-110,89,89,89,89,89,89,-111,89,89,89,-60,-146,89,-147,89,89,89,89,89,89,89,-138,-139,-60,]),'MOD':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,90,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,90,90,90,-65,-152,-154,-132,-133,-134,-135,90,-109,-151,-153,-64,90,90,-116,-117,-118,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-136,-147,-110,90,90,90,90,90,90,-111,90,90,90,-60,-146,90,-147,90,90,90,90,90,90,90,-138,-139,-60,]),'AND':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,91,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,91,91,91,-65,-152,-154,-132,-133,-134,-135,91,-109,-151,-153,-64,-114,-115,-116,-117,-118,-119,91,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,91,-136,-147,-110,91,91,91,91,91,91,-111,91,91,91,-60,-146,91,-147,91,91,91,91,91,91,91,-138,-139,-60,]),'OR':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,92,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,92,92,92,-65,-152,-154,-132,-133,-134,-135,92,-109,-151,-153,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,92,-136,-147,-110,92,92,92,92,92,92,-111,92,92,92,-60,-146,92,-147,92,92,92,92,92,92,92,-138,-139,-60,]),'ES_IGUAL':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,93,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,93,93,93,-65,-152,-154,-132,-133,-134,-135,93,-109,-151,-153,-64,-114,-115,-116,-117,-118,93,93,None,None,-123,-124,-125,-126,93,93,93,-130,-131,93,-136,-147,-110,93,93,93,93,93,93,-111,93,93,93,-60,-146,93,-147,93,93,93,93,93,93,93,-138,-139,-60,]),'NO_IGUAL':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,94,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,94,94,94,-65,-152,-154,-132,-133,-134,-135,94,-109,-151,-153,-64,-114,-115,-116,-117,-118,94,94,None,None,-123,-124,-125,-126,94,94,94,-130,-131,94,-136,-147,-110,94,94,94,94,94,94,-111,94,94,94,-60,-146,94,-147,94,94,94,94,94,94,94,-138,-139,-60,]),'MENOR_IGUAL':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,95,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,95,95,95,-65,-152,-154,-132,-133,-134,-135,95,-109,-151,-153,-64,-114,-115,-116,-117,-118,95,95,95,95,None,None,None,None,95,95,95,-130,-131,95,-136,-147,-110,95,95,95,95,95,95,-111,95,95,95,-60,-146,95,-147,95,95,95,95,95,95,95,-138,-139,-60,]),'MAYOR_IGUAL':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,96,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,96,96,96,-65,-152,-154,-132,-133,-134,-135,96,-109,-151,-153,-64,-114,-115,-116,-117,-118,96,96,96,96,None,None,None,None,96,96,96,-130,-131,96,-136,-147,-110,96,96,96,96,96,96,-111,96,96,96,-60,-146,96,-147,96,96,96,96,96,96,96,-138,-139,-60,]),'MENOR':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,97,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,97,97,97,-65,-152,-154,-132,-133,-134,-135,97,-109,-151,-153,-64,-114,-115,-116,-117,-118,97,97,97,97,None,None,None,None,97,97,97,-130,-131,97,-136,-147,-110,97,97,97,97,97,97,-111,97,97,97,-60,-146,97,-147,97,97,97,97,97,97,97,-138,-139,-60,]),'MAYOR':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,98,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,98,98,98,-65,-152,-154,-132,-133,-134,-135,98,-109,-151,-153,-64,-114,-115,-116,-117,-118,98,98,98,98,None,None,None,None,98,98,98,-130,-131,98,-136,-147,-110,98,98,98,98,98,98,-111,98,98,98,-60,-146,98,-147,98,98,98,98,98,98,98,-138,-139,-60,]),'AND_BIT':([30,31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,117,118,119,120,122,124,132,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,182,183,184,185,186,187,188,189,190,195,196,197,198,200,202,203,205,206,207,212,213,214,223,226,227,228,229,230,231,232,233,234,235,236,241,242,244,246,250,252,253,254,255,259,261,264,266,267,270,271,272,274,275,279,280,282,283,284,287,288,289,291,292,294,295,297,],[-61,57,57,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,57,57,57,99,57,57,57,57,57,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,57,57,99,99,99,-65,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-152,-154,-132,-133,-134,-135,99,-109,57,-151,-153,57,57,57,57,-64,-114,-115,-116,-117,-118,99,99,-121,-122,-123,-124,-125,-126,-127,99,99,-130,-131,99,-136,57,57,57,-147,-110,99,99,-28,99,57,99,99,99,-111,57,57,-29,57,99,99,57,-31,-45,-34,-35,-37,-38,-39,99,-60,-146,57,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,57,57,99,-147,57,99,99,-87,99,57,57,99,99,-80,57,-91,-85,-79,-97,99,57,57,57,99,-138,-139,-60,57,57,-84,-82,-89,]),'OR_BIT':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,100,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,100,100,100,-65,-152,-154,-132,-133,-134,-135,100,-109,-151,-153,-64,-114,-115,-116,-117,-118,100,100,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,100,-136,-147,-110,100,100,100,100,100,100,-111,100,100,100,-60,-146,100,-147,100,100,100,100,100,100,100,-138,-139,-60,]),'XOR_BIT':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,101,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,101,101,101,-65,-152,-154,-132,-133,-134,-135,101,-109,-151,-153,-64,-114,-115,-116,-117,-118,101,101,-121,-122,-123,-124,-125,-126,-127,101,-129,-130,-131,101,-136,-147,-110,101,101,101,101,101,101,-111,101,101,101,-60,-146,101,-147,101,101,101,101,101,101,101,-138,-139,-60,]),'SHIFT_IZQ':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,102,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,102,102,102,-65,-152,-154,-132,-133,-134,-135,102,-109,-151,-153,-64,-114,-115,-116,-117,-118,102,102,102,102,102,102,102,102,102,102,102,-130,-131,102,-136,-147,-110,102,102,102,102,102,102,-111,102,102,102,-60,-146,102,-147,102,102,102,102,102,102,102,-138,-139,-60,]),'SHIFT_DER':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,103,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,103,103,103,-65,-152,-154,-132,-133,-134,-135,103,-109,-151,-153,-64,-114,-115,-116,-117,-118,103,103,103,103,103,103,103,103,103,103,103,-130,-131,103,-136,-147,-110,103,103,103,103,103,103,-111,103,103,103,-60,-146,103,-147,103,103,103,103,103,103,103,-138,-139,-60,]),'INTERROGACION':([30,55,61,62,63,64,65,66,67,68,69,70,73,79,84,85,105,106,107,108,109,110,111,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,165,166,169,183,184,185,186,195,196,212,213,214,244,246,252,253,255,264,266,279,284,287,288,289,],[-61,104,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,104,104,104,-65,-152,-154,-132,-133,-134,-135,104,-109,-151,-153,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,104,-136,-147,-110,104,104,104,104,104,104,-111,104,104,104,-60,-146,104,-147,104,104,104,104,104,104,104,-138,-139,-60,]),'SUMA_SUMA':([30,31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,117,118,119,120,122,124,132,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,182,183,184,185,186,187,188,189,190,195,196,197,198,200,202,203,205,206,207,212,213,214,223,226,227,228,229,230,231,232,233,234,235,236,241,242,244,246,250,252,253,254,255,259,261,264,266,267,270,271,272,274,275,279,280,282,283,284,287,288,289,291,292,294,295,297,],[-61,71,71,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,71,71,71,105,71,71,71,71,71,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,71,71,105,105,105,-65,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-152,-154,-132,-133,-134,-135,105,-109,71,-151,-153,71,71,71,71,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,105,-136,71,71,71,-147,-110,105,105,-28,105,71,105,105,105,-111,71,71,-29,71,105,105,71,-31,-45,-34,-35,-37,-38,-39,105,-60,-146,71,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,71,71,105,-147,71,105,105,-87,105,71,71,105,105,-80,71,-91,-85,-79,-97,105,71,71,71,105,-138,-139,-60,71,71,-84,-82,-89,]),'RESTA_RESTA':([30,31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,117,118,119,120,122,124,132,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,182,183,184,185,186,187,188,189,190,195,196,197,198,200,202,203,205,206,207,212,213,214,223,226,227,228,229,230,231,232,233,234,235,236,241,242,244,246,250,252,253,254,255,259,261,264,266,267,270,271,272,274,275,279,280,282,283,284,287,288,289,291,292,294,295,297,],[-61,72,72,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,72,72,72,106,72,72,72,72,72,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,72,72,106,106,106,-65,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-152,-154,-132,-133,-134,-135,106,-109,72,-151,-153,72,72,72,72,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,106,-136,72,72,72,-147,-110,106,106,-28,106,72,106,106,106,-111,72,72,-29,72,106,106,72,-31,-45,-34,-35,-37,-38,-39,106,-60,-146,72,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,72,72,106,-147,72,106,106,-87,106,72,72,106,106,-80,72,-91,-85,-79,-97,106,72,72,72,106,-138,-139,-60,72,72,-84,-82,-89,]),'PAR_DER':([30,61,62,63,64,65,66,67,68,69,70,73,75,78,85,105,106,107,108,109,110,111,112,113,114,116,117,118,119,127,128,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,162,163,164,165,166,175,183,184,185,186,192,195,196,252,253,255,266,285,286,287,288,],[-61,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,-66,121,126,-65,-152,-154,-132,-133,-134,-135,158,159,160,161,-109,163,-151,-153,173,-19,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-136,-147,-110,186,-113,-67,-20,-148,-149,-150,-111,-18,-137,-112,257,258,260,273,293,-94,-95,-96,]),'DOS_PUNTOS':([30,61,62,63,64,65,66,67,68,69,70,85,105,106,107,108,109,110,116,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,183,184,185,186,195,213,278,279,],[-61,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,-65,-152,-154,-132,-133,-134,-135,-109,-151,-153,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,182,-136,-147,-110,-148,-149,-150,-111,-137,236,282,283,]),'BRA_DER':([30,61,62,63,64,65,66,67,68,69,70,85,105,106,107,108,109,110,116,118,119,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,162,163,165,168,177,181,183,184,185,186,189,194,195,196,197,198,200,202,203,205,206,207,224,226,227,228,229,230,231,232,233,234,235,236,267,268,269,272,274,275,276,277,291,292,294,295,297,],[-61,-138,-139,-140,-141,-142,-143,-144,-145,-146,-60,-65,-152,-154,-132,-133,-134,-135,-109,-151,-153,179,-64,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-136,-147,-110,-113,189,193,-47,-148,-149,-150,-111,-29,-46,-137,-112,226,-31,-45,-34,-35,-37,-38,-39,245,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,275,-100,-85,-79,-97,-98,-99,-102,-101,-84,-82,-89,]),'NOT':([31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,168,182,187,188,189,190,197,198,200,202,203,205,206,207,223,226,227,228,229,230,231,232,233,234,235,236,241,242,250,254,259,261,267,270,271,272,274,275,280,282,283,291,292,294,295,297,],[58,58,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-28,58,58,58,-29,58,58,-31,-45,-34,-35,-37,-38,-39,58,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,58,58,58,-87,58,58,-80,58,-91,-85,-79,-97,58,58,58,58,58,-84,-82,-89,]),'NOT_BIT':([31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,168,182,187,188,189,190,197,198,200,202,203,205,206,207,223,226,227,228,229,230,231,232,233,234,235,236,241,242,250,254,259,261,267,270,271,272,274,275,280,282,283,291,292,294,295,297,],[59,59,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-28,59,59,59,-29,59,59,-31,-45,-34,-35,-37,-38,-39,59,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,59,59,59,-87,59,59,-80,59,-91,-85,-79,-97,59,59,59,59,59,-84,-82,-89,]),'ENTERO':([31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,168,182,187,188,189,190,197,198,200,202,203,205,206,207,223,226,227,228,229,230,231,232,233,234,235,236,241,242,250,254,259,261,267,270,271,272,274,275,280,282,283,291,292,294,295,297,],[63,63,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-28,63,63,63,-29,63,63,-31,-45,-34,-35,-37,-38,-39,63,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,63,63,63,-87,63,63,-80,63,-91,-85,-79,-97,63,63,63,63,63,-84,-82,-89,]),'DECIMAL':([31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,168,182,187,188,189,190,197,198,200,202,203,205,206,207,223,226,227,228,229,230,231,232,233,234,235,236,241,242,250,254,259,261,267,270,271,272,274,275,280,282,283,291,292,294,295,297,],[64,64,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-28,64,64,64,-29,64,64,-31,-45,-34,-35,-37,-38,-39,64,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,64,64,64,-87,64,64,-80,64,-91,-85,-79,-97,64,64,64,64,64,-84,-82,-89,]),'CARACTER':([31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,168,182,187,188,189,190,197,198,200,202,203,205,206,207,223,226,227,228,229,230,231,232,233,234,235,236,241,242,250,254,259,261,267,270,271,272,274,275,280,282,283,291,292,294,295,297,],[65,65,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-28,65,65,65,-29,65,65,-31,-45,-34,-35,-37,-38,-39,65,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,65,65,65,-87,65,65,-80,65,-91,-85,-79,-97,65,65,65,65,65,-84,-82,-89,]),'CADENA':([31,32,34,35,36,37,38,39,40,41,42,43,44,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,133,159,160,161,168,182,187,188,189,190,191,197,198,200,202,203,205,206,207,223,226,227,228,229,230,231,232,233,234,235,236,241,242,250,254,259,261,267,270,271,272,274,275,280,282,283,291,292,294,295,297,],[66,66,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,178,66,66,66,-28,66,66,66,-29,66,225,66,-31,-45,-34,-35,-37,-38,-39,66,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,66,66,66,-87,66,66,-80,66,-91,-85,-79,-97,66,66,66,66,66,-84,-82,-89,]),'FOR':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,282,283,291,292,294,295,297,],[-28,215,-29,215,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,215,215,215,215,-84,-82,-89,]),'WHILE':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,251,267,272,274,275,282,283,291,292,294,295,297,],[-28,216,-29,216,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,256,-80,-85,-79,-97,216,216,216,216,-84,-82,-89,]),'DO':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,282,283,291,292,294,295,297,],[-28,217,-29,217,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,217,217,217,217,-84,-82,-89,]),'IF':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,281,282,283,290,291,292,294,295,297,],[-28,218,-29,218,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,-83,218,218,218,218,218,-84,-82,-89,]),'SWITCH':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,282,283,291,292,294,295,297,],[-28,219,-29,219,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,219,219,219,219,-84,-82,-89,]),'GOTO':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,282,283,291,292,294,295,297,],[-28,220,-29,220,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,220,220,220,220,-84,-82,-89,]),'BREAK':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,282,283,291,292,294,295,297,],[-28,221,-29,221,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,221,221,221,221,-84,-82,-89,]),'CONTINUE':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,282,283,291,292,294,295,297,],[-28,222,-29,222,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,222,222,222,222,-84,-82,-89,]),'RETURN':([168,188,189,197,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,272,274,275,282,283,291,292,294,295,297,],[-28,223,-29,223,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,-85,-79,-97,223,223,223,223,-84,-82,-89,]),'ELSE':([189,226,267,274,],[-29,-27,-80,281,]),'CASE':([189,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,263,267,268,269,272,274,275,276,277,291,292,294,295,297,],[-29,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,270,-80,270,-100,-85,-79,-97,-98,-99,-102,-101,-84,-82,-89,]),'DEFAULT':([189,198,200,202,203,205,206,207,226,227,228,229,230,231,232,233,234,235,236,267,268,269,272,274,275,276,277,291,292,294,295,297,],[-29,-31,-45,-34,-35,-37,-38,-39,-27,-30,-32,-33,-36,-40,-41,-42,-43,-44,-103,-80,278,-100,-85,-79,-97,-98,-99,-102,-101,-84,-82,-89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'main':([0,4,],[3,17,]),'declars':([0,],[4,]),'declar':([0,4,],[6,18,]),'primitive_type':([0,4,78,83,134,174,188,197,238,282,283,291,292,],[7,7,129,136,136,129,136,136,136,136,136,136,136,]),'declaration':([0,4,83,134,188,197,238,282,283,291,292,],[9,9,135,180,199,199,248,199,199,199,199,]),'assignation':([0,4,188,197,238,280,282,283,291,292,],[10,10,201,201,249,286,201,201,201,201,]),'struct':([0,4,],[11,11,]),'identifier':([0,4,31,32,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,182,187,188,190,197,223,238,241,242,250,259,261,270,280,282,283,291,292,],[16,16,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,214,69,214,69,16,69,69,69,69,69,69,214,214,214,214,214,]),'function':([7,8,],[20,23,]),'declaration_list':([7,15,136,137,213,],[21,29,21,29,29,]),'bracket':([15,22,28,70,76,213,289,],[30,51,51,30,51,30,30,]),'equals':([16,74,214,246,],[32,120,32,120,]),'new_label':([19,22,24,],[45,47,47,]),'brackets':([22,28,76,],[49,49,123,]),'struct_block':([27,],[52,]),'expression':([31,32,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,182,187,188,190,197,223,241,242,250,259,261,270,280,282,283,291,292,],[55,73,79,55,84,107,108,109,110,111,118,119,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,166,169,55,165,183,184,185,195,196,212,165,212,244,252,253,255,264,266,279,284,212,212,212,212,]),'increase':([31,32,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,182,187,188,190,197,223,241,242,250,259,261,270,280,282,283,291,292,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,287,61,61,61,61,]),'decrease':([31,32,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,182,187,188,190,197,223,241,242,250,259,261,270,280,282,283,291,292,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,288,62,62,62,62,]),'function_call':([31,32,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,182,187,188,190,197,223,241,242,250,259,261,270,280,282,283,291,292,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'conversion':([31,32,48,50,54,56,57,58,59,60,71,72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,117,120,122,124,132,159,160,161,182,187,188,190,197,223,241,242,250,259,261,270,280,282,283,291,292,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'param':([47,],[77,]),'new_scope':([53,168,],[83,188,]),'param_val':([70,213,289,],[116,116,116,]),'add_function':([77,],[125,]),'parameter_list':([78,],[127,]),'parameter':([78,174,],[128,192,]),'declarations':([83,],[134,]),'expression_list':([117,132,190,],[164,177,224,]),'function_block':([121,125,240,262,265,290,296,],[167,172,251,267,272,294,297,]),'instructions':([188,282,283,],[197,291,292,]),'instruction':([188,197,282,283,291,292,],[198,227,198,198,227,227,]),'for':([188,197,282,283,291,292,],[202,202,202,202,202,202,]),'while':([188,197,282,283,291,292,],[203,203,203,203,203,203,]),'do':([188,197,282,283,291,292,],[204,204,204,204,204,204,]),'if':([188,197,282,283,290,291,292,],[205,205,205,205,295,205,205,]),'switch':([188,197,282,283,291,292,],[206,206,206,206,206,206,]),'label':([188,197,282,283,291,292,],[207,207,207,207,207,207,]),'goto':([188,197,282,283,291,292,],[208,208,208,208,208,208,]),'break':([188,197,282,283,291,292,],[209,209,209,209,209,209,]),'continue':([188,197,282,283,291,292,],[210,210,210,210,210,210,]),'return':([188,197,282,283,291,292,],[211,211,211,211,211,211,]),'label_add':([216,217,254,],[239,240,259,]),'for_declaration':([238,],[247,]),'if_marcker':([257,],[262,]),'while_add':([260,],[265,]),'cases':([263,],[268,]),'case':([263,268,],[269,276,]),'add_if_label':([267,],[274,]),'default':([268,],[277,]),'step_marcker':([271,],[280,]),'step':([280,],[285,]),'else_marcker':([281,],[290,]),'do_marcker':([293,],[296,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','minorC.py',410),
  ('init -> <empty>','init',0,'p_init_empty','minorC.py',425),
  ('program -> main','program',1,'p_program_main','minorC.py',429),
  ('program -> declars main','program',2,'p_program_global_declar_main','minorC.py',433),
  ('declars -> declars declar','declars',2,'p_declars','minorC.py',437),
  ('declars -> declar','declars',1,'p_declars_end','minorC.py',441),
  ('declar -> primitive_type function','declar',2,'p_declar_func','minorC.py',445),
  ('declar -> VOID function','declar',2,'p_fuction_id','minorC.py',449),
  ('declar -> declaration PUNTO_COMA','declar',2,'p_global_declaration','minorC.py',453),
  ('declar -> assignation PUNTO_COMA','declar',2,'p_global_assignation','minorC.py',457),
  ('declar -> struct','declar',1,'p_declar_struc','minorC.py',461),
  ('main -> INT MAIN new_label PAR_IZQ PAR_DER function_block','main',6,'p_main','minorC.py',465),
  ('new_label -> <empty>','new_label',0,'p_new_label','minorC.py',470),
  ('function -> ID new_label param add_function function_block','function',5,'p_function','minorC.py',481),
  ('add_function -> <empty>','add_function',0,'p_add_function','minorC.py',489),
  ('param -> PAR_IZQ PAR_DER','param',2,'p_param_empty','minorC.py',501),
  ('param -> PAR_IZQ parameter_list PAR_DER','param',3,'p_param','minorC.py',506),
  ('parameter_list -> parameter_list COMA parameter','parameter_list',3,'p_param_list','minorC.py',511),
  ('parameter_list -> parameter','parameter_list',1,'p_param_list_end','minorC.py',517),
  ('parameter -> primitive_type ID','parameter',2,'p_parameter','minorC.py',522),
  ('primitive_type -> INT','primitive_type',1,'p_primitive_type_int','minorC.py',527),
  ('primitive_type -> DOUBLE','primitive_type',1,'p_primitive_type_float','minorC.py',532),
  ('primitive_type -> CHAR','primitive_type',1,'p_primitive_type_char','minorC.py',537),
  ('primitive_type -> STRUCT ID','primitive_type',2,'p_primitive_type_struct','minorC.py',542),
  ('struct -> STRUCT ID struct_block PUNTO_COMA','struct',4,'p_struct','minorC.py',547),
  ('struct_block -> BRA_IZQ new_scope declarations BRA_DER','struct_block',4,'p_struct_block','minorC.py',551),
  ('function_block -> BRA_IZQ new_scope instructions BRA_DER','function_block',4,'p_function_block','minorC.py',556),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','minorC.py',561),
  ('function_block -> BRA_IZQ BRA_DER','function_block',2,'p_function_block_empty','minorC.py',565),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','minorC.py',569),
  ('instructions -> instruction','instructions',1,'p_instructions_end','minorC.py',573),
  ('instruction -> declaration PUNTO_COMA','instruction',2,'p_instruction_declaration','minorC.py',577),
  ('instruction -> assignation PUNTO_COMA','instruction',2,'p_instruction_assignation','minorC.py',581),
  ('instruction -> for','instruction',1,'p_instruction_for','minorC.py',585),
  ('instruction -> while','instruction',1,'p_instruction_while','minorC.py',589),
  ('instruction -> do PUNTO_COMA','instruction',2,'p_instruction_do','minorC.py',593),
  ('instruction -> if','instruction',1,'p_instruction_if','minorC.py',597),
  ('instruction -> switch','instruction',1,'p_instruction_switch','minorC.py',601),
  ('instruction -> label','instruction',1,'p_instruction_label','minorC.py',605),
  ('instruction -> goto PUNTO_COMA','instruction',2,'p_instruction_goto','minorC.py',609),
  ('instruction -> break PUNTO_COMA','instruction',2,'p_instruction_break','minorC.py',613),
  ('instruction -> continue PUNTO_COMA','instruction',2,'p_instruction_continue','minorC.py',617),
  ('instruction -> return PUNTO_COMA','instruction',2,'p_instruction_return','minorC.py',621),
  ('instruction -> expression PUNTO_COMA','instruction',2,'p_instruction_expression','minorC.py',625),
  ('instruction -> PUNTO_COMA','instruction',1,'p_instruction_null','minorC.py',629),
  ('declarations -> declarations declaration PUNTO_COMA','declarations',3,'p_declarations','minorC.py',633),
  ('declarations -> declaration PUNTO_COMA','declarations',2,'p_declarations_end','minorC.py',637),
  ('declaration -> primitive_type declaration_list','declaration',2,'p_declaration','minorC.py',641),
  ('declaration -> ID declaration_list','declaration',2,'p_declaration_struct','minorC.py',645),
  ('declaration_list -> declaration_list COMA ID IGUAL expression','declaration_list',5,'p_declaration_list_val','minorC.py',649),
  ('declaration_list -> declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER','declaration_list',8,'p_declaration_list_arr','minorC.py',656),
  ('declaration_list -> declaration_list COMA ID','declaration_list',3,'p_declaration_list_id','minorC.py',668),
  ('declaration_list -> declaration_list COMA ID brackets','declaration_list',4,'p_declaration_list_id_bracket','minorC.py',675),
  ('declaration_list -> declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA','declaration_list',7,'p_declaration_string_declaration','minorC.py',682),
  ('declaration_list -> ID IGUAL expression','declaration_list',3,'p_declaration_list_val_end','minorC.py',689),
  ('declaration_list -> ID brackets IGUAL BRA_IZQ expression_list BRA_DER','declaration_list',6,'p_declaration_list_arr_end','minorC.py',696),
  ('declaration_list -> ID','declaration_list',1,'p_declaration_list_id_end','minorC.py',708),
  ('declaration_list -> ID brackets','declaration_list',2,'p_declaration_list_id_bracket_end','minorC.py',715),
  ('declaration_list -> ID COR_IZQ COR_DER IGUAL CADENA','declaration_list',5,'p_declaration_string_declaration_end','minorC.py',722),
  ('identifier -> ID','identifier',1,'p_identifier','minorC.py',731),
  ('identifier -> ID bracket','identifier',2,'p_identifier_array','minorC.py',742),
  ('brackets -> bracket','brackets',1,'p_brackets','minorC.py',749),
  ('brackets -> COR_IZQ COR_DER','brackets',2,'p_brackets_empty','minorC.py',754),
  ('bracket -> bracket COR_IZQ expression COR_DER','bracket',4,'p_bracket','minorC.py',759),
  ('bracket -> COR_IZQ expression COR_DER','bracket',3,'p_bracket_end','minorC.py',765),
  ('assignation -> identifier equals expression','assignation',3,'p_assignation','minorC.py',770),
  ('assignation -> identifier PUNTO ID equals expression','assignation',5,'p_assignation_struct','minorC.py',776),
  ('equals -> IGUAL','equals',1,'p_equals','minorC.py',783),
  ('equals -> SUMA_IGUAL','equals',1,'p_equals','minorC.py',784),
  ('equals -> RESTA_IGUAL','equals',1,'p_equals','minorC.py',785),
  ('equals -> MULT_IGUAL','equals',1,'p_equals','minorC.py',786),
  ('equals -> DIV_IGUAL','equals',1,'p_equals','minorC.py',787),
  ('equals -> MOD_IGUAL','equals',1,'p_equals','minorC.py',788),
  ('equals -> SHIFT_IZQ_IGUAL','equals',1,'p_equals','minorC.py',789),
  ('equals -> SHIFT_DER_IGUAL','equals',1,'p_equals','minorC.py',790),
  ('equals -> AND_BIT_IGUAL','equals',1,'p_equals','minorC.py',791),
  ('equals -> XOR_BIT_IGUAL','equals',1,'p_equals','minorC.py',792),
  ('equals -> OR_BIT_IGUAL','equals',1,'p_equals','minorC.py',793),
  ('if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label','if',7,'p_if','minorC.py',818),
  ('add_if_label -> <empty>','add_if_label',0,'p_add_if_label','minorC.py',828),
  ('if_marcker -> <empty>','if_marcker',0,'p_if_marcker','minorC.py',832),
  ('if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if','if',10,'p_if_else_if','minorC.py',837),
  ('else_marcker -> <empty>','else_marcker',0,'p_else_marcker','minorC.py',842),
  ('if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block','if',10,'p_if_else','minorC.py',846),
  ('while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block','while',7,'p_while','minorC.py',859),
  ('while_add -> <empty>','while_add',0,'p_while_add','minorC.py',866),
  ('label_add -> <empty>','label_add',0,'p_label_add','minorC.py',872),
  ('do -> DO label_add function_block WHILE PAR_IZQ expression PAR_DER','do',7,'p_do','minorC.py',884),
  ('for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block','for',12,'p_for','minorC.py',892),
  ('do_marcker -> <empty>','do_marcker',0,'p_do_marcker','minorC.py',898),
  ('step_marcker -> <empty>','step_marcker',0,'p_step_marcker','minorC.py',903),
  ('for_declaration -> declaration','for_declaration',1,'p_for_declaration_declaration','minorC.py',910),
  ('for_declaration -> assignation','for_declaration',1,'p_for_declaration_assignation','minorC.py',915),
  ('step -> assignation','step',1,'p_step_assigantion','minorC.py',920),
  ('step -> increase','step',1,'p_step_increase','minorC.py',925),
  ('step -> decrease','step',1,'p_step_decrease','minorC.py',930),
  ('switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER','switch',7,'p_switch','minorC.py',935),
  ('cases -> cases case','cases',2,'p_cases','minorC.py',940),
  ('cases -> cases default','cases',2,'p_cases_default','minorC.py',944),
  ('cases -> case','cases',1,'p_cases_end','minorC.py',948),
  ('case -> CASE expression DOS_PUNTOS instructions','case',4,'p_case','minorC.py',952),
  ('default -> DEFAULT DOS_PUNTOS instructions','default',3,'p_default','minorC.py',956),
  ('label -> ID DOS_PUNTOS','label',2,'p_label','minorC.py',960),
  ('goto -> GOTO ID','goto',2,'p_goto','minorC.py',966),
  ('break -> BREAK','break',1,'p_break','minorC.py',971),
  ('continue -> CONTINUE','continue',1,'p_continue','minorC.py',975),
  ('return -> RETURN expression','return',2,'p_return','minorC.py',979),
  ('return -> RETURN','return',1,'p_return_empty','minorC.py',988),
  ('function_call -> ID param_val','function_call',2,'p_function_call','minorC.py',994),
  ('param_val -> PAR_IZQ PAR_DER','param_val',2,'p_param_val_empty','minorC.py',1029),
  ('param_val -> PAR_IZQ expression_list PAR_DER','param_val',3,'p_param_val','minorC.py',1034),
  ('expression_list -> expression_list COMA expression','expression_list',3,'p_expression_list','minorC.py',1039),
  ('expression_list -> expression','expression_list',1,'p_expression_list_end','minorC.py',1045),
  ('expression -> expression SUMA expression','expression',3,'p_expression','minorC.py',1050),
  ('expression -> expression RESTA expression','expression',3,'p_expression','minorC.py',1051),
  ('expression -> expression MULT expression','expression',3,'p_expression','minorC.py',1052),
  ('expression -> expression DIV expression','expression',3,'p_expression','minorC.py',1053),
  ('expression -> expression MOD expression','expression',3,'p_expression','minorC.py',1054),
  ('expression -> expression AND expression','expression',3,'p_expression','minorC.py',1055),
  ('expression -> expression OR expression','expression',3,'p_expression','minorC.py',1056),
  ('expression -> expression ES_IGUAL expression','expression',3,'p_expression','minorC.py',1057),
  ('expression -> expression NO_IGUAL expression','expression',3,'p_expression','minorC.py',1058),
  ('expression -> expression MENOR_IGUAL expression','expression',3,'p_expression','minorC.py',1059),
  ('expression -> expression MAYOR_IGUAL expression','expression',3,'p_expression','minorC.py',1060),
  ('expression -> expression MENOR expression','expression',3,'p_expression','minorC.py',1061),
  ('expression -> expression MAYOR expression','expression',3,'p_expression','minorC.py',1062),
  ('expression -> expression AND_BIT expression','expression',3,'p_expression','minorC.py',1063),
  ('expression -> expression OR_BIT expression','expression',3,'p_expression','minorC.py',1064),
  ('expression -> expression XOR_BIT expression','expression',3,'p_expression','minorC.py',1065),
  ('expression -> expression SHIFT_IZQ expression','expression',3,'p_expression','minorC.py',1066),
  ('expression -> expression SHIFT_DER expression','expression',3,'p_expression','minorC.py',1067),
  ('expression -> RESTA expression','expression',2,'p_expression','minorC.py',1068),
  ('expression -> AND_BIT expression','expression',2,'p_expression','minorC.py',1069),
  ('expression -> NOT expression','expression',2,'p_expression','minorC.py',1070),
  ('expression -> NOT_BIT expression','expression',2,'p_expression','minorC.py',1071),
  ('expression -> PAR_IZQ expression PAR_DER','expression',3,'p_expression','minorC.py',1072),
  ('expression -> expression INTERROGACION expression DOS_PUNTOS expression','expression',5,'p_expression','minorC.py',1073),
  ('expression -> increase','expression',1,'p_expression_increase','minorC.py',1192),
  ('expression -> decrease','expression',1,'p_expression_decrease','minorC.py',1197),
  ('expression -> ENTERO','expression',1,'p_expression_entero','minorC.py',1202),
  ('expression -> DECIMAL','expression',1,'p_expression_decimal','minorC.py',1207),
  ('expression -> CARACTER','expression',1,'p_expression_caracter','minorC.py',1212),
  ('expression -> CADENA','expression',1,'p_expression_cadena','minorC.py',1217),
  ('expression -> function_call','expression',1,'p_expression_call','minorC.py',1222),
  ('expression -> conversion','expression',1,'p_expression_conversion','minorC.py',1227),
  ('expression -> identifier','expression',1,'p_expression_identifier','minorC.py',1232),
  ('expression -> identifier PUNTO ID','expression',3,'p_struct_property','minorC.py',1237),
  ('conversion -> PAR_IZQ INT PAR_DER expression','conversion',4,'p_conversion_int','minorC.py',1242),
  ('conversion -> PAR_IZQ DOUBLE PAR_DER expression','conversion',4,'p_conversion_float','minorC.py',1248),
  ('conversion -> PAR_IZQ CHAR PAR_DER expression','conversion',4,'p_conversion_char','minorC.py',1254),
  ('increase -> SUMA_SUMA expression','increase',2,'p_increase_pre','minorC.py',1260),
  ('increase -> expression SUMA_SUMA','increase',2,'p_increase_post','minorC.py',1265),
  ('decrease -> RESTA_RESTA expression','decrease',2,'p_decrease_pre','minorC.py',1270),
  ('decrease -> expression RESTA_RESTA','decrease',2,'p_decrease_post','minorC.py',1275),
]
