Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    COMENTARIO_MULTILINEA

Grammar

Rule 0     S' -> init
Rule 1     init -> program
Rule 2     init -> <empty>
Rule 3     program -> main
Rule 4     program -> declars main
Rule 5     declars -> declars declar
Rule 6     declars -> declar
Rule 7     declar -> primitive_type function
Rule 8     declar -> VOID function
Rule 9     declar -> declaration PUNTO_COMA
Rule 10    declar -> assignation PUNTO_COMA
Rule 11    declar -> struct
Rule 12    main -> INT MAIN new_label PAR_IZQ PAR_DER function_block
Rule 13    new_label -> <empty>
Rule 14    function -> ID new_label param add_function function_block
Rule 15    add_function -> <empty>
Rule 16    param -> PAR_IZQ PAR_DER
Rule 17    param -> PAR_IZQ parameter_list PAR_DER
Rule 18    parameter_list -> parameter_list COMA parameter
Rule 19    parameter_list -> parameter
Rule 20    parameter -> primitive_type ID
Rule 21    primitive_type -> INT
Rule 22    primitive_type -> DOUBLE
Rule 23    primitive_type -> CHAR
Rule 24    primitive_type -> STRUCT ID
Rule 25    struct -> STRUCT ID struct_block PUNTO_COMA
Rule 26    struct_block -> BRA_IZQ new_scope declarations BRA_DER
Rule 27    function_block -> BRA_IZQ new_scope instructions BRA_DER
Rule 28    new_scope -> <empty>
Rule 29    function_block -> BRA_IZQ BRA_DER
Rule 30    instructions -> instructions instruction
Rule 31    instructions -> instruction
Rule 32    instruction -> declaration PUNTO_COMA
Rule 33    instruction -> assignation PUNTO_COMA
Rule 34    instruction -> for
Rule 35    instruction -> while
Rule 36    instruction -> do PUNTO_COMA
Rule 37    instruction -> if
Rule 38    instruction -> switch
Rule 39    instruction -> label
Rule 40    instruction -> goto PUNTO_COMA
Rule 41    instruction -> break PUNTO_COMA
Rule 42    instruction -> continue PUNTO_COMA
Rule 43    instruction -> return PUNTO_COMA
Rule 44    instruction -> expression PUNTO_COMA
Rule 45    instruction -> PUNTO_COMA
Rule 46    declarations -> declarations declaration PUNTO_COMA
Rule 47    declarations -> declaration PUNTO_COMA
Rule 48    declaration -> primitive_type declaration_list
Rule 49    declaration -> ID declaration_list
Rule 50    declaration_list -> declaration_list COMA ID IGUAL expression
Rule 51    declaration_list -> declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
Rule 52    declaration_list -> declaration_list COMA ID
Rule 53    declaration_list -> declaration_list COMA ID brackets
Rule 54    declaration_list -> declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA
Rule 55    declaration_list -> ID IGUAL expression
Rule 56    declaration_list -> ID brackets IGUAL BRA_IZQ expression_list BRA_DER
Rule 57    declaration_list -> ID
Rule 58    declaration_list -> ID brackets
Rule 59    declaration_list -> ID COR_IZQ COR_DER IGUAL CADENA
Rule 60    identifier -> ID
Rule 61    identifier -> ID bracket
Rule 62    brackets -> bracket
Rule 63    brackets -> COR_IZQ COR_DER
Rule 64    bracket -> bracket COR_IZQ expression COR_DER
Rule 65    bracket -> COR_IZQ expression COR_DER
Rule 66    assignation -> identifier equals expression
Rule 67    assignation -> identifier PUNTO ID equals expression
Rule 68    equals -> IGUAL
Rule 69    equals -> SUMA_IGUAL
Rule 70    equals -> RESTA_IGUAL
Rule 71    equals -> MULT_IGUAL
Rule 72    equals -> DIV_IGUAL
Rule 73    equals -> MOD_IGUAL
Rule 74    equals -> SHIFT_IZQ_IGUAL
Rule 75    equals -> SHIFT_DER_IGUAL
Rule 76    equals -> AND_BIT_IGUAL
Rule 77    equals -> XOR_BIT_IGUAL
Rule 78    equals -> OR_BIT_IGUAL
Rule 79    if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
Rule 80    add_if_label -> <empty>
Rule 81    if_marcker -> <empty>
Rule 82    if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
Rule 83    else_marcker -> <empty>
Rule 84    if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
Rule 85    while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block
Rule 86    while_add -> <empty>
Rule 87    label_add -> <empty>
Rule 88    do -> DO label_add function_block WHILE PAR_IZQ expression PAR_DER
Rule 89    for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
Rule 90    do_marcker -> <empty>
Rule 91    step_marcker -> <empty>
Rule 92    for_declaration -> declaration
Rule 93    for_declaration -> assignation
Rule 94    step -> assignation
Rule 95    step -> increase
Rule 96    step -> decrease
Rule 97    switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER
Rule 98    cases -> cases case
Rule 99    cases -> cases default
Rule 100   cases -> case
Rule 101   case -> CASE expression DOS_PUNTOS instructions
Rule 102   default -> DEFAULT DOS_PUNTOS instructions
Rule 103   label -> ID DOS_PUNTOS
Rule 104   goto -> GOTO ID
Rule 105   break -> BREAK
Rule 106   continue -> CONTINUE
Rule 107   return -> RETURN expression
Rule 108   return -> RETURN
Rule 109   function_call -> ID param_val
Rule 110   param_val -> PAR_IZQ PAR_DER
Rule 111   param_val -> PAR_IZQ expression_list PAR_DER
Rule 112   expression_list -> expression_list COMA expression
Rule 113   expression_list -> expression
Rule 114   expression -> expression SUMA expression
Rule 115   expression -> expression RESTA expression
Rule 116   expression -> expression MULT expression
Rule 117   expression -> expression DIV expression
Rule 118   expression -> expression MOD expression
Rule 119   expression -> expression AND expression
Rule 120   expression -> expression OR expression
Rule 121   expression -> expression ES_IGUAL expression
Rule 122   expression -> expression NO_IGUAL expression
Rule 123   expression -> expression MENOR_IGUAL expression
Rule 124   expression -> expression MAYOR_IGUAL expression
Rule 125   expression -> expression MENOR expression
Rule 126   expression -> expression MAYOR expression
Rule 127   expression -> expression AND_BIT expression
Rule 128   expression -> expression OR_BIT expression
Rule 129   expression -> expression XOR_BIT expression
Rule 130   expression -> expression SHIFT_IZQ expression
Rule 131   expression -> expression SHIFT_DER expression
Rule 132   expression -> RESTA expression
Rule 133   expression -> AND_BIT expression
Rule 134   expression -> NOT expression
Rule 135   expression -> NOT_BIT expression
Rule 136   expression -> PAR_IZQ expression PAR_DER
Rule 137   expression -> expression INTERROGACION expression DOS_PUNTOS expression
Rule 138   expression -> increase
Rule 139   expression -> decrease
Rule 140   expression -> ENTERO
Rule 141   expression -> DECIMAL
Rule 142   expression -> CARACTER
Rule 143   expression -> CADENA
Rule 144   expression -> function_call
Rule 145   expression -> conversion
Rule 146   expression -> identifier
Rule 147   expression -> identifier PUNTO ID
Rule 148   conversion -> PAR_IZQ INT PAR_DER expression
Rule 149   conversion -> PAR_IZQ DOUBLE PAR_DER expression
Rule 150   conversion -> PAR_IZQ CHAR PAR_DER expression
Rule 151   increase -> SUMA_SUMA expression
Rule 152   increase -> expression SUMA_SUMA
Rule 153   decrease -> RESTA_RESTA expression
Rule 154   decrease -> expression RESTA_RESTA

Terminals, with rules where they appear

AND                  : 119
AND_BIT              : 127 133
AND_BIT_IGUAL        : 76
BRA_DER              : 26 27 29 51 56 97
BRA_IZQ              : 26 27 29 51 56 97
BREAK                : 105
CADENA               : 54 59 143
CARACTER             : 142
CASE                 : 101
CHAR                 : 23 150
COMA                 : 18 50 51 52 53 54 112
COMENTARIO           : 
COMENTARIO_MULTILINEA : 
CONTINUE             : 106
COR_DER              : 54 59 63 64 65
COR_IZQ              : 54 59 63 64 65
DECIMAL              : 141
DEFAULT              : 102
DIV                  : 117
DIV_IGUAL            : 72
DO                   : 88
DOS_PUNTOS           : 101 102 103 137
DOUBLE               : 22 149
ELSE                 : 82 84
ENTERO               : 140
ES_IGUAL             : 121
FOR                  : 89
GOTO                 : 104
ID                   : 14 20 24 25 49 50 51 52 53 54 55 56 57 58 59 60 61 67 103 104 109 147
IF                   : 79 82 84
IGUAL                : 50 51 54 55 56 59 68
INT                  : 12 21 148
INTERROGACION        : 137
MAIN                 : 12
MAYOR                : 126
MAYOR_IGUAL          : 124
MENOR                : 125
MENOR_IGUAL          : 123
MOD                  : 118
MOD_IGUAL            : 73
MULT                 : 116
MULT_IGUAL           : 71
NOT                  : 134
NOT_BIT              : 135
NO_IGUAL             : 122
OR                   : 120
OR_BIT               : 128
OR_BIT_IGUAL         : 78
PAR_DER              : 12 16 17 79 82 84 85 88 89 97 110 111 136 148 149 150
PAR_IZQ              : 12 16 17 79 82 84 85 88 89 97 110 111 136 148 149 150
PUNTO                : 67 147
PUNTO_COMA           : 9 10 25 32 33 36 40 41 42 43 44 45 46 47 89 89
RESTA                : 115 132
RESTA_IGUAL          : 70
RESTA_RESTA          : 153 154
RETURN               : 107 108
SHIFT_DER            : 131
SHIFT_DER_IGUAL      : 75
SHIFT_IZQ            : 130
SHIFT_IZQ_IGUAL      : 74
STRUCT               : 24 25
SUMA                 : 114
SUMA_IGUAL           : 69
SUMA_SUMA            : 151 152
SWITCH               : 97
VOID                 : 8
WHILE                : 85 88
XOR_BIT              : 129
XOR_BIT_IGUAL        : 77
error                : 

Nonterminals, with rules where they appear

add_function         : 14
add_if_label         : 79 82 84
assignation          : 10 33 93 94
bracket              : 61 62 64
brackets             : 51 53 56 58
break                : 41
case                 : 98 100
cases                : 97 98 99
continue             : 42
conversion           : 145
declar               : 5 6
declaration          : 9 32 46 47 92
declaration_list     : 48 49 50 51 52 53 54
declarations         : 26 46
declars              : 4 5
decrease             : 96 139
default              : 99
do                   : 36
do_marcker           : 89
else_marcker         : 82 84
equals               : 66 67
expression           : 44 50 55 64 65 66 67 79 82 84 85 88 89 97 101 107 112 113 114 114 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 133 134 135 136 137 137 137 148 149 150 151 152 153 154
expression_list      : 51 56 111 112
for                  : 34
for_declaration      : 89
function             : 7 8
function_block       : 12 14 79 82 84 84 85 88 89
function_call        : 144
goto                 : 40
identifier           : 66 67 146 147
if                   : 37 82
if_marcker           : 79 82 84
increase             : 95 138
init                 : 0
instruction          : 30 31
instructions         : 27 30 101 102
label                : 39
label_add            : 85 88 89
main                 : 3 4
new_label            : 12 14
new_scope            : 26 27
param                : 14
param_val            : 109
parameter            : 18 19
parameter_list       : 17 18
primitive_type       : 7 20 48
program              : 1
return               : 43
step                 : 89
step_marcker         : 89
struct               : 11
struct_block         : 25
switch               : 38
while                : 35
while_add            : 85

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . program
    (2) init -> .
    (3) program -> . main
    (4) program -> . declars main
    (12) main -> . INT MAIN new_label PAR_IZQ PAR_DER function_block
    (5) declars -> . declars declar
    (6) declars -> . declar
    (7) declar -> . primitive_type function
    (8) declar -> . VOID function
    (9) declar -> . declaration PUNTO_COMA
    (10) declar -> . assignation PUNTO_COMA
    (11) declar -> . struct
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (25) struct -> . STRUCT ID struct_block PUNTO_COMA
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    $end            reduce using rule 2 (init -> .)
    INT             shift and go to state 5
    VOID            shift and go to state 8
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 14
    ID              shift and go to state 15

    init                           shift and go to state 1
    program                        shift and go to state 2
    main                           shift and go to state 3
    declars                        shift and go to state 4
    declar                         shift and go to state 6
    primitive_type                 shift and go to state 7
    declaration                    shift and go to state 9
    assignation                    shift and go to state 10
    struct                         shift and go to state 11
    identifier                     shift and go to state 16

state 1

    (0) S' -> init .



state 2

    (1) init -> program .

    $end            reduce using rule 1 (init -> program .)


state 3

    (3) program -> main .

    $end            reduce using rule 3 (program -> main .)


state 4

    (4) program -> declars . main
    (5) declars -> declars . declar
    (12) main -> . INT MAIN new_label PAR_IZQ PAR_DER function_block
    (7) declar -> . primitive_type function
    (8) declar -> . VOID function
    (9) declar -> . declaration PUNTO_COMA
    (10) declar -> . assignation PUNTO_COMA
    (11) declar -> . struct
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (25) struct -> . STRUCT ID struct_block PUNTO_COMA
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    INT             shift and go to state 5
    VOID            shift and go to state 8
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 14
    ID              shift and go to state 15

    main                           shift and go to state 17
    declar                         shift and go to state 18
    primitive_type                 shift and go to state 7
    declaration                    shift and go to state 9
    assignation                    shift and go to state 10
    struct                         shift and go to state 11
    identifier                     shift and go to state 16

state 5

    (12) main -> INT . MAIN new_label PAR_IZQ PAR_DER function_block
    (21) primitive_type -> INT .

    MAIN            shift and go to state 19
    ID              reduce using rule 21 (primitive_type -> INT .)


state 6

    (6) declars -> declar .

    INT             reduce using rule 6 (declars -> declar .)
    VOID            reduce using rule 6 (declars -> declar .)
    DOUBLE          reduce using rule 6 (declars -> declar .)
    CHAR            reduce using rule 6 (declars -> declar .)
    STRUCT          reduce using rule 6 (declars -> declar .)
    ID              reduce using rule 6 (declars -> declar .)


state 7

    (7) declar -> primitive_type . function
    (48) declaration -> primitive_type . declaration_list
    (14) function -> . ID new_label param add_function function_block
    (50) declaration_list -> . declaration_list COMA ID IGUAL expression
    (51) declaration_list -> . declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> . declaration_list COMA ID
    (53) declaration_list -> . declaration_list COMA ID brackets
    (54) declaration_list -> . declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA
    (55) declaration_list -> . ID IGUAL expression
    (56) declaration_list -> . ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (57) declaration_list -> . ID
    (58) declaration_list -> . ID brackets
    (59) declaration_list -> . ID COR_IZQ COR_DER IGUAL CADENA

    ID              shift and go to state 22

    function                       shift and go to state 20
    declaration_list               shift and go to state 21

state 8

    (8) declar -> VOID . function
    (14) function -> . ID new_label param add_function function_block

    ID              shift and go to state 24

    function                       shift and go to state 23

state 9

    (9) declar -> declaration . PUNTO_COMA

    PUNTO_COMA      shift and go to state 25


state 10

    (10) declar -> assignation . PUNTO_COMA

    PUNTO_COMA      shift and go to state 26


state 11

    (11) declar -> struct .

    INT             reduce using rule 11 (declar -> struct .)
    VOID            reduce using rule 11 (declar -> struct .)
    DOUBLE          reduce using rule 11 (declar -> struct .)
    CHAR            reduce using rule 11 (declar -> struct .)
    STRUCT          reduce using rule 11 (declar -> struct .)
    ID              reduce using rule 11 (declar -> struct .)


state 12

    (22) primitive_type -> DOUBLE .

    ID              reduce using rule 22 (primitive_type -> DOUBLE .)


state 13

    (23) primitive_type -> CHAR .

    ID              reduce using rule 23 (primitive_type -> CHAR .)


state 14

    (24) primitive_type -> STRUCT . ID
    (25) struct -> STRUCT . ID struct_block PUNTO_COMA

    ID              shift and go to state 27


state 15

    (49) declaration -> ID . declaration_list
    (60) identifier -> ID .
    (61) identifier -> ID . bracket
    (50) declaration_list -> . declaration_list COMA ID IGUAL expression
    (51) declaration_list -> . declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> . declaration_list COMA ID
    (53) declaration_list -> . declaration_list COMA ID brackets
    (54) declaration_list -> . declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA
    (55) declaration_list -> . ID IGUAL expression
    (56) declaration_list -> . ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (57) declaration_list -> . ID
    (58) declaration_list -> . ID brackets
    (59) declaration_list -> . ID COR_IZQ COR_DER IGUAL CADENA
    (64) bracket -> . bracket COR_IZQ expression COR_DER
    (65) bracket -> . COR_IZQ expression COR_DER

    PUNTO           reduce using rule 60 (identifier -> ID .)
    IGUAL           reduce using rule 60 (identifier -> ID .)
    SUMA_IGUAL      reduce using rule 60 (identifier -> ID .)
    RESTA_IGUAL     reduce using rule 60 (identifier -> ID .)
    MULT_IGUAL      reduce using rule 60 (identifier -> ID .)
    DIV_IGUAL       reduce using rule 60 (identifier -> ID .)
    MOD_IGUAL       reduce using rule 60 (identifier -> ID .)
    SHIFT_IZQ_IGUAL reduce using rule 60 (identifier -> ID .)
    SHIFT_DER_IGUAL reduce using rule 60 (identifier -> ID .)
    AND_BIT_IGUAL   reduce using rule 60 (identifier -> ID .)
    XOR_BIT_IGUAL   reduce using rule 60 (identifier -> ID .)
    OR_BIT_IGUAL    reduce using rule 60 (identifier -> ID .)
    ID              shift and go to state 28
    COR_IZQ         shift and go to state 31

    declaration_list               shift and go to state 29
    bracket                        shift and go to state 30

state 16

    (66) assignation -> identifier . equals expression
    (67) assignation -> identifier . PUNTO ID equals expression
    (68) equals -> . IGUAL
    (69) equals -> . SUMA_IGUAL
    (70) equals -> . RESTA_IGUAL
    (71) equals -> . MULT_IGUAL
    (72) equals -> . DIV_IGUAL
    (73) equals -> . MOD_IGUAL
    (74) equals -> . SHIFT_IZQ_IGUAL
    (75) equals -> . SHIFT_DER_IGUAL
    (76) equals -> . AND_BIT_IGUAL
    (77) equals -> . XOR_BIT_IGUAL
    (78) equals -> . OR_BIT_IGUAL

    PUNTO           shift and go to state 33
    IGUAL           shift and go to state 34
    SUMA_IGUAL      shift and go to state 35
    RESTA_IGUAL     shift and go to state 36
    MULT_IGUAL      shift and go to state 37
    DIV_IGUAL       shift and go to state 38
    MOD_IGUAL       shift and go to state 39
    SHIFT_IZQ_IGUAL shift and go to state 40
    SHIFT_DER_IGUAL shift and go to state 41
    AND_BIT_IGUAL   shift and go to state 42
    XOR_BIT_IGUAL   shift and go to state 43
    OR_BIT_IGUAL    shift and go to state 44

    equals                         shift and go to state 32

state 17

    (4) program -> declars main .

    $end            reduce using rule 4 (program -> declars main .)


state 18

    (5) declars -> declars declar .

    INT             reduce using rule 5 (declars -> declars declar .)
    VOID            reduce using rule 5 (declars -> declars declar .)
    DOUBLE          reduce using rule 5 (declars -> declars declar .)
    CHAR            reduce using rule 5 (declars -> declars declar .)
    STRUCT          reduce using rule 5 (declars -> declars declar .)
    ID              reduce using rule 5 (declars -> declars declar .)


state 19

    (12) main -> INT MAIN . new_label PAR_IZQ PAR_DER function_block
    (13) new_label -> .

    PAR_IZQ         reduce using rule 13 (new_label -> .)

    new_label                      shift and go to state 45

state 20

    (7) declar -> primitive_type function .

    INT             reduce using rule 7 (declar -> primitive_type function .)
    VOID            reduce using rule 7 (declar -> primitive_type function .)
    DOUBLE          reduce using rule 7 (declar -> primitive_type function .)
    CHAR            reduce using rule 7 (declar -> primitive_type function .)
    STRUCT          reduce using rule 7 (declar -> primitive_type function .)
    ID              reduce using rule 7 (declar -> primitive_type function .)


state 21

    (48) declaration -> primitive_type declaration_list .
    (50) declaration_list -> declaration_list . COMA ID IGUAL expression
    (51) declaration_list -> declaration_list . COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> declaration_list . COMA ID
    (53) declaration_list -> declaration_list . COMA ID brackets
    (54) declaration_list -> declaration_list . COMA ID COR_IZQ COR_DER IGUAL CADENA

    PUNTO_COMA      reduce using rule 48 (declaration -> primitive_type declaration_list .)
    COMA            shift and go to state 46


state 22

    (14) function -> ID . new_label param add_function function_block
    (55) declaration_list -> ID . IGUAL expression
    (56) declaration_list -> ID . brackets IGUAL BRA_IZQ expression_list BRA_DER
    (57) declaration_list -> ID .
    (58) declaration_list -> ID . brackets
    (59) declaration_list -> ID . COR_IZQ COR_DER IGUAL CADENA
    (13) new_label -> .
    (62) brackets -> . bracket
    (63) brackets -> . COR_IZQ COR_DER
    (64) bracket -> . bracket COR_IZQ expression COR_DER
    (65) bracket -> . COR_IZQ expression COR_DER

    IGUAL           shift and go to state 48
    COMA            reduce using rule 57 (declaration_list -> ID .)
    PUNTO_COMA      reduce using rule 57 (declaration_list -> ID .)
    COR_IZQ         shift and go to state 50
    PAR_IZQ         reduce using rule 13 (new_label -> .)

    new_label                      shift and go to state 47
    brackets                       shift and go to state 49
    bracket                        shift and go to state 51

state 23

    (8) declar -> VOID function .

    INT             reduce using rule 8 (declar -> VOID function .)
    VOID            reduce using rule 8 (declar -> VOID function .)
    DOUBLE          reduce using rule 8 (declar -> VOID function .)
    CHAR            reduce using rule 8 (declar -> VOID function .)
    STRUCT          reduce using rule 8 (declar -> VOID function .)
    ID              reduce using rule 8 (declar -> VOID function .)


state 24

    (14) function -> ID . new_label param add_function function_block
    (13) new_label -> .

    PAR_IZQ         reduce using rule 13 (new_label -> .)

    new_label                      shift and go to state 47

state 25

    (9) declar -> declaration PUNTO_COMA .

    INT             reduce using rule 9 (declar -> declaration PUNTO_COMA .)
    VOID            reduce using rule 9 (declar -> declaration PUNTO_COMA .)
    DOUBLE          reduce using rule 9 (declar -> declaration PUNTO_COMA .)
    CHAR            reduce using rule 9 (declar -> declaration PUNTO_COMA .)
    STRUCT          reduce using rule 9 (declar -> declaration PUNTO_COMA .)
    ID              reduce using rule 9 (declar -> declaration PUNTO_COMA .)


state 26

    (10) declar -> assignation PUNTO_COMA .

    INT             reduce using rule 10 (declar -> assignation PUNTO_COMA .)
    VOID            reduce using rule 10 (declar -> assignation PUNTO_COMA .)
    DOUBLE          reduce using rule 10 (declar -> assignation PUNTO_COMA .)
    CHAR            reduce using rule 10 (declar -> assignation PUNTO_COMA .)
    STRUCT          reduce using rule 10 (declar -> assignation PUNTO_COMA .)
    ID              reduce using rule 10 (declar -> assignation PUNTO_COMA .)


state 27

    (24) primitive_type -> STRUCT ID .
    (25) struct -> STRUCT ID . struct_block PUNTO_COMA
    (26) struct_block -> . BRA_IZQ new_scope declarations BRA_DER

    ID              reduce using rule 24 (primitive_type -> STRUCT ID .)
    BRA_IZQ         shift and go to state 53

    struct_block                   shift and go to state 52

state 28

    (55) declaration_list -> ID . IGUAL expression
    (56) declaration_list -> ID . brackets IGUAL BRA_IZQ expression_list BRA_DER
    (57) declaration_list -> ID .
    (58) declaration_list -> ID . brackets
    (59) declaration_list -> ID . COR_IZQ COR_DER IGUAL CADENA
    (62) brackets -> . bracket
    (63) brackets -> . COR_IZQ COR_DER
    (64) bracket -> . bracket COR_IZQ expression COR_DER
    (65) bracket -> . COR_IZQ expression COR_DER

    IGUAL           shift and go to state 48
    COMA            reduce using rule 57 (declaration_list -> ID .)
    PUNTO_COMA      reduce using rule 57 (declaration_list -> ID .)
    COR_IZQ         shift and go to state 50

    brackets                       shift and go to state 49
    bracket                        shift and go to state 51

state 29

    (49) declaration -> ID declaration_list .
    (50) declaration_list -> declaration_list . COMA ID IGUAL expression
    (51) declaration_list -> declaration_list . COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> declaration_list . COMA ID
    (53) declaration_list -> declaration_list . COMA ID brackets
    (54) declaration_list -> declaration_list . COMA ID COR_IZQ COR_DER IGUAL CADENA

    PUNTO_COMA      reduce using rule 49 (declaration -> ID declaration_list .)
    COMA            shift and go to state 46


state 30

    (61) identifier -> ID bracket .
    (64) bracket -> bracket . COR_IZQ expression COR_DER

    PUNTO           reduce using rule 61 (identifier -> ID bracket .)
    IGUAL           reduce using rule 61 (identifier -> ID bracket .)
    SUMA_IGUAL      reduce using rule 61 (identifier -> ID bracket .)
    RESTA_IGUAL     reduce using rule 61 (identifier -> ID bracket .)
    MULT_IGUAL      reduce using rule 61 (identifier -> ID bracket .)
    DIV_IGUAL       reduce using rule 61 (identifier -> ID bracket .)
    MOD_IGUAL       reduce using rule 61 (identifier -> ID bracket .)
    SHIFT_IZQ_IGUAL reduce using rule 61 (identifier -> ID bracket .)
    SHIFT_DER_IGUAL reduce using rule 61 (identifier -> ID bracket .)
    AND_BIT_IGUAL   reduce using rule 61 (identifier -> ID bracket .)
    XOR_BIT_IGUAL   reduce using rule 61 (identifier -> ID bracket .)
    OR_BIT_IGUAL    reduce using rule 61 (identifier -> ID bracket .)
    COR_DER         reduce using rule 61 (identifier -> ID bracket .)
    SUMA            reduce using rule 61 (identifier -> ID bracket .)
    RESTA           reduce using rule 61 (identifier -> ID bracket .)
    MULT            reduce using rule 61 (identifier -> ID bracket .)
    DIV             reduce using rule 61 (identifier -> ID bracket .)
    MOD             reduce using rule 61 (identifier -> ID bracket .)
    AND             reduce using rule 61 (identifier -> ID bracket .)
    OR              reduce using rule 61 (identifier -> ID bracket .)
    ES_IGUAL        reduce using rule 61 (identifier -> ID bracket .)
    NO_IGUAL        reduce using rule 61 (identifier -> ID bracket .)
    MENOR_IGUAL     reduce using rule 61 (identifier -> ID bracket .)
    MAYOR_IGUAL     reduce using rule 61 (identifier -> ID bracket .)
    MENOR           reduce using rule 61 (identifier -> ID bracket .)
    MAYOR           reduce using rule 61 (identifier -> ID bracket .)
    AND_BIT         reduce using rule 61 (identifier -> ID bracket .)
    OR_BIT          reduce using rule 61 (identifier -> ID bracket .)
    XOR_BIT         reduce using rule 61 (identifier -> ID bracket .)
    SHIFT_IZQ       reduce using rule 61 (identifier -> ID bracket .)
    SHIFT_DER       reduce using rule 61 (identifier -> ID bracket .)
    INTERROGACION   reduce using rule 61 (identifier -> ID bracket .)
    SUMA_SUMA       reduce using rule 61 (identifier -> ID bracket .)
    RESTA_RESTA     reduce using rule 61 (identifier -> ID bracket .)
    PUNTO_COMA      reduce using rule 61 (identifier -> ID bracket .)
    PAR_DER         reduce using rule 61 (identifier -> ID bracket .)
    COMA            reduce using rule 61 (identifier -> ID bracket .)
    DOS_PUNTOS      reduce using rule 61 (identifier -> ID bracket .)
    BRA_DER         reduce using rule 61 (identifier -> ID bracket .)
    COR_IZQ         shift and go to state 54


state 31

    (65) bracket -> COR_IZQ . expression COR_DER
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 55
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 32

    (66) assignation -> identifier equals . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    identifier                     shift and go to state 69
    expression                     shift and go to state 73
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 33

    (67) assignation -> identifier PUNTO . ID equals expression

    ID              shift and go to state 74


state 34

    (68) equals -> IGUAL .

    RESTA           reduce using rule 68 (equals -> IGUAL .)
    AND_BIT         reduce using rule 68 (equals -> IGUAL .)
    NOT             reduce using rule 68 (equals -> IGUAL .)
    NOT_BIT         reduce using rule 68 (equals -> IGUAL .)
    PAR_IZQ         reduce using rule 68 (equals -> IGUAL .)
    ENTERO          reduce using rule 68 (equals -> IGUAL .)
    DECIMAL         reduce using rule 68 (equals -> IGUAL .)
    CARACTER        reduce using rule 68 (equals -> IGUAL .)
    CADENA          reduce using rule 68 (equals -> IGUAL .)
    SUMA_SUMA       reduce using rule 68 (equals -> IGUAL .)
    RESTA_RESTA     reduce using rule 68 (equals -> IGUAL .)
    ID              reduce using rule 68 (equals -> IGUAL .)


state 35

    (69) equals -> SUMA_IGUAL .

    RESTA           reduce using rule 69 (equals -> SUMA_IGUAL .)
    AND_BIT         reduce using rule 69 (equals -> SUMA_IGUAL .)
    NOT             reduce using rule 69 (equals -> SUMA_IGUAL .)
    NOT_BIT         reduce using rule 69 (equals -> SUMA_IGUAL .)
    PAR_IZQ         reduce using rule 69 (equals -> SUMA_IGUAL .)
    ENTERO          reduce using rule 69 (equals -> SUMA_IGUAL .)
    DECIMAL         reduce using rule 69 (equals -> SUMA_IGUAL .)
    CARACTER        reduce using rule 69 (equals -> SUMA_IGUAL .)
    CADENA          reduce using rule 69 (equals -> SUMA_IGUAL .)
    SUMA_SUMA       reduce using rule 69 (equals -> SUMA_IGUAL .)
    RESTA_RESTA     reduce using rule 69 (equals -> SUMA_IGUAL .)
    ID              reduce using rule 69 (equals -> SUMA_IGUAL .)


state 36

    (70) equals -> RESTA_IGUAL .

    RESTA           reduce using rule 70 (equals -> RESTA_IGUAL .)
    AND_BIT         reduce using rule 70 (equals -> RESTA_IGUAL .)
    NOT             reduce using rule 70 (equals -> RESTA_IGUAL .)
    NOT_BIT         reduce using rule 70 (equals -> RESTA_IGUAL .)
    PAR_IZQ         reduce using rule 70 (equals -> RESTA_IGUAL .)
    ENTERO          reduce using rule 70 (equals -> RESTA_IGUAL .)
    DECIMAL         reduce using rule 70 (equals -> RESTA_IGUAL .)
    CARACTER        reduce using rule 70 (equals -> RESTA_IGUAL .)
    CADENA          reduce using rule 70 (equals -> RESTA_IGUAL .)
    SUMA_SUMA       reduce using rule 70 (equals -> RESTA_IGUAL .)
    RESTA_RESTA     reduce using rule 70 (equals -> RESTA_IGUAL .)
    ID              reduce using rule 70 (equals -> RESTA_IGUAL .)


state 37

    (71) equals -> MULT_IGUAL .

    RESTA           reduce using rule 71 (equals -> MULT_IGUAL .)
    AND_BIT         reduce using rule 71 (equals -> MULT_IGUAL .)
    NOT             reduce using rule 71 (equals -> MULT_IGUAL .)
    NOT_BIT         reduce using rule 71 (equals -> MULT_IGUAL .)
    PAR_IZQ         reduce using rule 71 (equals -> MULT_IGUAL .)
    ENTERO          reduce using rule 71 (equals -> MULT_IGUAL .)
    DECIMAL         reduce using rule 71 (equals -> MULT_IGUAL .)
    CARACTER        reduce using rule 71 (equals -> MULT_IGUAL .)
    CADENA          reduce using rule 71 (equals -> MULT_IGUAL .)
    SUMA_SUMA       reduce using rule 71 (equals -> MULT_IGUAL .)
    RESTA_RESTA     reduce using rule 71 (equals -> MULT_IGUAL .)
    ID              reduce using rule 71 (equals -> MULT_IGUAL .)


state 38

    (72) equals -> DIV_IGUAL .

    RESTA           reduce using rule 72 (equals -> DIV_IGUAL .)
    AND_BIT         reduce using rule 72 (equals -> DIV_IGUAL .)
    NOT             reduce using rule 72 (equals -> DIV_IGUAL .)
    NOT_BIT         reduce using rule 72 (equals -> DIV_IGUAL .)
    PAR_IZQ         reduce using rule 72 (equals -> DIV_IGUAL .)
    ENTERO          reduce using rule 72 (equals -> DIV_IGUAL .)
    DECIMAL         reduce using rule 72 (equals -> DIV_IGUAL .)
    CARACTER        reduce using rule 72 (equals -> DIV_IGUAL .)
    CADENA          reduce using rule 72 (equals -> DIV_IGUAL .)
    SUMA_SUMA       reduce using rule 72 (equals -> DIV_IGUAL .)
    RESTA_RESTA     reduce using rule 72 (equals -> DIV_IGUAL .)
    ID              reduce using rule 72 (equals -> DIV_IGUAL .)


state 39

    (73) equals -> MOD_IGUAL .

    RESTA           reduce using rule 73 (equals -> MOD_IGUAL .)
    AND_BIT         reduce using rule 73 (equals -> MOD_IGUAL .)
    NOT             reduce using rule 73 (equals -> MOD_IGUAL .)
    NOT_BIT         reduce using rule 73 (equals -> MOD_IGUAL .)
    PAR_IZQ         reduce using rule 73 (equals -> MOD_IGUAL .)
    ENTERO          reduce using rule 73 (equals -> MOD_IGUAL .)
    DECIMAL         reduce using rule 73 (equals -> MOD_IGUAL .)
    CARACTER        reduce using rule 73 (equals -> MOD_IGUAL .)
    CADENA          reduce using rule 73 (equals -> MOD_IGUAL .)
    SUMA_SUMA       reduce using rule 73 (equals -> MOD_IGUAL .)
    RESTA_RESTA     reduce using rule 73 (equals -> MOD_IGUAL .)
    ID              reduce using rule 73 (equals -> MOD_IGUAL .)


state 40

    (74) equals -> SHIFT_IZQ_IGUAL .

    RESTA           reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    AND_BIT         reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    NOT             reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    NOT_BIT         reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    PAR_IZQ         reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    ENTERO          reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    DECIMAL         reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    CARACTER        reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    CADENA          reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    SUMA_SUMA       reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    RESTA_RESTA     reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)
    ID              reduce using rule 74 (equals -> SHIFT_IZQ_IGUAL .)


state 41

    (75) equals -> SHIFT_DER_IGUAL .

    RESTA           reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    AND_BIT         reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    NOT             reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    NOT_BIT         reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    PAR_IZQ         reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    ENTERO          reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    DECIMAL         reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    CARACTER        reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    CADENA          reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    SUMA_SUMA       reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    RESTA_RESTA     reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)
    ID              reduce using rule 75 (equals -> SHIFT_DER_IGUAL .)


state 42

    (76) equals -> AND_BIT_IGUAL .

    RESTA           reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    AND_BIT         reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    NOT             reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    NOT_BIT         reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    PAR_IZQ         reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    ENTERO          reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    DECIMAL         reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    CARACTER        reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    CADENA          reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    SUMA_SUMA       reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    RESTA_RESTA     reduce using rule 76 (equals -> AND_BIT_IGUAL .)
    ID              reduce using rule 76 (equals -> AND_BIT_IGUAL .)


state 43

    (77) equals -> XOR_BIT_IGUAL .

    RESTA           reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    AND_BIT         reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    NOT             reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    NOT_BIT         reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    PAR_IZQ         reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    ENTERO          reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    DECIMAL         reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    CARACTER        reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    CADENA          reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    SUMA_SUMA       reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    RESTA_RESTA     reduce using rule 77 (equals -> XOR_BIT_IGUAL .)
    ID              reduce using rule 77 (equals -> XOR_BIT_IGUAL .)


state 44

    (78) equals -> OR_BIT_IGUAL .

    RESTA           reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    AND_BIT         reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    NOT             reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    NOT_BIT         reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    PAR_IZQ         reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    ENTERO          reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    DECIMAL         reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    CARACTER        reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    CADENA          reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    SUMA_SUMA       reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    RESTA_RESTA     reduce using rule 78 (equals -> OR_BIT_IGUAL .)
    ID              reduce using rule 78 (equals -> OR_BIT_IGUAL .)


state 45

    (12) main -> INT MAIN new_label . PAR_IZQ PAR_DER function_block

    PAR_IZQ         shift and go to state 75


state 46

    (50) declaration_list -> declaration_list COMA . ID IGUAL expression
    (51) declaration_list -> declaration_list COMA . ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> declaration_list COMA . ID
    (53) declaration_list -> declaration_list COMA . ID brackets
    (54) declaration_list -> declaration_list COMA . ID COR_IZQ COR_DER IGUAL CADENA

    ID              shift and go to state 76


state 47

    (14) function -> ID new_label . param add_function function_block
    (16) param -> . PAR_IZQ PAR_DER
    (17) param -> . PAR_IZQ parameter_list PAR_DER

    PAR_IZQ         shift and go to state 78

    param                          shift and go to state 77

state 48

    (55) declaration_list -> ID IGUAL . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 79
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 49

    (56) declaration_list -> ID brackets . IGUAL BRA_IZQ expression_list BRA_DER
    (58) declaration_list -> ID brackets .

    IGUAL           shift and go to state 80
    COMA            reduce using rule 58 (declaration_list -> ID brackets .)
    PUNTO_COMA      reduce using rule 58 (declaration_list -> ID brackets .)


state 50

    (59) declaration_list -> ID COR_IZQ . COR_DER IGUAL CADENA
    (63) brackets -> COR_IZQ . COR_DER
    (65) bracket -> COR_IZQ . expression COR_DER
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    COR_DER         shift and go to state 81
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 55
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 51

    (62) brackets -> bracket .
    (64) bracket -> bracket . COR_IZQ expression COR_DER

    IGUAL           reduce using rule 62 (brackets -> bracket .)
    COMA            reduce using rule 62 (brackets -> bracket .)
    PUNTO_COMA      reduce using rule 62 (brackets -> bracket .)
    COR_IZQ         shift and go to state 54


state 52

    (25) struct -> STRUCT ID struct_block . PUNTO_COMA

    PUNTO_COMA      shift and go to state 82


state 53

    (26) struct_block -> BRA_IZQ . new_scope declarations BRA_DER
    (28) new_scope -> .

    ID              reduce using rule 28 (new_scope -> .)
    INT             reduce using rule 28 (new_scope -> .)
    DOUBLE          reduce using rule 28 (new_scope -> .)
    CHAR            reduce using rule 28 (new_scope -> .)
    STRUCT          reduce using rule 28 (new_scope -> .)

    new_scope                      shift and go to state 83

state 54

    (64) bracket -> bracket COR_IZQ . expression COR_DER
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 84
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 55

    (65) bracket -> COR_IZQ expression . COR_DER
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         shift and go to state 85
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 56

    (132) expression -> RESTA . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 107
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 57

    (133) expression -> AND_BIT . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 108
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 58

    (134) expression -> NOT . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 109
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 59

    (135) expression -> NOT_BIT . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 110
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 60

    (136) expression -> PAR_IZQ . expression PAR_DER
    (148) conversion -> PAR_IZQ . INT PAR_DER expression
    (149) conversion -> PAR_IZQ . DOUBLE PAR_DER expression
    (150) conversion -> PAR_IZQ . CHAR PAR_DER expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    INT             shift and go to state 112
    DOUBLE          shift and go to state 113
    CHAR            shift and go to state 114
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 111
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 61

    (138) expression -> increase .

    COR_DER         reduce using rule 138 (expression -> increase .)
    SUMA            reduce using rule 138 (expression -> increase .)
    RESTA           reduce using rule 138 (expression -> increase .)
    MULT            reduce using rule 138 (expression -> increase .)
    DIV             reduce using rule 138 (expression -> increase .)
    MOD             reduce using rule 138 (expression -> increase .)
    AND             reduce using rule 138 (expression -> increase .)
    OR              reduce using rule 138 (expression -> increase .)
    ES_IGUAL        reduce using rule 138 (expression -> increase .)
    NO_IGUAL        reduce using rule 138 (expression -> increase .)
    MENOR_IGUAL     reduce using rule 138 (expression -> increase .)
    MAYOR_IGUAL     reduce using rule 138 (expression -> increase .)
    MENOR           reduce using rule 138 (expression -> increase .)
    MAYOR           reduce using rule 138 (expression -> increase .)
    AND_BIT         reduce using rule 138 (expression -> increase .)
    OR_BIT          reduce using rule 138 (expression -> increase .)
    XOR_BIT         reduce using rule 138 (expression -> increase .)
    SHIFT_IZQ       reduce using rule 138 (expression -> increase .)
    SHIFT_DER       reduce using rule 138 (expression -> increase .)
    INTERROGACION   reduce using rule 138 (expression -> increase .)
    SUMA_SUMA       reduce using rule 138 (expression -> increase .)
    RESTA_RESTA     reduce using rule 138 (expression -> increase .)
    PUNTO_COMA      reduce using rule 138 (expression -> increase .)
    PAR_DER         reduce using rule 138 (expression -> increase .)
    COMA            reduce using rule 138 (expression -> increase .)
    DOS_PUNTOS      reduce using rule 138 (expression -> increase .)
    BRA_DER         reduce using rule 138 (expression -> increase .)


state 62

    (139) expression -> decrease .

    COR_DER         reduce using rule 139 (expression -> decrease .)
    SUMA            reduce using rule 139 (expression -> decrease .)
    RESTA           reduce using rule 139 (expression -> decrease .)
    MULT            reduce using rule 139 (expression -> decrease .)
    DIV             reduce using rule 139 (expression -> decrease .)
    MOD             reduce using rule 139 (expression -> decrease .)
    AND             reduce using rule 139 (expression -> decrease .)
    OR              reduce using rule 139 (expression -> decrease .)
    ES_IGUAL        reduce using rule 139 (expression -> decrease .)
    NO_IGUAL        reduce using rule 139 (expression -> decrease .)
    MENOR_IGUAL     reduce using rule 139 (expression -> decrease .)
    MAYOR_IGUAL     reduce using rule 139 (expression -> decrease .)
    MENOR           reduce using rule 139 (expression -> decrease .)
    MAYOR           reduce using rule 139 (expression -> decrease .)
    AND_BIT         reduce using rule 139 (expression -> decrease .)
    OR_BIT          reduce using rule 139 (expression -> decrease .)
    XOR_BIT         reduce using rule 139 (expression -> decrease .)
    SHIFT_IZQ       reduce using rule 139 (expression -> decrease .)
    SHIFT_DER       reduce using rule 139 (expression -> decrease .)
    INTERROGACION   reduce using rule 139 (expression -> decrease .)
    SUMA_SUMA       reduce using rule 139 (expression -> decrease .)
    RESTA_RESTA     reduce using rule 139 (expression -> decrease .)
    PUNTO_COMA      reduce using rule 139 (expression -> decrease .)
    PAR_DER         reduce using rule 139 (expression -> decrease .)
    COMA            reduce using rule 139 (expression -> decrease .)
    DOS_PUNTOS      reduce using rule 139 (expression -> decrease .)
    BRA_DER         reduce using rule 139 (expression -> decrease .)


state 63

    (140) expression -> ENTERO .

    COR_DER         reduce using rule 140 (expression -> ENTERO .)
    SUMA            reduce using rule 140 (expression -> ENTERO .)
    RESTA           reduce using rule 140 (expression -> ENTERO .)
    MULT            reduce using rule 140 (expression -> ENTERO .)
    DIV             reduce using rule 140 (expression -> ENTERO .)
    MOD             reduce using rule 140 (expression -> ENTERO .)
    AND             reduce using rule 140 (expression -> ENTERO .)
    OR              reduce using rule 140 (expression -> ENTERO .)
    ES_IGUAL        reduce using rule 140 (expression -> ENTERO .)
    NO_IGUAL        reduce using rule 140 (expression -> ENTERO .)
    MENOR_IGUAL     reduce using rule 140 (expression -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 140 (expression -> ENTERO .)
    MENOR           reduce using rule 140 (expression -> ENTERO .)
    MAYOR           reduce using rule 140 (expression -> ENTERO .)
    AND_BIT         reduce using rule 140 (expression -> ENTERO .)
    OR_BIT          reduce using rule 140 (expression -> ENTERO .)
    XOR_BIT         reduce using rule 140 (expression -> ENTERO .)
    SHIFT_IZQ       reduce using rule 140 (expression -> ENTERO .)
    SHIFT_DER       reduce using rule 140 (expression -> ENTERO .)
    INTERROGACION   reduce using rule 140 (expression -> ENTERO .)
    SUMA_SUMA       reduce using rule 140 (expression -> ENTERO .)
    RESTA_RESTA     reduce using rule 140 (expression -> ENTERO .)
    PUNTO_COMA      reduce using rule 140 (expression -> ENTERO .)
    PAR_DER         reduce using rule 140 (expression -> ENTERO .)
    COMA            reduce using rule 140 (expression -> ENTERO .)
    DOS_PUNTOS      reduce using rule 140 (expression -> ENTERO .)
    BRA_DER         reduce using rule 140 (expression -> ENTERO .)


state 64

    (141) expression -> DECIMAL .

    COR_DER         reduce using rule 141 (expression -> DECIMAL .)
    SUMA            reduce using rule 141 (expression -> DECIMAL .)
    RESTA           reduce using rule 141 (expression -> DECIMAL .)
    MULT            reduce using rule 141 (expression -> DECIMAL .)
    DIV             reduce using rule 141 (expression -> DECIMAL .)
    MOD             reduce using rule 141 (expression -> DECIMAL .)
    AND             reduce using rule 141 (expression -> DECIMAL .)
    OR              reduce using rule 141 (expression -> DECIMAL .)
    ES_IGUAL        reduce using rule 141 (expression -> DECIMAL .)
    NO_IGUAL        reduce using rule 141 (expression -> DECIMAL .)
    MENOR_IGUAL     reduce using rule 141 (expression -> DECIMAL .)
    MAYOR_IGUAL     reduce using rule 141 (expression -> DECIMAL .)
    MENOR           reduce using rule 141 (expression -> DECIMAL .)
    MAYOR           reduce using rule 141 (expression -> DECIMAL .)
    AND_BIT         reduce using rule 141 (expression -> DECIMAL .)
    OR_BIT          reduce using rule 141 (expression -> DECIMAL .)
    XOR_BIT         reduce using rule 141 (expression -> DECIMAL .)
    SHIFT_IZQ       reduce using rule 141 (expression -> DECIMAL .)
    SHIFT_DER       reduce using rule 141 (expression -> DECIMAL .)
    INTERROGACION   reduce using rule 141 (expression -> DECIMAL .)
    SUMA_SUMA       reduce using rule 141 (expression -> DECIMAL .)
    RESTA_RESTA     reduce using rule 141 (expression -> DECIMAL .)
    PUNTO_COMA      reduce using rule 141 (expression -> DECIMAL .)
    PAR_DER         reduce using rule 141 (expression -> DECIMAL .)
    COMA            reduce using rule 141 (expression -> DECIMAL .)
    DOS_PUNTOS      reduce using rule 141 (expression -> DECIMAL .)
    BRA_DER         reduce using rule 141 (expression -> DECIMAL .)


state 65

    (142) expression -> CARACTER .

    COR_DER         reduce using rule 142 (expression -> CARACTER .)
    SUMA            reduce using rule 142 (expression -> CARACTER .)
    RESTA           reduce using rule 142 (expression -> CARACTER .)
    MULT            reduce using rule 142 (expression -> CARACTER .)
    DIV             reduce using rule 142 (expression -> CARACTER .)
    MOD             reduce using rule 142 (expression -> CARACTER .)
    AND             reduce using rule 142 (expression -> CARACTER .)
    OR              reduce using rule 142 (expression -> CARACTER .)
    ES_IGUAL        reduce using rule 142 (expression -> CARACTER .)
    NO_IGUAL        reduce using rule 142 (expression -> CARACTER .)
    MENOR_IGUAL     reduce using rule 142 (expression -> CARACTER .)
    MAYOR_IGUAL     reduce using rule 142 (expression -> CARACTER .)
    MENOR           reduce using rule 142 (expression -> CARACTER .)
    MAYOR           reduce using rule 142 (expression -> CARACTER .)
    AND_BIT         reduce using rule 142 (expression -> CARACTER .)
    OR_BIT          reduce using rule 142 (expression -> CARACTER .)
    XOR_BIT         reduce using rule 142 (expression -> CARACTER .)
    SHIFT_IZQ       reduce using rule 142 (expression -> CARACTER .)
    SHIFT_DER       reduce using rule 142 (expression -> CARACTER .)
    INTERROGACION   reduce using rule 142 (expression -> CARACTER .)
    SUMA_SUMA       reduce using rule 142 (expression -> CARACTER .)
    RESTA_RESTA     reduce using rule 142 (expression -> CARACTER .)
    PUNTO_COMA      reduce using rule 142 (expression -> CARACTER .)
    PAR_DER         reduce using rule 142 (expression -> CARACTER .)
    COMA            reduce using rule 142 (expression -> CARACTER .)
    DOS_PUNTOS      reduce using rule 142 (expression -> CARACTER .)
    BRA_DER         reduce using rule 142 (expression -> CARACTER .)


state 66

    (143) expression -> CADENA .

    COR_DER         reduce using rule 143 (expression -> CADENA .)
    SUMA            reduce using rule 143 (expression -> CADENA .)
    RESTA           reduce using rule 143 (expression -> CADENA .)
    MULT            reduce using rule 143 (expression -> CADENA .)
    DIV             reduce using rule 143 (expression -> CADENA .)
    MOD             reduce using rule 143 (expression -> CADENA .)
    AND             reduce using rule 143 (expression -> CADENA .)
    OR              reduce using rule 143 (expression -> CADENA .)
    ES_IGUAL        reduce using rule 143 (expression -> CADENA .)
    NO_IGUAL        reduce using rule 143 (expression -> CADENA .)
    MENOR_IGUAL     reduce using rule 143 (expression -> CADENA .)
    MAYOR_IGUAL     reduce using rule 143 (expression -> CADENA .)
    MENOR           reduce using rule 143 (expression -> CADENA .)
    MAYOR           reduce using rule 143 (expression -> CADENA .)
    AND_BIT         reduce using rule 143 (expression -> CADENA .)
    OR_BIT          reduce using rule 143 (expression -> CADENA .)
    XOR_BIT         reduce using rule 143 (expression -> CADENA .)
    SHIFT_IZQ       reduce using rule 143 (expression -> CADENA .)
    SHIFT_DER       reduce using rule 143 (expression -> CADENA .)
    INTERROGACION   reduce using rule 143 (expression -> CADENA .)
    SUMA_SUMA       reduce using rule 143 (expression -> CADENA .)
    RESTA_RESTA     reduce using rule 143 (expression -> CADENA .)
    PUNTO_COMA      reduce using rule 143 (expression -> CADENA .)
    PAR_DER         reduce using rule 143 (expression -> CADENA .)
    COMA            reduce using rule 143 (expression -> CADENA .)
    DOS_PUNTOS      reduce using rule 143 (expression -> CADENA .)
    BRA_DER         reduce using rule 143 (expression -> CADENA .)


state 67

    (144) expression -> function_call .

    COR_DER         reduce using rule 144 (expression -> function_call .)
    SUMA            reduce using rule 144 (expression -> function_call .)
    RESTA           reduce using rule 144 (expression -> function_call .)
    MULT            reduce using rule 144 (expression -> function_call .)
    DIV             reduce using rule 144 (expression -> function_call .)
    MOD             reduce using rule 144 (expression -> function_call .)
    AND             reduce using rule 144 (expression -> function_call .)
    OR              reduce using rule 144 (expression -> function_call .)
    ES_IGUAL        reduce using rule 144 (expression -> function_call .)
    NO_IGUAL        reduce using rule 144 (expression -> function_call .)
    MENOR_IGUAL     reduce using rule 144 (expression -> function_call .)
    MAYOR_IGUAL     reduce using rule 144 (expression -> function_call .)
    MENOR           reduce using rule 144 (expression -> function_call .)
    MAYOR           reduce using rule 144 (expression -> function_call .)
    AND_BIT         reduce using rule 144 (expression -> function_call .)
    OR_BIT          reduce using rule 144 (expression -> function_call .)
    XOR_BIT         reduce using rule 144 (expression -> function_call .)
    SHIFT_IZQ       reduce using rule 144 (expression -> function_call .)
    SHIFT_DER       reduce using rule 144 (expression -> function_call .)
    INTERROGACION   reduce using rule 144 (expression -> function_call .)
    SUMA_SUMA       reduce using rule 144 (expression -> function_call .)
    RESTA_RESTA     reduce using rule 144 (expression -> function_call .)
    PUNTO_COMA      reduce using rule 144 (expression -> function_call .)
    PAR_DER         reduce using rule 144 (expression -> function_call .)
    COMA            reduce using rule 144 (expression -> function_call .)
    DOS_PUNTOS      reduce using rule 144 (expression -> function_call .)
    BRA_DER         reduce using rule 144 (expression -> function_call .)


state 68

    (145) expression -> conversion .

    COR_DER         reduce using rule 145 (expression -> conversion .)
    SUMA            reduce using rule 145 (expression -> conversion .)
    RESTA           reduce using rule 145 (expression -> conversion .)
    MULT            reduce using rule 145 (expression -> conversion .)
    DIV             reduce using rule 145 (expression -> conversion .)
    MOD             reduce using rule 145 (expression -> conversion .)
    AND             reduce using rule 145 (expression -> conversion .)
    OR              reduce using rule 145 (expression -> conversion .)
    ES_IGUAL        reduce using rule 145 (expression -> conversion .)
    NO_IGUAL        reduce using rule 145 (expression -> conversion .)
    MENOR_IGUAL     reduce using rule 145 (expression -> conversion .)
    MAYOR_IGUAL     reduce using rule 145 (expression -> conversion .)
    MENOR           reduce using rule 145 (expression -> conversion .)
    MAYOR           reduce using rule 145 (expression -> conversion .)
    AND_BIT         reduce using rule 145 (expression -> conversion .)
    OR_BIT          reduce using rule 145 (expression -> conversion .)
    XOR_BIT         reduce using rule 145 (expression -> conversion .)
    SHIFT_IZQ       reduce using rule 145 (expression -> conversion .)
    SHIFT_DER       reduce using rule 145 (expression -> conversion .)
    INTERROGACION   reduce using rule 145 (expression -> conversion .)
    SUMA_SUMA       reduce using rule 145 (expression -> conversion .)
    RESTA_RESTA     reduce using rule 145 (expression -> conversion .)
    PUNTO_COMA      reduce using rule 145 (expression -> conversion .)
    PAR_DER         reduce using rule 145 (expression -> conversion .)
    COMA            reduce using rule 145 (expression -> conversion .)
    DOS_PUNTOS      reduce using rule 145 (expression -> conversion .)
    BRA_DER         reduce using rule 145 (expression -> conversion .)


state 69

    (146) expression -> identifier .
    (147) expression -> identifier . PUNTO ID

    COR_DER         reduce using rule 146 (expression -> identifier .)
    SUMA            reduce using rule 146 (expression -> identifier .)
    RESTA           reduce using rule 146 (expression -> identifier .)
    MULT            reduce using rule 146 (expression -> identifier .)
    DIV             reduce using rule 146 (expression -> identifier .)
    MOD             reduce using rule 146 (expression -> identifier .)
    AND             reduce using rule 146 (expression -> identifier .)
    OR              reduce using rule 146 (expression -> identifier .)
    ES_IGUAL        reduce using rule 146 (expression -> identifier .)
    NO_IGUAL        reduce using rule 146 (expression -> identifier .)
    MENOR_IGUAL     reduce using rule 146 (expression -> identifier .)
    MAYOR_IGUAL     reduce using rule 146 (expression -> identifier .)
    MENOR           reduce using rule 146 (expression -> identifier .)
    MAYOR           reduce using rule 146 (expression -> identifier .)
    AND_BIT         reduce using rule 146 (expression -> identifier .)
    OR_BIT          reduce using rule 146 (expression -> identifier .)
    XOR_BIT         reduce using rule 146 (expression -> identifier .)
    SHIFT_IZQ       reduce using rule 146 (expression -> identifier .)
    SHIFT_DER       reduce using rule 146 (expression -> identifier .)
    INTERROGACION   reduce using rule 146 (expression -> identifier .)
    SUMA_SUMA       reduce using rule 146 (expression -> identifier .)
    RESTA_RESTA     reduce using rule 146 (expression -> identifier .)
    PUNTO_COMA      reduce using rule 146 (expression -> identifier .)
    PAR_DER         reduce using rule 146 (expression -> identifier .)
    COMA            reduce using rule 146 (expression -> identifier .)
    DOS_PUNTOS      reduce using rule 146 (expression -> identifier .)
    BRA_DER         reduce using rule 146 (expression -> identifier .)
    PUNTO           shift and go to state 115


state 70

    (109) function_call -> ID . param_val
    (60) identifier -> ID .
    (61) identifier -> ID . bracket
    (110) param_val -> . PAR_IZQ PAR_DER
    (111) param_val -> . PAR_IZQ expression_list PAR_DER
    (64) bracket -> . bracket COR_IZQ expression COR_DER
    (65) bracket -> . COR_IZQ expression COR_DER

    PUNTO           reduce using rule 60 (identifier -> ID .)
    COR_DER         reduce using rule 60 (identifier -> ID .)
    SUMA            reduce using rule 60 (identifier -> ID .)
    RESTA           reduce using rule 60 (identifier -> ID .)
    MULT            reduce using rule 60 (identifier -> ID .)
    DIV             reduce using rule 60 (identifier -> ID .)
    MOD             reduce using rule 60 (identifier -> ID .)
    AND             reduce using rule 60 (identifier -> ID .)
    OR              reduce using rule 60 (identifier -> ID .)
    ES_IGUAL        reduce using rule 60 (identifier -> ID .)
    NO_IGUAL        reduce using rule 60 (identifier -> ID .)
    MENOR_IGUAL     reduce using rule 60 (identifier -> ID .)
    MAYOR_IGUAL     reduce using rule 60 (identifier -> ID .)
    MENOR           reduce using rule 60 (identifier -> ID .)
    MAYOR           reduce using rule 60 (identifier -> ID .)
    AND_BIT         reduce using rule 60 (identifier -> ID .)
    OR_BIT          reduce using rule 60 (identifier -> ID .)
    XOR_BIT         reduce using rule 60 (identifier -> ID .)
    SHIFT_IZQ       reduce using rule 60 (identifier -> ID .)
    SHIFT_DER       reduce using rule 60 (identifier -> ID .)
    INTERROGACION   reduce using rule 60 (identifier -> ID .)
    SUMA_SUMA       reduce using rule 60 (identifier -> ID .)
    RESTA_RESTA     reduce using rule 60 (identifier -> ID .)
    PUNTO_COMA      reduce using rule 60 (identifier -> ID .)
    PAR_DER         reduce using rule 60 (identifier -> ID .)
    COMA            reduce using rule 60 (identifier -> ID .)
    DOS_PUNTOS      reduce using rule 60 (identifier -> ID .)
    BRA_DER         reduce using rule 60 (identifier -> ID .)
    PAR_IZQ         shift and go to state 117
    COR_IZQ         shift and go to state 31

    param_val                      shift and go to state 116
    bracket                        shift and go to state 30

state 71

    (151) increase -> SUMA_SUMA . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 118
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 72

    (153) decrease -> RESTA_RESTA . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 119
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 73

    (66) assignation -> identifier equals expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PUNTO_COMA      reduce using rule 66 (assignation -> identifier equals expression .)
    PAR_DER         reduce using rule 66 (assignation -> identifier equals expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 74

    (67) assignation -> identifier PUNTO ID . equals expression
    (68) equals -> . IGUAL
    (69) equals -> . SUMA_IGUAL
    (70) equals -> . RESTA_IGUAL
    (71) equals -> . MULT_IGUAL
    (72) equals -> . DIV_IGUAL
    (73) equals -> . MOD_IGUAL
    (74) equals -> . SHIFT_IZQ_IGUAL
    (75) equals -> . SHIFT_DER_IGUAL
    (76) equals -> . AND_BIT_IGUAL
    (77) equals -> . XOR_BIT_IGUAL
    (78) equals -> . OR_BIT_IGUAL

    IGUAL           shift and go to state 34
    SUMA_IGUAL      shift and go to state 35
    RESTA_IGUAL     shift and go to state 36
    MULT_IGUAL      shift and go to state 37
    DIV_IGUAL       shift and go to state 38
    MOD_IGUAL       shift and go to state 39
    SHIFT_IZQ_IGUAL shift and go to state 40
    SHIFT_DER_IGUAL shift and go to state 41
    AND_BIT_IGUAL   shift and go to state 42
    XOR_BIT_IGUAL   shift and go to state 43
    OR_BIT_IGUAL    shift and go to state 44

    equals                         shift and go to state 120

state 75

    (12) main -> INT MAIN new_label PAR_IZQ . PAR_DER function_block

    PAR_DER         shift and go to state 121


state 76

    (50) declaration_list -> declaration_list COMA ID . IGUAL expression
    (51) declaration_list -> declaration_list COMA ID . brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> declaration_list COMA ID .
    (53) declaration_list -> declaration_list COMA ID . brackets
    (54) declaration_list -> declaration_list COMA ID . COR_IZQ COR_DER IGUAL CADENA
    (62) brackets -> . bracket
    (63) brackets -> . COR_IZQ COR_DER
    (64) bracket -> . bracket COR_IZQ expression COR_DER
    (65) bracket -> . COR_IZQ expression COR_DER

    IGUAL           shift and go to state 122
    COMA            reduce using rule 52 (declaration_list -> declaration_list COMA ID .)
    PUNTO_COMA      reduce using rule 52 (declaration_list -> declaration_list COMA ID .)
    COR_IZQ         shift and go to state 124

    brackets                       shift and go to state 123
    bracket                        shift and go to state 51

state 77

    (14) function -> ID new_label param . add_function function_block
    (15) add_function -> .

    BRA_IZQ         reduce using rule 15 (add_function -> .)

    add_function                   shift and go to state 125

state 78

    (16) param -> PAR_IZQ . PAR_DER
    (17) param -> PAR_IZQ . parameter_list PAR_DER
    (18) parameter_list -> . parameter_list COMA parameter
    (19) parameter_list -> . parameter
    (20) parameter -> . primitive_type ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID

    PAR_DER         shift and go to state 126
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131

    parameter_list                 shift and go to state 127
    parameter                      shift and go to state 128
    primitive_type                 shift and go to state 129

state 79

    (55) declaration_list -> ID IGUAL expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COMA            reduce using rule 55 (declaration_list -> ID IGUAL expression .)
    PUNTO_COMA      reduce using rule 55 (declaration_list -> ID IGUAL expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 80

    (56) declaration_list -> ID brackets IGUAL . BRA_IZQ expression_list BRA_DER

    BRA_IZQ         shift and go to state 132


state 81

    (59) declaration_list -> ID COR_IZQ COR_DER . IGUAL CADENA
    (63) brackets -> COR_IZQ COR_DER .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 133
    COMA            reduce using rule 63 (brackets -> COR_IZQ COR_DER .)
    PUNTO_COMA      reduce using rule 63 (brackets -> COR_IZQ COR_DER .)

  ! IGUAL           [ reduce using rule 63 (brackets -> COR_IZQ COR_DER .) ]


state 82

    (25) struct -> STRUCT ID struct_block PUNTO_COMA .

    INT             reduce using rule 25 (struct -> STRUCT ID struct_block PUNTO_COMA .)
    VOID            reduce using rule 25 (struct -> STRUCT ID struct_block PUNTO_COMA .)
    DOUBLE          reduce using rule 25 (struct -> STRUCT ID struct_block PUNTO_COMA .)
    CHAR            reduce using rule 25 (struct -> STRUCT ID struct_block PUNTO_COMA .)
    STRUCT          reduce using rule 25 (struct -> STRUCT ID struct_block PUNTO_COMA .)
    ID              reduce using rule 25 (struct -> STRUCT ID struct_block PUNTO_COMA .)


state 83

    (26) struct_block -> BRA_IZQ new_scope . declarations BRA_DER
    (46) declarations -> . declarations declaration PUNTO_COMA
    (47) declarations -> . declaration PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID

    ID              shift and go to state 137
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131

    declarations                   shift and go to state 134
    declaration                    shift and go to state 135
    primitive_type                 shift and go to state 136

state 84

    (64) bracket -> bracket COR_IZQ expression . COR_DER
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         shift and go to state 138
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 85

    (65) bracket -> COR_IZQ expression COR_DER .

    COR_IZQ         reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    PUNTO           reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    IGUAL           reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    SUMA_IGUAL      reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    RESTA_IGUAL     reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MULT_IGUAL      reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    DIV_IGUAL       reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MOD_IGUAL       reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    SHIFT_IZQ_IGUAL reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    SHIFT_DER_IGUAL reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    AND_BIT_IGUAL   reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    XOR_BIT_IGUAL   reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    OR_BIT_IGUAL    reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    COMA            reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    PUNTO_COMA      reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    COR_DER         reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    SUMA            reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    RESTA           reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MULT            reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    DIV             reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MOD             reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    AND             reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    OR              reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    ES_IGUAL        reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    NO_IGUAL        reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MENOR_IGUAL     reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MAYOR_IGUAL     reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MENOR           reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    MAYOR           reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    AND_BIT         reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    OR_BIT          reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    XOR_BIT         reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    SHIFT_IZQ       reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    SHIFT_DER       reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    INTERROGACION   reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    SUMA_SUMA       reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    RESTA_RESTA     reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    PAR_DER         reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    DOS_PUNTOS      reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)
    BRA_DER         reduce using rule 65 (bracket -> COR_IZQ expression COR_DER .)


state 86

    (114) expression -> expression SUMA . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 139
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 87

    (115) expression -> expression RESTA . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 140
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 88

    (116) expression -> expression MULT . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 141
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 89

    (117) expression -> expression DIV . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 142
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 90

    (118) expression -> expression MOD . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 143
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 91

    (119) expression -> expression AND . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 144
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 92

    (120) expression -> expression OR . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 145
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 93

    (121) expression -> expression ES_IGUAL . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 146
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 94

    (122) expression -> expression NO_IGUAL . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 147
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 95

    (123) expression -> expression MENOR_IGUAL . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 148
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 96

    (124) expression -> expression MAYOR_IGUAL . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 149
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 97

    (125) expression -> expression MENOR . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 150
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 98

    (126) expression -> expression MAYOR . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 151
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 99

    (127) expression -> expression AND_BIT . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 152
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 100

    (128) expression -> expression OR_BIT . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 153
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 101

    (129) expression -> expression XOR_BIT . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 154
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 102

    (130) expression -> expression SHIFT_IZQ . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 155
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 103

    (131) expression -> expression SHIFT_DER . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 156
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 104

    (137) expression -> expression INTERROGACION . expression DOS_PUNTOS expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 157
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 105

    (152) increase -> expression SUMA_SUMA .

    COR_DER         reduce using rule 152 (increase -> expression SUMA_SUMA .)
    SUMA            reduce using rule 152 (increase -> expression SUMA_SUMA .)
    RESTA           reduce using rule 152 (increase -> expression SUMA_SUMA .)
    MULT            reduce using rule 152 (increase -> expression SUMA_SUMA .)
    DIV             reduce using rule 152 (increase -> expression SUMA_SUMA .)
    MOD             reduce using rule 152 (increase -> expression SUMA_SUMA .)
    AND             reduce using rule 152 (increase -> expression SUMA_SUMA .)
    OR              reduce using rule 152 (increase -> expression SUMA_SUMA .)
    ES_IGUAL        reduce using rule 152 (increase -> expression SUMA_SUMA .)
    NO_IGUAL        reduce using rule 152 (increase -> expression SUMA_SUMA .)
    MENOR_IGUAL     reduce using rule 152 (increase -> expression SUMA_SUMA .)
    MAYOR_IGUAL     reduce using rule 152 (increase -> expression SUMA_SUMA .)
    MENOR           reduce using rule 152 (increase -> expression SUMA_SUMA .)
    MAYOR           reduce using rule 152 (increase -> expression SUMA_SUMA .)
    AND_BIT         reduce using rule 152 (increase -> expression SUMA_SUMA .)
    OR_BIT          reduce using rule 152 (increase -> expression SUMA_SUMA .)
    XOR_BIT         reduce using rule 152 (increase -> expression SUMA_SUMA .)
    SHIFT_IZQ       reduce using rule 152 (increase -> expression SUMA_SUMA .)
    SHIFT_DER       reduce using rule 152 (increase -> expression SUMA_SUMA .)
    INTERROGACION   reduce using rule 152 (increase -> expression SUMA_SUMA .)
    SUMA_SUMA       reduce using rule 152 (increase -> expression SUMA_SUMA .)
    RESTA_RESTA     reduce using rule 152 (increase -> expression SUMA_SUMA .)
    PUNTO_COMA      reduce using rule 152 (increase -> expression SUMA_SUMA .)
    PAR_DER         reduce using rule 152 (increase -> expression SUMA_SUMA .)
    COMA            reduce using rule 152 (increase -> expression SUMA_SUMA .)
    DOS_PUNTOS      reduce using rule 152 (increase -> expression SUMA_SUMA .)
    BRA_DER         reduce using rule 152 (increase -> expression SUMA_SUMA .)


state 106

    (154) decrease -> expression RESTA_RESTA .

    COR_DER         reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    SUMA            reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    RESTA           reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    MULT            reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    DIV             reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    MOD             reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    AND             reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    OR              reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    ES_IGUAL        reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    NO_IGUAL        reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    MENOR_IGUAL     reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    MAYOR_IGUAL     reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    MENOR           reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    MAYOR           reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    AND_BIT         reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    OR_BIT          reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    XOR_BIT         reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    SHIFT_IZQ       reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    SHIFT_DER       reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    INTERROGACION   reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    SUMA_SUMA       reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    RESTA_RESTA     reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    PUNTO_COMA      reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    PAR_DER         reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    COMA            reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    DOS_PUNTOS      reduce using rule 154 (decrease -> expression RESTA_RESTA .)
    BRA_DER         reduce using rule 154 (decrease -> expression RESTA_RESTA .)


state 107

    (132) expression -> RESTA expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 132 (expression -> RESTA expression .)
    SUMA            reduce using rule 132 (expression -> RESTA expression .)
    RESTA           reduce using rule 132 (expression -> RESTA expression .)
    MULT            reduce using rule 132 (expression -> RESTA expression .)
    DIV             reduce using rule 132 (expression -> RESTA expression .)
    MOD             reduce using rule 132 (expression -> RESTA expression .)
    AND             reduce using rule 132 (expression -> RESTA expression .)
    OR              reduce using rule 132 (expression -> RESTA expression .)
    ES_IGUAL        reduce using rule 132 (expression -> RESTA expression .)
    NO_IGUAL        reduce using rule 132 (expression -> RESTA expression .)
    MENOR_IGUAL     reduce using rule 132 (expression -> RESTA expression .)
    MAYOR_IGUAL     reduce using rule 132 (expression -> RESTA expression .)
    MENOR           reduce using rule 132 (expression -> RESTA expression .)
    MAYOR           reduce using rule 132 (expression -> RESTA expression .)
    AND_BIT         reduce using rule 132 (expression -> RESTA expression .)
    OR_BIT          reduce using rule 132 (expression -> RESTA expression .)
    XOR_BIT         reduce using rule 132 (expression -> RESTA expression .)
    SHIFT_IZQ       reduce using rule 132 (expression -> RESTA expression .)
    SHIFT_DER       reduce using rule 132 (expression -> RESTA expression .)
    INTERROGACION   reduce using rule 132 (expression -> RESTA expression .)
    SUMA_SUMA       reduce using rule 132 (expression -> RESTA expression .)
    RESTA_RESTA     reduce using rule 132 (expression -> RESTA expression .)
    PUNTO_COMA      reduce using rule 132 (expression -> RESTA expression .)
    PAR_DER         reduce using rule 132 (expression -> RESTA expression .)
    COMA            reduce using rule 132 (expression -> RESTA expression .)
    DOS_PUNTOS      reduce using rule 132 (expression -> RESTA expression .)
    BRA_DER         reduce using rule 132 (expression -> RESTA expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 108

    (133) expression -> AND_BIT expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 133 (expression -> AND_BIT expression .)
    SUMA            reduce using rule 133 (expression -> AND_BIT expression .)
    RESTA           reduce using rule 133 (expression -> AND_BIT expression .)
    MULT            reduce using rule 133 (expression -> AND_BIT expression .)
    DIV             reduce using rule 133 (expression -> AND_BIT expression .)
    MOD             reduce using rule 133 (expression -> AND_BIT expression .)
    AND             reduce using rule 133 (expression -> AND_BIT expression .)
    OR              reduce using rule 133 (expression -> AND_BIT expression .)
    ES_IGUAL        reduce using rule 133 (expression -> AND_BIT expression .)
    NO_IGUAL        reduce using rule 133 (expression -> AND_BIT expression .)
    MENOR_IGUAL     reduce using rule 133 (expression -> AND_BIT expression .)
    MAYOR_IGUAL     reduce using rule 133 (expression -> AND_BIT expression .)
    MENOR           reduce using rule 133 (expression -> AND_BIT expression .)
    MAYOR           reduce using rule 133 (expression -> AND_BIT expression .)
    AND_BIT         reduce using rule 133 (expression -> AND_BIT expression .)
    OR_BIT          reduce using rule 133 (expression -> AND_BIT expression .)
    XOR_BIT         reduce using rule 133 (expression -> AND_BIT expression .)
    SHIFT_IZQ       reduce using rule 133 (expression -> AND_BIT expression .)
    SHIFT_DER       reduce using rule 133 (expression -> AND_BIT expression .)
    INTERROGACION   reduce using rule 133 (expression -> AND_BIT expression .)
    SUMA_SUMA       reduce using rule 133 (expression -> AND_BIT expression .)
    RESTA_RESTA     reduce using rule 133 (expression -> AND_BIT expression .)
    PUNTO_COMA      reduce using rule 133 (expression -> AND_BIT expression .)
    PAR_DER         reduce using rule 133 (expression -> AND_BIT expression .)
    COMA            reduce using rule 133 (expression -> AND_BIT expression .)
    DOS_PUNTOS      reduce using rule 133 (expression -> AND_BIT expression .)
    BRA_DER         reduce using rule 133 (expression -> AND_BIT expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 109

    (134) expression -> NOT expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 134 (expression -> NOT expression .)
    SUMA            reduce using rule 134 (expression -> NOT expression .)
    RESTA           reduce using rule 134 (expression -> NOT expression .)
    MULT            reduce using rule 134 (expression -> NOT expression .)
    DIV             reduce using rule 134 (expression -> NOT expression .)
    MOD             reduce using rule 134 (expression -> NOT expression .)
    AND             reduce using rule 134 (expression -> NOT expression .)
    OR              reduce using rule 134 (expression -> NOT expression .)
    ES_IGUAL        reduce using rule 134 (expression -> NOT expression .)
    NO_IGUAL        reduce using rule 134 (expression -> NOT expression .)
    MENOR_IGUAL     reduce using rule 134 (expression -> NOT expression .)
    MAYOR_IGUAL     reduce using rule 134 (expression -> NOT expression .)
    MENOR           reduce using rule 134 (expression -> NOT expression .)
    MAYOR           reduce using rule 134 (expression -> NOT expression .)
    AND_BIT         reduce using rule 134 (expression -> NOT expression .)
    OR_BIT          reduce using rule 134 (expression -> NOT expression .)
    XOR_BIT         reduce using rule 134 (expression -> NOT expression .)
    SHIFT_IZQ       reduce using rule 134 (expression -> NOT expression .)
    SHIFT_DER       reduce using rule 134 (expression -> NOT expression .)
    INTERROGACION   reduce using rule 134 (expression -> NOT expression .)
    SUMA_SUMA       reduce using rule 134 (expression -> NOT expression .)
    RESTA_RESTA     reduce using rule 134 (expression -> NOT expression .)
    PUNTO_COMA      reduce using rule 134 (expression -> NOT expression .)
    PAR_DER         reduce using rule 134 (expression -> NOT expression .)
    COMA            reduce using rule 134 (expression -> NOT expression .)
    DOS_PUNTOS      reduce using rule 134 (expression -> NOT expression .)
    BRA_DER         reduce using rule 134 (expression -> NOT expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 110

    (135) expression -> NOT_BIT expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 135 (expression -> NOT_BIT expression .)
    SUMA            reduce using rule 135 (expression -> NOT_BIT expression .)
    RESTA           reduce using rule 135 (expression -> NOT_BIT expression .)
    MULT            reduce using rule 135 (expression -> NOT_BIT expression .)
    DIV             reduce using rule 135 (expression -> NOT_BIT expression .)
    MOD             reduce using rule 135 (expression -> NOT_BIT expression .)
    AND             reduce using rule 135 (expression -> NOT_BIT expression .)
    OR              reduce using rule 135 (expression -> NOT_BIT expression .)
    ES_IGUAL        reduce using rule 135 (expression -> NOT_BIT expression .)
    NO_IGUAL        reduce using rule 135 (expression -> NOT_BIT expression .)
    MENOR_IGUAL     reduce using rule 135 (expression -> NOT_BIT expression .)
    MAYOR_IGUAL     reduce using rule 135 (expression -> NOT_BIT expression .)
    MENOR           reduce using rule 135 (expression -> NOT_BIT expression .)
    MAYOR           reduce using rule 135 (expression -> NOT_BIT expression .)
    AND_BIT         reduce using rule 135 (expression -> NOT_BIT expression .)
    OR_BIT          reduce using rule 135 (expression -> NOT_BIT expression .)
    XOR_BIT         reduce using rule 135 (expression -> NOT_BIT expression .)
    SHIFT_IZQ       reduce using rule 135 (expression -> NOT_BIT expression .)
    SHIFT_DER       reduce using rule 135 (expression -> NOT_BIT expression .)
    INTERROGACION   reduce using rule 135 (expression -> NOT_BIT expression .)
    SUMA_SUMA       reduce using rule 135 (expression -> NOT_BIT expression .)
    RESTA_RESTA     reduce using rule 135 (expression -> NOT_BIT expression .)
    PUNTO_COMA      reduce using rule 135 (expression -> NOT_BIT expression .)
    PAR_DER         reduce using rule 135 (expression -> NOT_BIT expression .)
    COMA            reduce using rule 135 (expression -> NOT_BIT expression .)
    DOS_PUNTOS      reduce using rule 135 (expression -> NOT_BIT expression .)
    BRA_DER         reduce using rule 135 (expression -> NOT_BIT expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 111

    (136) expression -> PAR_IZQ expression . PAR_DER
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PAR_DER         shift and go to state 158
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 112

    (148) conversion -> PAR_IZQ INT . PAR_DER expression

    PAR_DER         shift and go to state 159


state 113

    (149) conversion -> PAR_IZQ DOUBLE . PAR_DER expression

    PAR_DER         shift and go to state 160


state 114

    (150) conversion -> PAR_IZQ CHAR . PAR_DER expression

    PAR_DER         shift and go to state 161


state 115

    (147) expression -> identifier PUNTO . ID

    ID              shift and go to state 162


state 116

    (109) function_call -> ID param_val .

    COR_DER         reduce using rule 109 (function_call -> ID param_val .)
    SUMA            reduce using rule 109 (function_call -> ID param_val .)
    RESTA           reduce using rule 109 (function_call -> ID param_val .)
    MULT            reduce using rule 109 (function_call -> ID param_val .)
    DIV             reduce using rule 109 (function_call -> ID param_val .)
    MOD             reduce using rule 109 (function_call -> ID param_val .)
    AND             reduce using rule 109 (function_call -> ID param_val .)
    OR              reduce using rule 109 (function_call -> ID param_val .)
    ES_IGUAL        reduce using rule 109 (function_call -> ID param_val .)
    NO_IGUAL        reduce using rule 109 (function_call -> ID param_val .)
    MENOR_IGUAL     reduce using rule 109 (function_call -> ID param_val .)
    MAYOR_IGUAL     reduce using rule 109 (function_call -> ID param_val .)
    MENOR           reduce using rule 109 (function_call -> ID param_val .)
    MAYOR           reduce using rule 109 (function_call -> ID param_val .)
    AND_BIT         reduce using rule 109 (function_call -> ID param_val .)
    OR_BIT          reduce using rule 109 (function_call -> ID param_val .)
    XOR_BIT         reduce using rule 109 (function_call -> ID param_val .)
    SHIFT_IZQ       reduce using rule 109 (function_call -> ID param_val .)
    SHIFT_DER       reduce using rule 109 (function_call -> ID param_val .)
    INTERROGACION   reduce using rule 109 (function_call -> ID param_val .)
    SUMA_SUMA       reduce using rule 109 (function_call -> ID param_val .)
    RESTA_RESTA     reduce using rule 109 (function_call -> ID param_val .)
    PUNTO_COMA      reduce using rule 109 (function_call -> ID param_val .)
    PAR_DER         reduce using rule 109 (function_call -> ID param_val .)
    COMA            reduce using rule 109 (function_call -> ID param_val .)
    DOS_PUNTOS      reduce using rule 109 (function_call -> ID param_val .)
    BRA_DER         reduce using rule 109 (function_call -> ID param_val .)


state 117

    (110) param_val -> PAR_IZQ . PAR_DER
    (111) param_val -> PAR_IZQ . expression_list PAR_DER
    (112) expression_list -> . expression_list COMA expression
    (113) expression_list -> . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    PAR_DER         shift and go to state 163
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression_list                shift and go to state 164
    expression                     shift and go to state 165
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 118

    (151) increase -> SUMA_SUMA expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 151 (increase -> SUMA_SUMA expression .)
    SUMA            reduce using rule 151 (increase -> SUMA_SUMA expression .)
    RESTA           reduce using rule 151 (increase -> SUMA_SUMA expression .)
    MULT            reduce using rule 151 (increase -> SUMA_SUMA expression .)
    DIV             reduce using rule 151 (increase -> SUMA_SUMA expression .)
    MOD             reduce using rule 151 (increase -> SUMA_SUMA expression .)
    AND             reduce using rule 151 (increase -> SUMA_SUMA expression .)
    OR              reduce using rule 151 (increase -> SUMA_SUMA expression .)
    ES_IGUAL        reduce using rule 151 (increase -> SUMA_SUMA expression .)
    NO_IGUAL        reduce using rule 151 (increase -> SUMA_SUMA expression .)
    MENOR_IGUAL     reduce using rule 151 (increase -> SUMA_SUMA expression .)
    MAYOR_IGUAL     reduce using rule 151 (increase -> SUMA_SUMA expression .)
    MENOR           reduce using rule 151 (increase -> SUMA_SUMA expression .)
    MAYOR           reduce using rule 151 (increase -> SUMA_SUMA expression .)
    AND_BIT         reduce using rule 151 (increase -> SUMA_SUMA expression .)
    OR_BIT          reduce using rule 151 (increase -> SUMA_SUMA expression .)
    XOR_BIT         reduce using rule 151 (increase -> SUMA_SUMA expression .)
    SHIFT_IZQ       reduce using rule 151 (increase -> SUMA_SUMA expression .)
    SHIFT_DER       reduce using rule 151 (increase -> SUMA_SUMA expression .)
    INTERROGACION   reduce using rule 151 (increase -> SUMA_SUMA expression .)
    SUMA_SUMA       reduce using rule 151 (increase -> SUMA_SUMA expression .)
    RESTA_RESTA     reduce using rule 151 (increase -> SUMA_SUMA expression .)
    PUNTO_COMA      reduce using rule 151 (increase -> SUMA_SUMA expression .)
    PAR_DER         reduce using rule 151 (increase -> SUMA_SUMA expression .)
    COMA            reduce using rule 151 (increase -> SUMA_SUMA expression .)
    DOS_PUNTOS      reduce using rule 151 (increase -> SUMA_SUMA expression .)
    BRA_DER         reduce using rule 151 (increase -> SUMA_SUMA expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 119

    (153) decrease -> RESTA_RESTA expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    SUMA            reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    RESTA           reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    MULT            reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    DIV             reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    MOD             reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    AND             reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    OR              reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    ES_IGUAL        reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    NO_IGUAL        reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    MENOR_IGUAL     reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    MAYOR_IGUAL     reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    MENOR           reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    MAYOR           reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    AND_BIT         reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    OR_BIT          reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    XOR_BIT         reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    SHIFT_IZQ       reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    SHIFT_DER       reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    INTERROGACION   reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    SUMA_SUMA       reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    RESTA_RESTA     reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    PUNTO_COMA      reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    PAR_DER         reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    COMA            reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    DOS_PUNTOS      reduce using rule 153 (decrease -> RESTA_RESTA expression .)
    BRA_DER         reduce using rule 153 (decrease -> RESTA_RESTA expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 120

    (67) assignation -> identifier PUNTO ID equals . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    identifier                     shift and go to state 69
    expression                     shift and go to state 166
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 121

    (12) main -> INT MAIN new_label PAR_IZQ PAR_DER . function_block
    (27) function_block -> . BRA_IZQ new_scope instructions BRA_DER
    (29) function_block -> . BRA_IZQ BRA_DER

    BRA_IZQ         shift and go to state 168

    function_block                 shift and go to state 167

state 122

    (50) declaration_list -> declaration_list COMA ID IGUAL . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 169
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 123

    (51) declaration_list -> declaration_list COMA ID brackets . IGUAL BRA_IZQ expression_list BRA_DER
    (53) declaration_list -> declaration_list COMA ID brackets .

    IGUAL           shift and go to state 170
    COMA            reduce using rule 53 (declaration_list -> declaration_list COMA ID brackets .)
    PUNTO_COMA      reduce using rule 53 (declaration_list -> declaration_list COMA ID brackets .)


state 124

    (54) declaration_list -> declaration_list COMA ID COR_IZQ . COR_DER IGUAL CADENA
    (63) brackets -> COR_IZQ . COR_DER
    (65) bracket -> COR_IZQ . expression COR_DER
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    COR_DER         shift and go to state 171
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 55
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 125

    (14) function -> ID new_label param add_function . function_block
    (27) function_block -> . BRA_IZQ new_scope instructions BRA_DER
    (29) function_block -> . BRA_IZQ BRA_DER

    BRA_IZQ         shift and go to state 168

    function_block                 shift and go to state 172

state 126

    (16) param -> PAR_IZQ PAR_DER .

    BRA_IZQ         reduce using rule 16 (param -> PAR_IZQ PAR_DER .)


state 127

    (17) param -> PAR_IZQ parameter_list . PAR_DER
    (18) parameter_list -> parameter_list . COMA parameter

    PAR_DER         shift and go to state 173
    COMA            shift and go to state 174


state 128

    (19) parameter_list -> parameter .

    PAR_DER         reduce using rule 19 (parameter_list -> parameter .)
    COMA            reduce using rule 19 (parameter_list -> parameter .)


state 129

    (20) parameter -> primitive_type . ID

    ID              shift and go to state 175


state 130

    (21) primitive_type -> INT .

    ID              reduce using rule 21 (primitive_type -> INT .)


state 131

    (24) primitive_type -> STRUCT . ID

    ID              shift and go to state 176


state 132

    (56) declaration_list -> ID brackets IGUAL BRA_IZQ . expression_list BRA_DER
    (112) expression_list -> . expression_list COMA expression
    (113) expression_list -> . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression_list                shift and go to state 177
    expression                     shift and go to state 165
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 133

    (59) declaration_list -> ID COR_IZQ COR_DER IGUAL . CADENA

    CADENA          shift and go to state 178


state 134

    (26) struct_block -> BRA_IZQ new_scope declarations . BRA_DER
    (46) declarations -> declarations . declaration PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID

    BRA_DER         shift and go to state 179
    ID              shift and go to state 137
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131

    declaration                    shift and go to state 180
    primitive_type                 shift and go to state 136

state 135

    (47) declarations -> declaration . PUNTO_COMA

    PUNTO_COMA      shift and go to state 181


state 136

    (48) declaration -> primitive_type . declaration_list
    (50) declaration_list -> . declaration_list COMA ID IGUAL expression
    (51) declaration_list -> . declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> . declaration_list COMA ID
    (53) declaration_list -> . declaration_list COMA ID brackets
    (54) declaration_list -> . declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA
    (55) declaration_list -> . ID IGUAL expression
    (56) declaration_list -> . ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (57) declaration_list -> . ID
    (58) declaration_list -> . ID brackets
    (59) declaration_list -> . ID COR_IZQ COR_DER IGUAL CADENA

    ID              shift and go to state 28

    declaration_list               shift and go to state 21

state 137

    (49) declaration -> ID . declaration_list
    (50) declaration_list -> . declaration_list COMA ID IGUAL expression
    (51) declaration_list -> . declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> . declaration_list COMA ID
    (53) declaration_list -> . declaration_list COMA ID brackets
    (54) declaration_list -> . declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA
    (55) declaration_list -> . ID IGUAL expression
    (56) declaration_list -> . ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (57) declaration_list -> . ID
    (58) declaration_list -> . ID brackets
    (59) declaration_list -> . ID COR_IZQ COR_DER IGUAL CADENA

    ID              shift and go to state 28

    declaration_list               shift and go to state 29

state 138

    (64) bracket -> bracket COR_IZQ expression COR_DER .

    COR_IZQ         reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    PUNTO           reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    IGUAL           reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    SUMA_IGUAL      reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    RESTA_IGUAL     reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MULT_IGUAL      reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    DIV_IGUAL       reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MOD_IGUAL       reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    SHIFT_IZQ_IGUAL reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    SHIFT_DER_IGUAL reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    AND_BIT_IGUAL   reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    XOR_BIT_IGUAL   reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    OR_BIT_IGUAL    reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    COMA            reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    PUNTO_COMA      reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    COR_DER         reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    SUMA            reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    RESTA           reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MULT            reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    DIV             reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MOD             reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    AND             reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    OR              reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    ES_IGUAL        reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    NO_IGUAL        reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MENOR_IGUAL     reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MAYOR_IGUAL     reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MENOR           reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    MAYOR           reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    AND_BIT         reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    OR_BIT          reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    XOR_BIT         reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    SHIFT_IZQ       reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    SHIFT_DER       reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    INTERROGACION   reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    SUMA_SUMA       reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    RESTA_RESTA     reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    PAR_DER         reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    DOS_PUNTOS      reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)
    BRA_DER         reduce using rule 64 (bracket -> bracket COR_IZQ expression COR_DER .)


state 139

    (114) expression -> expression SUMA expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 114 (expression -> expression SUMA expression .)
    SUMA            reduce using rule 114 (expression -> expression SUMA expression .)
    RESTA           reduce using rule 114 (expression -> expression SUMA expression .)
    AND             reduce using rule 114 (expression -> expression SUMA expression .)
    OR              reduce using rule 114 (expression -> expression SUMA expression .)
    ES_IGUAL        reduce using rule 114 (expression -> expression SUMA expression .)
    NO_IGUAL        reduce using rule 114 (expression -> expression SUMA expression .)
    MENOR_IGUAL     reduce using rule 114 (expression -> expression SUMA expression .)
    MAYOR_IGUAL     reduce using rule 114 (expression -> expression SUMA expression .)
    MENOR           reduce using rule 114 (expression -> expression SUMA expression .)
    MAYOR           reduce using rule 114 (expression -> expression SUMA expression .)
    AND_BIT         reduce using rule 114 (expression -> expression SUMA expression .)
    OR_BIT          reduce using rule 114 (expression -> expression SUMA expression .)
    XOR_BIT         reduce using rule 114 (expression -> expression SUMA expression .)
    SHIFT_IZQ       reduce using rule 114 (expression -> expression SUMA expression .)
    SHIFT_DER       reduce using rule 114 (expression -> expression SUMA expression .)
    INTERROGACION   reduce using rule 114 (expression -> expression SUMA expression .)
    SUMA_SUMA       reduce using rule 114 (expression -> expression SUMA expression .)
    RESTA_RESTA     reduce using rule 114 (expression -> expression SUMA expression .)
    PUNTO_COMA      reduce using rule 114 (expression -> expression SUMA expression .)
    PAR_DER         reduce using rule 114 (expression -> expression SUMA expression .)
    COMA            reduce using rule 114 (expression -> expression SUMA expression .)
    DOS_PUNTOS      reduce using rule 114 (expression -> expression SUMA expression .)
    BRA_DER         reduce using rule 114 (expression -> expression SUMA expression .)
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90

  ! MULT            [ reduce using rule 114 (expression -> expression SUMA expression .) ]
  ! DIV             [ reduce using rule 114 (expression -> expression SUMA expression .) ]
  ! MOD             [ reduce using rule 114 (expression -> expression SUMA expression .) ]
  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 140

    (115) expression -> expression RESTA expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 115 (expression -> expression RESTA expression .)
    SUMA            reduce using rule 115 (expression -> expression RESTA expression .)
    RESTA           reduce using rule 115 (expression -> expression RESTA expression .)
    AND             reduce using rule 115 (expression -> expression RESTA expression .)
    OR              reduce using rule 115 (expression -> expression RESTA expression .)
    ES_IGUAL        reduce using rule 115 (expression -> expression RESTA expression .)
    NO_IGUAL        reduce using rule 115 (expression -> expression RESTA expression .)
    MENOR_IGUAL     reduce using rule 115 (expression -> expression RESTA expression .)
    MAYOR_IGUAL     reduce using rule 115 (expression -> expression RESTA expression .)
    MENOR           reduce using rule 115 (expression -> expression RESTA expression .)
    MAYOR           reduce using rule 115 (expression -> expression RESTA expression .)
    AND_BIT         reduce using rule 115 (expression -> expression RESTA expression .)
    OR_BIT          reduce using rule 115 (expression -> expression RESTA expression .)
    XOR_BIT         reduce using rule 115 (expression -> expression RESTA expression .)
    SHIFT_IZQ       reduce using rule 115 (expression -> expression RESTA expression .)
    SHIFT_DER       reduce using rule 115 (expression -> expression RESTA expression .)
    INTERROGACION   reduce using rule 115 (expression -> expression RESTA expression .)
    SUMA_SUMA       reduce using rule 115 (expression -> expression RESTA expression .)
    RESTA_RESTA     reduce using rule 115 (expression -> expression RESTA expression .)
    PUNTO_COMA      reduce using rule 115 (expression -> expression RESTA expression .)
    PAR_DER         reduce using rule 115 (expression -> expression RESTA expression .)
    COMA            reduce using rule 115 (expression -> expression RESTA expression .)
    DOS_PUNTOS      reduce using rule 115 (expression -> expression RESTA expression .)
    BRA_DER         reduce using rule 115 (expression -> expression RESTA expression .)
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90

  ! MULT            [ reduce using rule 115 (expression -> expression RESTA expression .) ]
  ! DIV             [ reduce using rule 115 (expression -> expression RESTA expression .) ]
  ! MOD             [ reduce using rule 115 (expression -> expression RESTA expression .) ]
  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 141

    (116) expression -> expression MULT expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 116 (expression -> expression MULT expression .)
    SUMA            reduce using rule 116 (expression -> expression MULT expression .)
    RESTA           reduce using rule 116 (expression -> expression MULT expression .)
    MULT            reduce using rule 116 (expression -> expression MULT expression .)
    DIV             reduce using rule 116 (expression -> expression MULT expression .)
    MOD             reduce using rule 116 (expression -> expression MULT expression .)
    AND             reduce using rule 116 (expression -> expression MULT expression .)
    OR              reduce using rule 116 (expression -> expression MULT expression .)
    ES_IGUAL        reduce using rule 116 (expression -> expression MULT expression .)
    NO_IGUAL        reduce using rule 116 (expression -> expression MULT expression .)
    MENOR_IGUAL     reduce using rule 116 (expression -> expression MULT expression .)
    MAYOR_IGUAL     reduce using rule 116 (expression -> expression MULT expression .)
    MENOR           reduce using rule 116 (expression -> expression MULT expression .)
    MAYOR           reduce using rule 116 (expression -> expression MULT expression .)
    AND_BIT         reduce using rule 116 (expression -> expression MULT expression .)
    OR_BIT          reduce using rule 116 (expression -> expression MULT expression .)
    XOR_BIT         reduce using rule 116 (expression -> expression MULT expression .)
    SHIFT_IZQ       reduce using rule 116 (expression -> expression MULT expression .)
    SHIFT_DER       reduce using rule 116 (expression -> expression MULT expression .)
    INTERROGACION   reduce using rule 116 (expression -> expression MULT expression .)
    SUMA_SUMA       reduce using rule 116 (expression -> expression MULT expression .)
    RESTA_RESTA     reduce using rule 116 (expression -> expression MULT expression .)
    PUNTO_COMA      reduce using rule 116 (expression -> expression MULT expression .)
    PAR_DER         reduce using rule 116 (expression -> expression MULT expression .)
    COMA            reduce using rule 116 (expression -> expression MULT expression .)
    DOS_PUNTOS      reduce using rule 116 (expression -> expression MULT expression .)
    BRA_DER         reduce using rule 116 (expression -> expression MULT expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 142

    (117) expression -> expression DIV expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 117 (expression -> expression DIV expression .)
    SUMA            reduce using rule 117 (expression -> expression DIV expression .)
    RESTA           reduce using rule 117 (expression -> expression DIV expression .)
    MULT            reduce using rule 117 (expression -> expression DIV expression .)
    DIV             reduce using rule 117 (expression -> expression DIV expression .)
    MOD             reduce using rule 117 (expression -> expression DIV expression .)
    AND             reduce using rule 117 (expression -> expression DIV expression .)
    OR              reduce using rule 117 (expression -> expression DIV expression .)
    ES_IGUAL        reduce using rule 117 (expression -> expression DIV expression .)
    NO_IGUAL        reduce using rule 117 (expression -> expression DIV expression .)
    MENOR_IGUAL     reduce using rule 117 (expression -> expression DIV expression .)
    MAYOR_IGUAL     reduce using rule 117 (expression -> expression DIV expression .)
    MENOR           reduce using rule 117 (expression -> expression DIV expression .)
    MAYOR           reduce using rule 117 (expression -> expression DIV expression .)
    AND_BIT         reduce using rule 117 (expression -> expression DIV expression .)
    OR_BIT          reduce using rule 117 (expression -> expression DIV expression .)
    XOR_BIT         reduce using rule 117 (expression -> expression DIV expression .)
    SHIFT_IZQ       reduce using rule 117 (expression -> expression DIV expression .)
    SHIFT_DER       reduce using rule 117 (expression -> expression DIV expression .)
    INTERROGACION   reduce using rule 117 (expression -> expression DIV expression .)
    SUMA_SUMA       reduce using rule 117 (expression -> expression DIV expression .)
    RESTA_RESTA     reduce using rule 117 (expression -> expression DIV expression .)
    PUNTO_COMA      reduce using rule 117 (expression -> expression DIV expression .)
    PAR_DER         reduce using rule 117 (expression -> expression DIV expression .)
    COMA            reduce using rule 117 (expression -> expression DIV expression .)
    DOS_PUNTOS      reduce using rule 117 (expression -> expression DIV expression .)
    BRA_DER         reduce using rule 117 (expression -> expression DIV expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 143

    (118) expression -> expression MOD expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 118 (expression -> expression MOD expression .)
    SUMA            reduce using rule 118 (expression -> expression MOD expression .)
    RESTA           reduce using rule 118 (expression -> expression MOD expression .)
    MULT            reduce using rule 118 (expression -> expression MOD expression .)
    DIV             reduce using rule 118 (expression -> expression MOD expression .)
    MOD             reduce using rule 118 (expression -> expression MOD expression .)
    AND             reduce using rule 118 (expression -> expression MOD expression .)
    OR              reduce using rule 118 (expression -> expression MOD expression .)
    ES_IGUAL        reduce using rule 118 (expression -> expression MOD expression .)
    NO_IGUAL        reduce using rule 118 (expression -> expression MOD expression .)
    MENOR_IGUAL     reduce using rule 118 (expression -> expression MOD expression .)
    MAYOR_IGUAL     reduce using rule 118 (expression -> expression MOD expression .)
    MENOR           reduce using rule 118 (expression -> expression MOD expression .)
    MAYOR           reduce using rule 118 (expression -> expression MOD expression .)
    AND_BIT         reduce using rule 118 (expression -> expression MOD expression .)
    OR_BIT          reduce using rule 118 (expression -> expression MOD expression .)
    XOR_BIT         reduce using rule 118 (expression -> expression MOD expression .)
    SHIFT_IZQ       reduce using rule 118 (expression -> expression MOD expression .)
    SHIFT_DER       reduce using rule 118 (expression -> expression MOD expression .)
    INTERROGACION   reduce using rule 118 (expression -> expression MOD expression .)
    SUMA_SUMA       reduce using rule 118 (expression -> expression MOD expression .)
    RESTA_RESTA     reduce using rule 118 (expression -> expression MOD expression .)
    PUNTO_COMA      reduce using rule 118 (expression -> expression MOD expression .)
    PAR_DER         reduce using rule 118 (expression -> expression MOD expression .)
    COMA            reduce using rule 118 (expression -> expression MOD expression .)
    DOS_PUNTOS      reduce using rule 118 (expression -> expression MOD expression .)
    BRA_DER         reduce using rule 118 (expression -> expression MOD expression .)

  ! SUMA            [ shift and go to state 86 ]
  ! RESTA           [ shift and go to state 87 ]
  ! MULT            [ shift and go to state 88 ]
  ! DIV             [ shift and go to state 89 ]
  ! MOD             [ shift and go to state 90 ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 144

    (119) expression -> expression AND expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 119 (expression -> expression AND expression .)
    AND             reduce using rule 119 (expression -> expression AND expression .)
    OR              reduce using rule 119 (expression -> expression AND expression .)
    INTERROGACION   reduce using rule 119 (expression -> expression AND expression .)
    SUMA_SUMA       reduce using rule 119 (expression -> expression AND expression .)
    RESTA_RESTA     reduce using rule 119 (expression -> expression AND expression .)
    PUNTO_COMA      reduce using rule 119 (expression -> expression AND expression .)
    PAR_DER         reduce using rule 119 (expression -> expression AND expression .)
    COMA            reduce using rule 119 (expression -> expression AND expression .)
    DOS_PUNTOS      reduce using rule 119 (expression -> expression AND expression .)
    BRA_DER         reduce using rule 119 (expression -> expression AND expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! RESTA           [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! ES_IGUAL        [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! NO_IGUAL        [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! MENOR           [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! MAYOR           [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! AND_BIT         [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! OR_BIT          [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! XOR_BIT         [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! SHIFT_DER       [ reduce using rule 119 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 145

    (120) expression -> expression OR expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 120 (expression -> expression OR expression .)
    OR              reduce using rule 120 (expression -> expression OR expression .)
    INTERROGACION   reduce using rule 120 (expression -> expression OR expression .)
    SUMA_SUMA       reduce using rule 120 (expression -> expression OR expression .)
    RESTA_RESTA     reduce using rule 120 (expression -> expression OR expression .)
    PUNTO_COMA      reduce using rule 120 (expression -> expression OR expression .)
    PAR_DER         reduce using rule 120 (expression -> expression OR expression .)
    COMA            reduce using rule 120 (expression -> expression OR expression .)
    DOS_PUNTOS      reduce using rule 120 (expression -> expression OR expression .)
    BRA_DER         reduce using rule 120 (expression -> expression OR expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! RESTA           [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! ES_IGUAL        [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! NO_IGUAL        [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! MENOR           [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! MAYOR           [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! AND_BIT         [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! OR_BIT          [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! XOR_BIT         [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! SHIFT_DER       [ reduce using rule 120 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 92 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 146

    (121) expression -> expression ES_IGUAL expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    AND             reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    OR              reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    ES_IGUAL        reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    NO_IGUAL        reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    AND_BIT         reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    OR_BIT          reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    XOR_BIT         reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    INTERROGACION   reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    SUMA_SUMA       reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    RESTA_RESTA     reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    PUNTO_COMA      reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    PAR_DER         reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    COMA            reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    DOS_PUNTOS      reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    BRA_DER         reduce using rule 121 (expression -> expression ES_IGUAL expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! RESTA           [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! MULT            [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! DIV             [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! MOD             [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! MENOR           [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! MAYOR           [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! SHIFT_DER       [ reduce using rule 121 (expression -> expression ES_IGUAL expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 147

    (122) expression -> expression NO_IGUAL expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    AND             reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    OR              reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    ES_IGUAL        reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    NO_IGUAL        reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    AND_BIT         reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    OR_BIT          reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    XOR_BIT         reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    INTERROGACION   reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    SUMA_SUMA       reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    RESTA_RESTA     reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    PUNTO_COMA      reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    PAR_DER         reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    COMA            reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    DOS_PUNTOS      reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    BRA_DER         reduce using rule 122 (expression -> expression NO_IGUAL expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! RESTA           [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! MULT            [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! DIV             [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! MOD             [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! MENOR           [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! MAYOR           [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! SHIFT_DER       [ reduce using rule 122 (expression -> expression NO_IGUAL expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 148

    (123) expression -> expression MENOR_IGUAL expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    AND             reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    OR              reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    ES_IGUAL        reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    NO_IGUAL        reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    MENOR_IGUAL     reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    MAYOR_IGUAL     reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    MENOR           reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    MAYOR           reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    AND_BIT         reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    OR_BIT          reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    XOR_BIT         reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    INTERROGACION   reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    SUMA_SUMA       reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    RESTA_RESTA     reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    PUNTO_COMA      reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    PAR_DER         reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    COMA            reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    DOS_PUNTOS      reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    BRA_DER         reduce using rule 123 (expression -> expression MENOR_IGUAL expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 123 (expression -> expression MENOR_IGUAL expression .) ]
  ! RESTA           [ reduce using rule 123 (expression -> expression MENOR_IGUAL expression .) ]
  ! MULT            [ reduce using rule 123 (expression -> expression MENOR_IGUAL expression .) ]
  ! DIV             [ reduce using rule 123 (expression -> expression MENOR_IGUAL expression .) ]
  ! MOD             [ reduce using rule 123 (expression -> expression MENOR_IGUAL expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 123 (expression -> expression MENOR_IGUAL expression .) ]
  ! SHIFT_DER       [ reduce using rule 123 (expression -> expression MENOR_IGUAL expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 149

    (124) expression -> expression MAYOR_IGUAL expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    AND             reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    OR              reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    ES_IGUAL        reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    NO_IGUAL        reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    MENOR_IGUAL     reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    MAYOR_IGUAL     reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    MENOR           reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    MAYOR           reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    AND_BIT         reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    OR_BIT          reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    XOR_BIT         reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    INTERROGACION   reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    SUMA_SUMA       reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    RESTA_RESTA     reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    PUNTO_COMA      reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    PAR_DER         reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    COMA            reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    DOS_PUNTOS      reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    BRA_DER         reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .) ]
  ! RESTA           [ reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .) ]
  ! MULT            [ reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .) ]
  ! DIV             [ reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .) ]
  ! MOD             [ reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .) ]
  ! SHIFT_DER       [ reduce using rule 124 (expression -> expression MAYOR_IGUAL expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 150

    (125) expression -> expression MENOR expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 125 (expression -> expression MENOR expression .)
    AND             reduce using rule 125 (expression -> expression MENOR expression .)
    OR              reduce using rule 125 (expression -> expression MENOR expression .)
    ES_IGUAL        reduce using rule 125 (expression -> expression MENOR expression .)
    NO_IGUAL        reduce using rule 125 (expression -> expression MENOR expression .)
    MENOR_IGUAL     reduce using rule 125 (expression -> expression MENOR expression .)
    MAYOR_IGUAL     reduce using rule 125 (expression -> expression MENOR expression .)
    MENOR           reduce using rule 125 (expression -> expression MENOR expression .)
    MAYOR           reduce using rule 125 (expression -> expression MENOR expression .)
    AND_BIT         reduce using rule 125 (expression -> expression MENOR expression .)
    OR_BIT          reduce using rule 125 (expression -> expression MENOR expression .)
    XOR_BIT         reduce using rule 125 (expression -> expression MENOR expression .)
    INTERROGACION   reduce using rule 125 (expression -> expression MENOR expression .)
    SUMA_SUMA       reduce using rule 125 (expression -> expression MENOR expression .)
    RESTA_RESTA     reduce using rule 125 (expression -> expression MENOR expression .)
    PUNTO_COMA      reduce using rule 125 (expression -> expression MENOR expression .)
    PAR_DER         reduce using rule 125 (expression -> expression MENOR expression .)
    COMA            reduce using rule 125 (expression -> expression MENOR expression .)
    DOS_PUNTOS      reduce using rule 125 (expression -> expression MENOR expression .)
    BRA_DER         reduce using rule 125 (expression -> expression MENOR expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 125 (expression -> expression MENOR expression .) ]
  ! RESTA           [ reduce using rule 125 (expression -> expression MENOR expression .) ]
  ! MULT            [ reduce using rule 125 (expression -> expression MENOR expression .) ]
  ! DIV             [ reduce using rule 125 (expression -> expression MENOR expression .) ]
  ! MOD             [ reduce using rule 125 (expression -> expression MENOR expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 125 (expression -> expression MENOR expression .) ]
  ! SHIFT_DER       [ reduce using rule 125 (expression -> expression MENOR expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 151

    (126) expression -> expression MAYOR expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 126 (expression -> expression MAYOR expression .)
    AND             reduce using rule 126 (expression -> expression MAYOR expression .)
    OR              reduce using rule 126 (expression -> expression MAYOR expression .)
    ES_IGUAL        reduce using rule 126 (expression -> expression MAYOR expression .)
    NO_IGUAL        reduce using rule 126 (expression -> expression MAYOR expression .)
    MENOR_IGUAL     reduce using rule 126 (expression -> expression MAYOR expression .)
    MAYOR_IGUAL     reduce using rule 126 (expression -> expression MAYOR expression .)
    MENOR           reduce using rule 126 (expression -> expression MAYOR expression .)
    MAYOR           reduce using rule 126 (expression -> expression MAYOR expression .)
    AND_BIT         reduce using rule 126 (expression -> expression MAYOR expression .)
    OR_BIT          reduce using rule 126 (expression -> expression MAYOR expression .)
    XOR_BIT         reduce using rule 126 (expression -> expression MAYOR expression .)
    INTERROGACION   reduce using rule 126 (expression -> expression MAYOR expression .)
    SUMA_SUMA       reduce using rule 126 (expression -> expression MAYOR expression .)
    RESTA_RESTA     reduce using rule 126 (expression -> expression MAYOR expression .)
    PUNTO_COMA      reduce using rule 126 (expression -> expression MAYOR expression .)
    PAR_DER         reduce using rule 126 (expression -> expression MAYOR expression .)
    COMA            reduce using rule 126 (expression -> expression MAYOR expression .)
    DOS_PUNTOS      reduce using rule 126 (expression -> expression MAYOR expression .)
    BRA_DER         reduce using rule 126 (expression -> expression MAYOR expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 126 (expression -> expression MAYOR expression .) ]
  ! RESTA           [ reduce using rule 126 (expression -> expression MAYOR expression .) ]
  ! MULT            [ reduce using rule 126 (expression -> expression MAYOR expression .) ]
  ! DIV             [ reduce using rule 126 (expression -> expression MAYOR expression .) ]
  ! MOD             [ reduce using rule 126 (expression -> expression MAYOR expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 126 (expression -> expression MAYOR expression .) ]
  ! SHIFT_DER       [ reduce using rule 126 (expression -> expression MAYOR expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 152

    (127) expression -> expression AND_BIT expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 127 (expression -> expression AND_BIT expression .)
    AND             reduce using rule 127 (expression -> expression AND_BIT expression .)
    OR              reduce using rule 127 (expression -> expression AND_BIT expression .)
    AND_BIT         reduce using rule 127 (expression -> expression AND_BIT expression .)
    OR_BIT          reduce using rule 127 (expression -> expression AND_BIT expression .)
    XOR_BIT         reduce using rule 127 (expression -> expression AND_BIT expression .)
    INTERROGACION   reduce using rule 127 (expression -> expression AND_BIT expression .)
    SUMA_SUMA       reduce using rule 127 (expression -> expression AND_BIT expression .)
    RESTA_RESTA     reduce using rule 127 (expression -> expression AND_BIT expression .)
    PUNTO_COMA      reduce using rule 127 (expression -> expression AND_BIT expression .)
    PAR_DER         reduce using rule 127 (expression -> expression AND_BIT expression .)
    COMA            reduce using rule 127 (expression -> expression AND_BIT expression .)
    DOS_PUNTOS      reduce using rule 127 (expression -> expression AND_BIT expression .)
    BRA_DER         reduce using rule 127 (expression -> expression AND_BIT expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! RESTA           [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! MULT            [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! DIV             [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! MOD             [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! ES_IGUAL        [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! NO_IGUAL        [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! MENOR           [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! MAYOR           [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! SHIFT_DER       [ reduce using rule 127 (expression -> expression AND_BIT expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 153

    (128) expression -> expression OR_BIT expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 128 (expression -> expression OR_BIT expression .)
    AND             reduce using rule 128 (expression -> expression OR_BIT expression .)
    OR              reduce using rule 128 (expression -> expression OR_BIT expression .)
    OR_BIT          reduce using rule 128 (expression -> expression OR_BIT expression .)
    INTERROGACION   reduce using rule 128 (expression -> expression OR_BIT expression .)
    SUMA_SUMA       reduce using rule 128 (expression -> expression OR_BIT expression .)
    RESTA_RESTA     reduce using rule 128 (expression -> expression OR_BIT expression .)
    PUNTO_COMA      reduce using rule 128 (expression -> expression OR_BIT expression .)
    PAR_DER         reduce using rule 128 (expression -> expression OR_BIT expression .)
    COMA            reduce using rule 128 (expression -> expression OR_BIT expression .)
    DOS_PUNTOS      reduce using rule 128 (expression -> expression OR_BIT expression .)
    BRA_DER         reduce using rule 128 (expression -> expression OR_BIT expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! RESTA           [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! MULT            [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! DIV             [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! MOD             [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! ES_IGUAL        [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! NO_IGUAL        [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! MENOR           [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! MAYOR           [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! AND_BIT         [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! XOR_BIT         [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! SHIFT_DER       [ reduce using rule 128 (expression -> expression OR_BIT expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 154

    (129) expression -> expression XOR_BIT expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 129 (expression -> expression XOR_BIT expression .)
    AND             reduce using rule 129 (expression -> expression XOR_BIT expression .)
    OR              reduce using rule 129 (expression -> expression XOR_BIT expression .)
    OR_BIT          reduce using rule 129 (expression -> expression XOR_BIT expression .)
    XOR_BIT         reduce using rule 129 (expression -> expression XOR_BIT expression .)
    INTERROGACION   reduce using rule 129 (expression -> expression XOR_BIT expression .)
    SUMA_SUMA       reduce using rule 129 (expression -> expression XOR_BIT expression .)
    RESTA_RESTA     reduce using rule 129 (expression -> expression XOR_BIT expression .)
    PUNTO_COMA      reduce using rule 129 (expression -> expression XOR_BIT expression .)
    PAR_DER         reduce using rule 129 (expression -> expression XOR_BIT expression .)
    COMA            reduce using rule 129 (expression -> expression XOR_BIT expression .)
    DOS_PUNTOS      reduce using rule 129 (expression -> expression XOR_BIT expression .)
    BRA_DER         reduce using rule 129 (expression -> expression XOR_BIT expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103

  ! SUMA            [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! RESTA           [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! MULT            [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! DIV             [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! MOD             [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! ES_IGUAL        [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! NO_IGUAL        [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! MENOR           [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! MAYOR           [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! AND_BIT         [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! SHIFT_DER       [ reduce using rule 129 (expression -> expression XOR_BIT expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 155

    (130) expression -> expression SHIFT_IZQ expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    AND             reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    OR              reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    ES_IGUAL        reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    NO_IGUAL        reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    MENOR_IGUAL     reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    MAYOR_IGUAL     reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    MENOR           reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    MAYOR           reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    AND_BIT         reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    OR_BIT          reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    XOR_BIT         reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    SHIFT_IZQ       reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    SHIFT_DER       reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    INTERROGACION   reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    SUMA_SUMA       reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    RESTA_RESTA     reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    PUNTO_COMA      reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    PAR_DER         reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    COMA            reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    DOS_PUNTOS      reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    BRA_DER         reduce using rule 130 (expression -> expression SHIFT_IZQ expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90

  ! SUMA            [ reduce using rule 130 (expression -> expression SHIFT_IZQ expression .) ]
  ! RESTA           [ reduce using rule 130 (expression -> expression SHIFT_IZQ expression .) ]
  ! MULT            [ reduce using rule 130 (expression -> expression SHIFT_IZQ expression .) ]
  ! DIV             [ reduce using rule 130 (expression -> expression SHIFT_IZQ expression .) ]
  ! MOD             [ reduce using rule 130 (expression -> expression SHIFT_IZQ expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 156

    (131) expression -> expression SHIFT_DER expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COR_DER         reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    AND             reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    OR              reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    ES_IGUAL        reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    NO_IGUAL        reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    MENOR_IGUAL     reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    MAYOR_IGUAL     reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    MENOR           reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    MAYOR           reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    AND_BIT         reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    OR_BIT          reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    XOR_BIT         reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    SHIFT_IZQ       reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    SHIFT_DER       reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    INTERROGACION   reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    SUMA_SUMA       reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    RESTA_RESTA     reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    PUNTO_COMA      reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    PAR_DER         reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    COMA            reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    DOS_PUNTOS      reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    BRA_DER         reduce using rule 131 (expression -> expression SHIFT_DER expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90

  ! SUMA            [ reduce using rule 131 (expression -> expression SHIFT_DER expression .) ]
  ! RESTA           [ reduce using rule 131 (expression -> expression SHIFT_DER expression .) ]
  ! MULT            [ reduce using rule 131 (expression -> expression SHIFT_DER expression .) ]
  ! DIV             [ reduce using rule 131 (expression -> expression SHIFT_DER expression .) ]
  ! MOD             [ reduce using rule 131 (expression -> expression SHIFT_DER expression .) ]
  ! AND             [ shift and go to state 91 ]
  ! OR              [ shift and go to state 92 ]
  ! ES_IGUAL        [ shift and go to state 93 ]
  ! NO_IGUAL        [ shift and go to state 94 ]
  ! MENOR_IGUAL     [ shift and go to state 95 ]
  ! MAYOR_IGUAL     [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! AND_BIT         [ shift and go to state 99 ]
  ! OR_BIT          [ shift and go to state 100 ]
  ! XOR_BIT         [ shift and go to state 101 ]
  ! SHIFT_IZQ       [ shift and go to state 102 ]
  ! SHIFT_DER       [ shift and go to state 103 ]
  ! INTERROGACION   [ shift and go to state 104 ]
  ! SUMA_SUMA       [ shift and go to state 105 ]
  ! RESTA_RESTA     [ shift and go to state 106 ]


state 157

    (137) expression -> expression INTERROGACION expression . DOS_PUNTOS expression
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    DOS_PUNTOS      shift and go to state 182
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 158

    (136) expression -> PAR_IZQ expression PAR_DER .

    COR_DER         reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    SUMA            reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    RESTA           reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    MULT            reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    DIV             reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    MOD             reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    AND             reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    OR              reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    ES_IGUAL        reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    NO_IGUAL        reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    MENOR_IGUAL     reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    MAYOR_IGUAL     reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    MENOR           reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    MAYOR           reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    AND_BIT         reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    OR_BIT          reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    XOR_BIT         reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    SHIFT_IZQ       reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    SHIFT_DER       reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    INTERROGACION   reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    SUMA_SUMA       reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    RESTA_RESTA     reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    PUNTO_COMA      reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    PAR_DER         reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    COMA            reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    DOS_PUNTOS      reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)
    BRA_DER         reduce using rule 136 (expression -> PAR_IZQ expression PAR_DER .)


state 159

    (148) conversion -> PAR_IZQ INT PAR_DER . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 183
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 160

    (149) conversion -> PAR_IZQ DOUBLE PAR_DER . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 184
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 161

    (150) conversion -> PAR_IZQ CHAR PAR_DER . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 185
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 162

    (147) expression -> identifier PUNTO ID .

    COR_DER         reduce using rule 147 (expression -> identifier PUNTO ID .)
    SUMA            reduce using rule 147 (expression -> identifier PUNTO ID .)
    RESTA           reduce using rule 147 (expression -> identifier PUNTO ID .)
    MULT            reduce using rule 147 (expression -> identifier PUNTO ID .)
    DIV             reduce using rule 147 (expression -> identifier PUNTO ID .)
    MOD             reduce using rule 147 (expression -> identifier PUNTO ID .)
    AND             reduce using rule 147 (expression -> identifier PUNTO ID .)
    OR              reduce using rule 147 (expression -> identifier PUNTO ID .)
    ES_IGUAL        reduce using rule 147 (expression -> identifier PUNTO ID .)
    NO_IGUAL        reduce using rule 147 (expression -> identifier PUNTO ID .)
    MENOR_IGUAL     reduce using rule 147 (expression -> identifier PUNTO ID .)
    MAYOR_IGUAL     reduce using rule 147 (expression -> identifier PUNTO ID .)
    MENOR           reduce using rule 147 (expression -> identifier PUNTO ID .)
    MAYOR           reduce using rule 147 (expression -> identifier PUNTO ID .)
    AND_BIT         reduce using rule 147 (expression -> identifier PUNTO ID .)
    OR_BIT          reduce using rule 147 (expression -> identifier PUNTO ID .)
    XOR_BIT         reduce using rule 147 (expression -> identifier PUNTO ID .)
    SHIFT_IZQ       reduce using rule 147 (expression -> identifier PUNTO ID .)
    SHIFT_DER       reduce using rule 147 (expression -> identifier PUNTO ID .)
    INTERROGACION   reduce using rule 147 (expression -> identifier PUNTO ID .)
    SUMA_SUMA       reduce using rule 147 (expression -> identifier PUNTO ID .)
    RESTA_RESTA     reduce using rule 147 (expression -> identifier PUNTO ID .)
    PUNTO_COMA      reduce using rule 147 (expression -> identifier PUNTO ID .)
    PAR_DER         reduce using rule 147 (expression -> identifier PUNTO ID .)
    COMA            reduce using rule 147 (expression -> identifier PUNTO ID .)
    DOS_PUNTOS      reduce using rule 147 (expression -> identifier PUNTO ID .)
    BRA_DER         reduce using rule 147 (expression -> identifier PUNTO ID .)


state 163

    (110) param_val -> PAR_IZQ PAR_DER .

    COR_DER         reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    SUMA            reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    RESTA           reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    MULT            reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    DIV             reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    MOD             reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    AND             reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    OR              reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    ES_IGUAL        reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    NO_IGUAL        reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    MENOR_IGUAL     reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    MAYOR_IGUAL     reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    MENOR           reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    MAYOR           reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    AND_BIT         reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    OR_BIT          reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    XOR_BIT         reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    SHIFT_IZQ       reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    SHIFT_DER       reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    INTERROGACION   reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    SUMA_SUMA       reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    RESTA_RESTA     reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    PUNTO_COMA      reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    PAR_DER         reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    COMA            reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    DOS_PUNTOS      reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)
    BRA_DER         reduce using rule 110 (param_val -> PAR_IZQ PAR_DER .)


state 164

    (111) param_val -> PAR_IZQ expression_list . PAR_DER
    (112) expression_list -> expression_list . COMA expression

    PAR_DER         shift and go to state 186
    COMA            shift and go to state 187


state 165

    (113) expression_list -> expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PAR_DER         reduce using rule 113 (expression_list -> expression .)
    COMA            reduce using rule 113 (expression_list -> expression .)
    BRA_DER         reduce using rule 113 (expression_list -> expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 166

    (67) assignation -> identifier PUNTO ID equals expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PUNTO_COMA      reduce using rule 67 (assignation -> identifier PUNTO ID equals expression .)
    PAR_DER         reduce using rule 67 (assignation -> identifier PUNTO ID equals expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 167

    (12) main -> INT MAIN new_label PAR_IZQ PAR_DER function_block .

    $end            reduce using rule 12 (main -> INT MAIN new_label PAR_IZQ PAR_DER function_block .)


state 168

    (27) function_block -> BRA_IZQ . new_scope instructions BRA_DER
    (29) function_block -> BRA_IZQ . BRA_DER
    (28) new_scope -> .

    BRA_DER         shift and go to state 189
    PUNTO_COMA      reduce using rule 28 (new_scope -> .)
    ID              reduce using rule 28 (new_scope -> .)
    FOR             reduce using rule 28 (new_scope -> .)
    WHILE           reduce using rule 28 (new_scope -> .)
    DO              reduce using rule 28 (new_scope -> .)
    IF              reduce using rule 28 (new_scope -> .)
    SWITCH          reduce using rule 28 (new_scope -> .)
    GOTO            reduce using rule 28 (new_scope -> .)
    BREAK           reduce using rule 28 (new_scope -> .)
    CONTINUE        reduce using rule 28 (new_scope -> .)
    RETURN          reduce using rule 28 (new_scope -> .)
    RESTA           reduce using rule 28 (new_scope -> .)
    AND_BIT         reduce using rule 28 (new_scope -> .)
    NOT             reduce using rule 28 (new_scope -> .)
    NOT_BIT         reduce using rule 28 (new_scope -> .)
    PAR_IZQ         reduce using rule 28 (new_scope -> .)
    ENTERO          reduce using rule 28 (new_scope -> .)
    DECIMAL         reduce using rule 28 (new_scope -> .)
    CARACTER        reduce using rule 28 (new_scope -> .)
    CADENA          reduce using rule 28 (new_scope -> .)
    INT             reduce using rule 28 (new_scope -> .)
    DOUBLE          reduce using rule 28 (new_scope -> .)
    CHAR            reduce using rule 28 (new_scope -> .)
    STRUCT          reduce using rule 28 (new_scope -> .)
    SUMA_SUMA       reduce using rule 28 (new_scope -> .)
    RESTA_RESTA     reduce using rule 28 (new_scope -> .)

    new_scope                      shift and go to state 188

state 169

    (50) declaration_list -> declaration_list COMA ID IGUAL expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    COMA            reduce using rule 50 (declaration_list -> declaration_list COMA ID IGUAL expression .)
    PUNTO_COMA      reduce using rule 50 (declaration_list -> declaration_list COMA ID IGUAL expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 170

    (51) declaration_list -> declaration_list COMA ID brackets IGUAL . BRA_IZQ expression_list BRA_DER

    BRA_IZQ         shift and go to state 190


state 171

    (54) declaration_list -> declaration_list COMA ID COR_IZQ COR_DER . IGUAL CADENA
    (63) brackets -> COR_IZQ COR_DER .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 191
    COMA            reduce using rule 63 (brackets -> COR_IZQ COR_DER .)
    PUNTO_COMA      reduce using rule 63 (brackets -> COR_IZQ COR_DER .)

  ! IGUAL           [ reduce using rule 63 (brackets -> COR_IZQ COR_DER .) ]


state 172

    (14) function -> ID new_label param add_function function_block .

    INT             reduce using rule 14 (function -> ID new_label param add_function function_block .)
    VOID            reduce using rule 14 (function -> ID new_label param add_function function_block .)
    DOUBLE          reduce using rule 14 (function -> ID new_label param add_function function_block .)
    CHAR            reduce using rule 14 (function -> ID new_label param add_function function_block .)
    STRUCT          reduce using rule 14 (function -> ID new_label param add_function function_block .)
    ID              reduce using rule 14 (function -> ID new_label param add_function function_block .)


state 173

    (17) param -> PAR_IZQ parameter_list PAR_DER .

    BRA_IZQ         reduce using rule 17 (param -> PAR_IZQ parameter_list PAR_DER .)


state 174

    (18) parameter_list -> parameter_list COMA . parameter
    (20) parameter -> . primitive_type ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID

    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131

    parameter                      shift and go to state 192
    primitive_type                 shift and go to state 129

state 175

    (20) parameter -> primitive_type ID .

    PAR_DER         reduce using rule 20 (parameter -> primitive_type ID .)
    COMA            reduce using rule 20 (parameter -> primitive_type ID .)


state 176

    (24) primitive_type -> STRUCT ID .

    ID              reduce using rule 24 (primitive_type -> STRUCT ID .)


state 177

    (56) declaration_list -> ID brackets IGUAL BRA_IZQ expression_list . BRA_DER
    (112) expression_list -> expression_list . COMA expression

    BRA_DER         shift and go to state 193
    COMA            shift and go to state 187


state 178

    (59) declaration_list -> ID COR_IZQ COR_DER IGUAL CADENA .

    COMA            reduce using rule 59 (declaration_list -> ID COR_IZQ COR_DER IGUAL CADENA .)
    PUNTO_COMA      reduce using rule 59 (declaration_list -> ID COR_IZQ COR_DER IGUAL CADENA .)


state 179

    (26) struct_block -> BRA_IZQ new_scope declarations BRA_DER .

    PUNTO_COMA      reduce using rule 26 (struct_block -> BRA_IZQ new_scope declarations BRA_DER .)


state 180

    (46) declarations -> declarations declaration . PUNTO_COMA

    PUNTO_COMA      shift and go to state 194


state 181

    (47) declarations -> declaration PUNTO_COMA .

    BRA_DER         reduce using rule 47 (declarations -> declaration PUNTO_COMA .)
    ID              reduce using rule 47 (declarations -> declaration PUNTO_COMA .)
    INT             reduce using rule 47 (declarations -> declaration PUNTO_COMA .)
    DOUBLE          reduce using rule 47 (declarations -> declaration PUNTO_COMA .)
    CHAR            reduce using rule 47 (declarations -> declaration PUNTO_COMA .)
    STRUCT          reduce using rule 47 (declarations -> declaration PUNTO_COMA .)


state 182

    (137) expression -> expression INTERROGACION expression DOS_PUNTOS . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 195
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 183

    (148) conversion -> PAR_IZQ INT PAR_DER expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ES_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for AND_BIT resolved as shift
  ! shift/reduce conflict for OR_BIT resolved as shift
  ! shift/reduce conflict for XOR_BIT resolved as shift
  ! shift/reduce conflict for SHIFT_IZQ resolved as shift
  ! shift/reduce conflict for SHIFT_DER resolved as shift
  ! shift/reduce conflict for INTERROGACION resolved as shift
  ! shift/reduce conflict for SUMA_SUMA resolved as shift
  ! shift/reduce conflict for RESTA_RESTA resolved as shift
    COR_DER         reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .)
    PUNTO_COMA      reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .)
    PAR_DER         reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .)
    COMA            reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .)
    DOS_PUNTOS      reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .)
    BRA_DER         reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106

  ! SUMA            [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! RESTA           [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! MULT            [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! DIV             [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! MOD             [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! AND             [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! OR              [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! ES_IGUAL        [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! NO_IGUAL        [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! MENOR           [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! MAYOR           [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! AND_BIT         [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! OR_BIT          [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! XOR_BIT         [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! SHIFT_DER       [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! INTERROGACION   [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! SUMA_SUMA       [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]
  ! RESTA_RESTA     [ reduce using rule 148 (conversion -> PAR_IZQ INT PAR_DER expression .) ]


state 184

    (149) conversion -> PAR_IZQ DOUBLE PAR_DER expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ES_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for AND_BIT resolved as shift
  ! shift/reduce conflict for OR_BIT resolved as shift
  ! shift/reduce conflict for XOR_BIT resolved as shift
  ! shift/reduce conflict for SHIFT_IZQ resolved as shift
  ! shift/reduce conflict for SHIFT_DER resolved as shift
  ! shift/reduce conflict for INTERROGACION resolved as shift
  ! shift/reduce conflict for SUMA_SUMA resolved as shift
  ! shift/reduce conflict for RESTA_RESTA resolved as shift
    COR_DER         reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .)
    PUNTO_COMA      reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .)
    PAR_DER         reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .)
    COMA            reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .)
    DOS_PUNTOS      reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .)
    BRA_DER         reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106

  ! SUMA            [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! RESTA           [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! MULT            [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! DIV             [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! MOD             [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! AND             [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! OR              [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! ES_IGUAL        [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! NO_IGUAL        [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! MENOR           [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! MAYOR           [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! AND_BIT         [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! OR_BIT          [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! XOR_BIT         [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! SHIFT_DER       [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! INTERROGACION   [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! SUMA_SUMA       [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]
  ! RESTA_RESTA     [ reduce using rule 149 (conversion -> PAR_IZQ DOUBLE PAR_DER expression .) ]


state 185

    (150) conversion -> PAR_IZQ CHAR PAR_DER expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ES_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for AND_BIT resolved as shift
  ! shift/reduce conflict for OR_BIT resolved as shift
  ! shift/reduce conflict for XOR_BIT resolved as shift
  ! shift/reduce conflict for SHIFT_IZQ resolved as shift
  ! shift/reduce conflict for SHIFT_DER resolved as shift
  ! shift/reduce conflict for INTERROGACION resolved as shift
  ! shift/reduce conflict for SUMA_SUMA resolved as shift
  ! shift/reduce conflict for RESTA_RESTA resolved as shift
    COR_DER         reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .)
    PUNTO_COMA      reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .)
    PAR_DER         reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .)
    COMA            reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .)
    DOS_PUNTOS      reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .)
    BRA_DER         reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106

  ! SUMA            [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! RESTA           [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! MULT            [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! DIV             [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! MOD             [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! AND             [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! OR              [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! ES_IGUAL        [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! NO_IGUAL        [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! MENOR           [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! MAYOR           [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! AND_BIT         [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! OR_BIT          [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! XOR_BIT         [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! SHIFT_DER       [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! INTERROGACION   [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! SUMA_SUMA       [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]
  ! RESTA_RESTA     [ reduce using rule 150 (conversion -> PAR_IZQ CHAR PAR_DER expression .) ]


state 186

    (111) param_val -> PAR_IZQ expression_list PAR_DER .

    COR_DER         reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    SUMA            reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    RESTA           reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    MULT            reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    DIV             reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    MOD             reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    AND             reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    OR              reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    ES_IGUAL        reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    NO_IGUAL        reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    MENOR_IGUAL     reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    MAYOR_IGUAL     reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    MENOR           reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    MAYOR           reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    AND_BIT         reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    OR_BIT          reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    XOR_BIT         reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    SHIFT_IZQ       reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    SHIFT_DER       reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    INTERROGACION   reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    SUMA_SUMA       reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    RESTA_RESTA     reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    PUNTO_COMA      reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    PAR_DER         reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    COMA            reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    DOS_PUNTOS      reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)
    BRA_DER         reduce using rule 111 (param_val -> PAR_IZQ expression_list PAR_DER .)


state 187

    (112) expression_list -> expression_list COMA . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 196
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 188

    (27) function_block -> BRA_IZQ new_scope . instructions BRA_DER
    (30) instructions -> . instructions instruction
    (31) instructions -> . instruction
    (32) instruction -> . declaration PUNTO_COMA
    (33) instruction -> . assignation PUNTO_COMA
    (34) instruction -> . for
    (35) instruction -> . while
    (36) instruction -> . do PUNTO_COMA
    (37) instruction -> . if
    (38) instruction -> . switch
    (39) instruction -> . label
    (40) instruction -> . goto PUNTO_COMA
    (41) instruction -> . break PUNTO_COMA
    (42) instruction -> . continue PUNTO_COMA
    (43) instruction -> . return PUNTO_COMA
    (44) instruction -> . expression PUNTO_COMA
    (45) instruction -> . PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (89) for -> . FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (85) while -> . WHILE label_add PAR_IZQ expression PAR_DER while_add function_block
    (88) do -> . DO label_add function_block WHILE PAR_IZQ expression PAR_DER
    (79) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (97) switch -> . SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER
    (103) label -> . ID DOS_PUNTOS
    (104) goto -> . GOTO ID
    (105) break -> . BREAK
    (106) continue -> . CONTINUE
    (107) return -> . RETURN expression
    (108) return -> . RETURN
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (60) identifier -> . ID
    (61) identifier -> . ID bracket
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression

    PUNTO_COMA      shift and go to state 200
    ID              shift and go to state 213
    FOR             shift and go to state 215
    WHILE           shift and go to state 216
    DO              shift and go to state 217
    IF              shift and go to state 218
    SWITCH          shift and go to state 219
    GOTO            shift and go to state 220
    BREAK           shift and go to state 221
    CONTINUE        shift and go to state 222
    RETURN          shift and go to state 223
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72

    instructions                   shift and go to state 197
    instruction                    shift and go to state 198
    declaration                    shift and go to state 199
    assignation                    shift and go to state 201
    for                            shift and go to state 202
    while                          shift and go to state 203
    do                             shift and go to state 204
    if                             shift and go to state 205
    switch                         shift and go to state 206
    label                          shift and go to state 207
    goto                           shift and go to state 208
    break                          shift and go to state 209
    continue                       shift and go to state 210
    return                         shift and go to state 211
    expression                     shift and go to state 212
    primitive_type                 shift and go to state 136
    identifier                     shift and go to state 214
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 189

    (29) function_block -> BRA_IZQ BRA_DER .

    $end            reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    INT             reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    VOID            reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    DOUBLE          reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    CHAR            reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    STRUCT          reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    ID              reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    WHILE           reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    ELSE            reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    BRA_DER         reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    PUNTO_COMA      reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    FOR             reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    DO              reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    IF              reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    SWITCH          reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    GOTO            reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    BREAK           reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    CONTINUE        reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    RETURN          reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    RESTA           reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    AND_BIT         reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    NOT             reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    NOT_BIT         reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    PAR_IZQ         reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    ENTERO          reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    DECIMAL         reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    CARACTER        reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    CADENA          reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    SUMA_SUMA       reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    RESTA_RESTA     reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    CASE            reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)
    DEFAULT         reduce using rule 29 (function_block -> BRA_IZQ BRA_DER .)


state 190

    (51) declaration_list -> declaration_list COMA ID brackets IGUAL BRA_IZQ . expression_list BRA_DER
    (112) expression_list -> . expression_list COMA expression
    (113) expression_list -> . expression
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression_list                shift and go to state 224
    expression                     shift and go to state 165
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 191

    (54) declaration_list -> declaration_list COMA ID COR_IZQ COR_DER IGUAL . CADENA

    CADENA          shift and go to state 225


state 192

    (18) parameter_list -> parameter_list COMA parameter .

    PAR_DER         reduce using rule 18 (parameter_list -> parameter_list COMA parameter .)
    COMA            reduce using rule 18 (parameter_list -> parameter_list COMA parameter .)


state 193

    (56) declaration_list -> ID brackets IGUAL BRA_IZQ expression_list BRA_DER .

    COMA            reduce using rule 56 (declaration_list -> ID brackets IGUAL BRA_IZQ expression_list BRA_DER .)
    PUNTO_COMA      reduce using rule 56 (declaration_list -> ID brackets IGUAL BRA_IZQ expression_list BRA_DER .)


state 194

    (46) declarations -> declarations declaration PUNTO_COMA .

    BRA_DER         reduce using rule 46 (declarations -> declarations declaration PUNTO_COMA .)
    ID              reduce using rule 46 (declarations -> declarations declaration PUNTO_COMA .)
    INT             reduce using rule 46 (declarations -> declarations declaration PUNTO_COMA .)
    DOUBLE          reduce using rule 46 (declarations -> declarations declaration PUNTO_COMA .)
    CHAR            reduce using rule 46 (declarations -> declarations declaration PUNTO_COMA .)
    STRUCT          reduce using rule 46 (declarations -> declarations declaration PUNTO_COMA .)


state 195

    (137) expression -> expression INTERROGACION expression DOS_PUNTOS expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ES_IGUAL resolved as shift
  ! shift/reduce conflict for NO_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for AND_BIT resolved as shift
  ! shift/reduce conflict for OR_BIT resolved as shift
  ! shift/reduce conflict for XOR_BIT resolved as shift
  ! shift/reduce conflict for SHIFT_IZQ resolved as shift
  ! shift/reduce conflict for SHIFT_DER resolved as shift
  ! shift/reduce conflict for INTERROGACION resolved as shift
  ! shift/reduce conflict for SUMA_SUMA resolved as shift
  ! shift/reduce conflict for RESTA_RESTA resolved as shift
    COR_DER         reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .)
    PUNTO_COMA      reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .)
    PAR_DER         reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .)
    COMA            reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .)
    DOS_PUNTOS      reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .)
    BRA_DER         reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106

  ! SUMA            [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! RESTA           [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! MULT            [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! DIV             [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! MOD             [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! AND             [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! OR              [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! ES_IGUAL        [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! NO_IGUAL        [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! MENOR           [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! MAYOR           [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! AND_BIT         [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! OR_BIT          [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! XOR_BIT         [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! SHIFT_IZQ       [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! SHIFT_DER       [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! INTERROGACION   [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! SUMA_SUMA       [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]
  ! RESTA_RESTA     [ reduce using rule 137 (expression -> expression INTERROGACION expression DOS_PUNTOS expression .) ]


state 196

    (112) expression_list -> expression_list COMA expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PAR_DER         reduce using rule 112 (expression_list -> expression_list COMA expression .)
    COMA            reduce using rule 112 (expression_list -> expression_list COMA expression .)
    BRA_DER         reduce using rule 112 (expression_list -> expression_list COMA expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 197

    (27) function_block -> BRA_IZQ new_scope instructions . BRA_DER
    (30) instructions -> instructions . instruction
    (32) instruction -> . declaration PUNTO_COMA
    (33) instruction -> . assignation PUNTO_COMA
    (34) instruction -> . for
    (35) instruction -> . while
    (36) instruction -> . do PUNTO_COMA
    (37) instruction -> . if
    (38) instruction -> . switch
    (39) instruction -> . label
    (40) instruction -> . goto PUNTO_COMA
    (41) instruction -> . break PUNTO_COMA
    (42) instruction -> . continue PUNTO_COMA
    (43) instruction -> . return PUNTO_COMA
    (44) instruction -> . expression PUNTO_COMA
    (45) instruction -> . PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (89) for -> . FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (85) while -> . WHILE label_add PAR_IZQ expression PAR_DER while_add function_block
    (88) do -> . DO label_add function_block WHILE PAR_IZQ expression PAR_DER
    (79) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (97) switch -> . SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER
    (103) label -> . ID DOS_PUNTOS
    (104) goto -> . GOTO ID
    (105) break -> . BREAK
    (106) continue -> . CONTINUE
    (107) return -> . RETURN expression
    (108) return -> . RETURN
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (60) identifier -> . ID
    (61) identifier -> . ID bracket
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression

    BRA_DER         shift and go to state 226
    PUNTO_COMA      shift and go to state 200
    ID              shift and go to state 213
    FOR             shift and go to state 215
    WHILE           shift and go to state 216
    DO              shift and go to state 217
    IF              shift and go to state 218
    SWITCH          shift and go to state 219
    GOTO            shift and go to state 220
    BREAK           shift and go to state 221
    CONTINUE        shift and go to state 222
    RETURN          shift and go to state 223
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72

    instruction                    shift and go to state 227
    declaration                    shift and go to state 199
    assignation                    shift and go to state 201
    for                            shift and go to state 202
    while                          shift and go to state 203
    do                             shift and go to state 204
    if                             shift and go to state 205
    switch                         shift and go to state 206
    label                          shift and go to state 207
    goto                           shift and go to state 208
    break                          shift and go to state 209
    continue                       shift and go to state 210
    return                         shift and go to state 211
    expression                     shift and go to state 212
    primitive_type                 shift and go to state 136
    identifier                     shift and go to state 214
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 198

    (31) instructions -> instruction .

    BRA_DER         reduce using rule 31 (instructions -> instruction .)
    PUNTO_COMA      reduce using rule 31 (instructions -> instruction .)
    ID              reduce using rule 31 (instructions -> instruction .)
    FOR             reduce using rule 31 (instructions -> instruction .)
    WHILE           reduce using rule 31 (instructions -> instruction .)
    DO              reduce using rule 31 (instructions -> instruction .)
    IF              reduce using rule 31 (instructions -> instruction .)
    SWITCH          reduce using rule 31 (instructions -> instruction .)
    GOTO            reduce using rule 31 (instructions -> instruction .)
    BREAK           reduce using rule 31 (instructions -> instruction .)
    CONTINUE        reduce using rule 31 (instructions -> instruction .)
    RETURN          reduce using rule 31 (instructions -> instruction .)
    RESTA           reduce using rule 31 (instructions -> instruction .)
    AND_BIT         reduce using rule 31 (instructions -> instruction .)
    NOT             reduce using rule 31 (instructions -> instruction .)
    NOT_BIT         reduce using rule 31 (instructions -> instruction .)
    PAR_IZQ         reduce using rule 31 (instructions -> instruction .)
    ENTERO          reduce using rule 31 (instructions -> instruction .)
    DECIMAL         reduce using rule 31 (instructions -> instruction .)
    CARACTER        reduce using rule 31 (instructions -> instruction .)
    CADENA          reduce using rule 31 (instructions -> instruction .)
    INT             reduce using rule 31 (instructions -> instruction .)
    DOUBLE          reduce using rule 31 (instructions -> instruction .)
    CHAR            reduce using rule 31 (instructions -> instruction .)
    STRUCT          reduce using rule 31 (instructions -> instruction .)
    SUMA_SUMA       reduce using rule 31 (instructions -> instruction .)
    RESTA_RESTA     reduce using rule 31 (instructions -> instruction .)
    CASE            reduce using rule 31 (instructions -> instruction .)
    DEFAULT         reduce using rule 31 (instructions -> instruction .)


state 199

    (32) instruction -> declaration . PUNTO_COMA

    PUNTO_COMA      shift and go to state 228


state 200

    (45) instruction -> PUNTO_COMA .

    BRA_DER         reduce using rule 45 (instruction -> PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 45 (instruction -> PUNTO_COMA .)
    ID              reduce using rule 45 (instruction -> PUNTO_COMA .)
    FOR             reduce using rule 45 (instruction -> PUNTO_COMA .)
    WHILE           reduce using rule 45 (instruction -> PUNTO_COMA .)
    DO              reduce using rule 45 (instruction -> PUNTO_COMA .)
    IF              reduce using rule 45 (instruction -> PUNTO_COMA .)
    SWITCH          reduce using rule 45 (instruction -> PUNTO_COMA .)
    GOTO            reduce using rule 45 (instruction -> PUNTO_COMA .)
    BREAK           reduce using rule 45 (instruction -> PUNTO_COMA .)
    CONTINUE        reduce using rule 45 (instruction -> PUNTO_COMA .)
    RETURN          reduce using rule 45 (instruction -> PUNTO_COMA .)
    RESTA           reduce using rule 45 (instruction -> PUNTO_COMA .)
    AND_BIT         reduce using rule 45 (instruction -> PUNTO_COMA .)
    NOT             reduce using rule 45 (instruction -> PUNTO_COMA .)
    NOT_BIT         reduce using rule 45 (instruction -> PUNTO_COMA .)
    PAR_IZQ         reduce using rule 45 (instruction -> PUNTO_COMA .)
    ENTERO          reduce using rule 45 (instruction -> PUNTO_COMA .)
    DECIMAL         reduce using rule 45 (instruction -> PUNTO_COMA .)
    CARACTER        reduce using rule 45 (instruction -> PUNTO_COMA .)
    CADENA          reduce using rule 45 (instruction -> PUNTO_COMA .)
    INT             reduce using rule 45 (instruction -> PUNTO_COMA .)
    DOUBLE          reduce using rule 45 (instruction -> PUNTO_COMA .)
    CHAR            reduce using rule 45 (instruction -> PUNTO_COMA .)
    STRUCT          reduce using rule 45 (instruction -> PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 45 (instruction -> PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 45 (instruction -> PUNTO_COMA .)
    CASE            reduce using rule 45 (instruction -> PUNTO_COMA .)
    DEFAULT         reduce using rule 45 (instruction -> PUNTO_COMA .)


state 201

    (33) instruction -> assignation . PUNTO_COMA

    PUNTO_COMA      shift and go to state 229


state 202

    (34) instruction -> for .

    BRA_DER         reduce using rule 34 (instruction -> for .)
    PUNTO_COMA      reduce using rule 34 (instruction -> for .)
    ID              reduce using rule 34 (instruction -> for .)
    FOR             reduce using rule 34 (instruction -> for .)
    WHILE           reduce using rule 34 (instruction -> for .)
    DO              reduce using rule 34 (instruction -> for .)
    IF              reduce using rule 34 (instruction -> for .)
    SWITCH          reduce using rule 34 (instruction -> for .)
    GOTO            reduce using rule 34 (instruction -> for .)
    BREAK           reduce using rule 34 (instruction -> for .)
    CONTINUE        reduce using rule 34 (instruction -> for .)
    RETURN          reduce using rule 34 (instruction -> for .)
    RESTA           reduce using rule 34 (instruction -> for .)
    AND_BIT         reduce using rule 34 (instruction -> for .)
    NOT             reduce using rule 34 (instruction -> for .)
    NOT_BIT         reduce using rule 34 (instruction -> for .)
    PAR_IZQ         reduce using rule 34 (instruction -> for .)
    ENTERO          reduce using rule 34 (instruction -> for .)
    DECIMAL         reduce using rule 34 (instruction -> for .)
    CARACTER        reduce using rule 34 (instruction -> for .)
    CADENA          reduce using rule 34 (instruction -> for .)
    INT             reduce using rule 34 (instruction -> for .)
    DOUBLE          reduce using rule 34 (instruction -> for .)
    CHAR            reduce using rule 34 (instruction -> for .)
    STRUCT          reduce using rule 34 (instruction -> for .)
    SUMA_SUMA       reduce using rule 34 (instruction -> for .)
    RESTA_RESTA     reduce using rule 34 (instruction -> for .)
    CASE            reduce using rule 34 (instruction -> for .)
    DEFAULT         reduce using rule 34 (instruction -> for .)


state 203

    (35) instruction -> while .

    BRA_DER         reduce using rule 35 (instruction -> while .)
    PUNTO_COMA      reduce using rule 35 (instruction -> while .)
    ID              reduce using rule 35 (instruction -> while .)
    FOR             reduce using rule 35 (instruction -> while .)
    WHILE           reduce using rule 35 (instruction -> while .)
    DO              reduce using rule 35 (instruction -> while .)
    IF              reduce using rule 35 (instruction -> while .)
    SWITCH          reduce using rule 35 (instruction -> while .)
    GOTO            reduce using rule 35 (instruction -> while .)
    BREAK           reduce using rule 35 (instruction -> while .)
    CONTINUE        reduce using rule 35 (instruction -> while .)
    RETURN          reduce using rule 35 (instruction -> while .)
    RESTA           reduce using rule 35 (instruction -> while .)
    AND_BIT         reduce using rule 35 (instruction -> while .)
    NOT             reduce using rule 35 (instruction -> while .)
    NOT_BIT         reduce using rule 35 (instruction -> while .)
    PAR_IZQ         reduce using rule 35 (instruction -> while .)
    ENTERO          reduce using rule 35 (instruction -> while .)
    DECIMAL         reduce using rule 35 (instruction -> while .)
    CARACTER        reduce using rule 35 (instruction -> while .)
    CADENA          reduce using rule 35 (instruction -> while .)
    INT             reduce using rule 35 (instruction -> while .)
    DOUBLE          reduce using rule 35 (instruction -> while .)
    CHAR            reduce using rule 35 (instruction -> while .)
    STRUCT          reduce using rule 35 (instruction -> while .)
    SUMA_SUMA       reduce using rule 35 (instruction -> while .)
    RESTA_RESTA     reduce using rule 35 (instruction -> while .)
    CASE            reduce using rule 35 (instruction -> while .)
    DEFAULT         reduce using rule 35 (instruction -> while .)


state 204

    (36) instruction -> do . PUNTO_COMA

    PUNTO_COMA      shift and go to state 230


state 205

    (37) instruction -> if .

    BRA_DER         reduce using rule 37 (instruction -> if .)
    PUNTO_COMA      reduce using rule 37 (instruction -> if .)
    ID              reduce using rule 37 (instruction -> if .)
    FOR             reduce using rule 37 (instruction -> if .)
    WHILE           reduce using rule 37 (instruction -> if .)
    DO              reduce using rule 37 (instruction -> if .)
    IF              reduce using rule 37 (instruction -> if .)
    SWITCH          reduce using rule 37 (instruction -> if .)
    GOTO            reduce using rule 37 (instruction -> if .)
    BREAK           reduce using rule 37 (instruction -> if .)
    CONTINUE        reduce using rule 37 (instruction -> if .)
    RETURN          reduce using rule 37 (instruction -> if .)
    RESTA           reduce using rule 37 (instruction -> if .)
    AND_BIT         reduce using rule 37 (instruction -> if .)
    NOT             reduce using rule 37 (instruction -> if .)
    NOT_BIT         reduce using rule 37 (instruction -> if .)
    PAR_IZQ         reduce using rule 37 (instruction -> if .)
    ENTERO          reduce using rule 37 (instruction -> if .)
    DECIMAL         reduce using rule 37 (instruction -> if .)
    CARACTER        reduce using rule 37 (instruction -> if .)
    CADENA          reduce using rule 37 (instruction -> if .)
    INT             reduce using rule 37 (instruction -> if .)
    DOUBLE          reduce using rule 37 (instruction -> if .)
    CHAR            reduce using rule 37 (instruction -> if .)
    STRUCT          reduce using rule 37 (instruction -> if .)
    SUMA_SUMA       reduce using rule 37 (instruction -> if .)
    RESTA_RESTA     reduce using rule 37 (instruction -> if .)
    CASE            reduce using rule 37 (instruction -> if .)
    DEFAULT         reduce using rule 37 (instruction -> if .)


state 206

    (38) instruction -> switch .

    BRA_DER         reduce using rule 38 (instruction -> switch .)
    PUNTO_COMA      reduce using rule 38 (instruction -> switch .)
    ID              reduce using rule 38 (instruction -> switch .)
    FOR             reduce using rule 38 (instruction -> switch .)
    WHILE           reduce using rule 38 (instruction -> switch .)
    DO              reduce using rule 38 (instruction -> switch .)
    IF              reduce using rule 38 (instruction -> switch .)
    SWITCH          reduce using rule 38 (instruction -> switch .)
    GOTO            reduce using rule 38 (instruction -> switch .)
    BREAK           reduce using rule 38 (instruction -> switch .)
    CONTINUE        reduce using rule 38 (instruction -> switch .)
    RETURN          reduce using rule 38 (instruction -> switch .)
    RESTA           reduce using rule 38 (instruction -> switch .)
    AND_BIT         reduce using rule 38 (instruction -> switch .)
    NOT             reduce using rule 38 (instruction -> switch .)
    NOT_BIT         reduce using rule 38 (instruction -> switch .)
    PAR_IZQ         reduce using rule 38 (instruction -> switch .)
    ENTERO          reduce using rule 38 (instruction -> switch .)
    DECIMAL         reduce using rule 38 (instruction -> switch .)
    CARACTER        reduce using rule 38 (instruction -> switch .)
    CADENA          reduce using rule 38 (instruction -> switch .)
    INT             reduce using rule 38 (instruction -> switch .)
    DOUBLE          reduce using rule 38 (instruction -> switch .)
    CHAR            reduce using rule 38 (instruction -> switch .)
    STRUCT          reduce using rule 38 (instruction -> switch .)
    SUMA_SUMA       reduce using rule 38 (instruction -> switch .)
    RESTA_RESTA     reduce using rule 38 (instruction -> switch .)
    CASE            reduce using rule 38 (instruction -> switch .)
    DEFAULT         reduce using rule 38 (instruction -> switch .)


state 207

    (39) instruction -> label .

    BRA_DER         reduce using rule 39 (instruction -> label .)
    PUNTO_COMA      reduce using rule 39 (instruction -> label .)
    ID              reduce using rule 39 (instruction -> label .)
    FOR             reduce using rule 39 (instruction -> label .)
    WHILE           reduce using rule 39 (instruction -> label .)
    DO              reduce using rule 39 (instruction -> label .)
    IF              reduce using rule 39 (instruction -> label .)
    SWITCH          reduce using rule 39 (instruction -> label .)
    GOTO            reduce using rule 39 (instruction -> label .)
    BREAK           reduce using rule 39 (instruction -> label .)
    CONTINUE        reduce using rule 39 (instruction -> label .)
    RETURN          reduce using rule 39 (instruction -> label .)
    RESTA           reduce using rule 39 (instruction -> label .)
    AND_BIT         reduce using rule 39 (instruction -> label .)
    NOT             reduce using rule 39 (instruction -> label .)
    NOT_BIT         reduce using rule 39 (instruction -> label .)
    PAR_IZQ         reduce using rule 39 (instruction -> label .)
    ENTERO          reduce using rule 39 (instruction -> label .)
    DECIMAL         reduce using rule 39 (instruction -> label .)
    CARACTER        reduce using rule 39 (instruction -> label .)
    CADENA          reduce using rule 39 (instruction -> label .)
    INT             reduce using rule 39 (instruction -> label .)
    DOUBLE          reduce using rule 39 (instruction -> label .)
    CHAR            reduce using rule 39 (instruction -> label .)
    STRUCT          reduce using rule 39 (instruction -> label .)
    SUMA_SUMA       reduce using rule 39 (instruction -> label .)
    RESTA_RESTA     reduce using rule 39 (instruction -> label .)
    CASE            reduce using rule 39 (instruction -> label .)
    DEFAULT         reduce using rule 39 (instruction -> label .)


state 208

    (40) instruction -> goto . PUNTO_COMA

    PUNTO_COMA      shift and go to state 231


state 209

    (41) instruction -> break . PUNTO_COMA

    PUNTO_COMA      shift and go to state 232


state 210

    (42) instruction -> continue . PUNTO_COMA

    PUNTO_COMA      shift and go to state 233


state 211

    (43) instruction -> return . PUNTO_COMA

    PUNTO_COMA      shift and go to state 234


state 212

    (44) instruction -> expression . PUNTO_COMA
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PUNTO_COMA      shift and go to state 235
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 213

    (49) declaration -> ID . declaration_list
    (103) label -> ID . DOS_PUNTOS
    (60) identifier -> ID .
    (61) identifier -> ID . bracket
    (109) function_call -> ID . param_val
    (50) declaration_list -> . declaration_list COMA ID IGUAL expression
    (51) declaration_list -> . declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (52) declaration_list -> . declaration_list COMA ID
    (53) declaration_list -> . declaration_list COMA ID brackets
    (54) declaration_list -> . declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA
    (55) declaration_list -> . ID IGUAL expression
    (56) declaration_list -> . ID brackets IGUAL BRA_IZQ expression_list BRA_DER
    (57) declaration_list -> . ID
    (58) declaration_list -> . ID brackets
    (59) declaration_list -> . ID COR_IZQ COR_DER IGUAL CADENA
    (64) bracket -> . bracket COR_IZQ expression COR_DER
    (65) bracket -> . COR_IZQ expression COR_DER
    (110) param_val -> . PAR_IZQ PAR_DER
    (111) param_val -> . PAR_IZQ expression_list PAR_DER

    DOS_PUNTOS      shift and go to state 236
    PUNTO           reduce using rule 60 (identifier -> ID .)
    IGUAL           reduce using rule 60 (identifier -> ID .)
    SUMA_IGUAL      reduce using rule 60 (identifier -> ID .)
    RESTA_IGUAL     reduce using rule 60 (identifier -> ID .)
    MULT_IGUAL      reduce using rule 60 (identifier -> ID .)
    DIV_IGUAL       reduce using rule 60 (identifier -> ID .)
    MOD_IGUAL       reduce using rule 60 (identifier -> ID .)
    SHIFT_IZQ_IGUAL reduce using rule 60 (identifier -> ID .)
    SHIFT_DER_IGUAL reduce using rule 60 (identifier -> ID .)
    AND_BIT_IGUAL   reduce using rule 60 (identifier -> ID .)
    XOR_BIT_IGUAL   reduce using rule 60 (identifier -> ID .)
    OR_BIT_IGUAL    reduce using rule 60 (identifier -> ID .)
    PUNTO_COMA      reduce using rule 60 (identifier -> ID .)
    SUMA            reduce using rule 60 (identifier -> ID .)
    RESTA           reduce using rule 60 (identifier -> ID .)
    MULT            reduce using rule 60 (identifier -> ID .)
    DIV             reduce using rule 60 (identifier -> ID .)
    MOD             reduce using rule 60 (identifier -> ID .)
    AND             reduce using rule 60 (identifier -> ID .)
    OR              reduce using rule 60 (identifier -> ID .)
    ES_IGUAL        reduce using rule 60 (identifier -> ID .)
    NO_IGUAL        reduce using rule 60 (identifier -> ID .)
    MENOR_IGUAL     reduce using rule 60 (identifier -> ID .)
    MAYOR_IGUAL     reduce using rule 60 (identifier -> ID .)
    MENOR           reduce using rule 60 (identifier -> ID .)
    MAYOR           reduce using rule 60 (identifier -> ID .)
    AND_BIT         reduce using rule 60 (identifier -> ID .)
    OR_BIT          reduce using rule 60 (identifier -> ID .)
    XOR_BIT         reduce using rule 60 (identifier -> ID .)
    SHIFT_IZQ       reduce using rule 60 (identifier -> ID .)
    SHIFT_DER       reduce using rule 60 (identifier -> ID .)
    INTERROGACION   reduce using rule 60 (identifier -> ID .)
    SUMA_SUMA       reduce using rule 60 (identifier -> ID .)
    RESTA_RESTA     reduce using rule 60 (identifier -> ID .)
    ID              shift and go to state 28
    COR_IZQ         shift and go to state 31
    PAR_IZQ         shift and go to state 117

    declaration_list               shift and go to state 29
    bracket                        shift and go to state 30
    param_val                      shift and go to state 116

state 214

    (66) assignation -> identifier . equals expression
    (67) assignation -> identifier . PUNTO ID equals expression
    (146) expression -> identifier .
    (147) expression -> identifier . PUNTO ID
    (68) equals -> . IGUAL
    (69) equals -> . SUMA_IGUAL
    (70) equals -> . RESTA_IGUAL
    (71) equals -> . MULT_IGUAL
    (72) equals -> . DIV_IGUAL
    (73) equals -> . MOD_IGUAL
    (74) equals -> . SHIFT_IZQ_IGUAL
    (75) equals -> . SHIFT_DER_IGUAL
    (76) equals -> . AND_BIT_IGUAL
    (77) equals -> . XOR_BIT_IGUAL
    (78) equals -> . OR_BIT_IGUAL

    PUNTO           shift and go to state 237
    PUNTO_COMA      reduce using rule 146 (expression -> identifier .)
    SUMA            reduce using rule 146 (expression -> identifier .)
    RESTA           reduce using rule 146 (expression -> identifier .)
    MULT            reduce using rule 146 (expression -> identifier .)
    DIV             reduce using rule 146 (expression -> identifier .)
    MOD             reduce using rule 146 (expression -> identifier .)
    AND             reduce using rule 146 (expression -> identifier .)
    OR              reduce using rule 146 (expression -> identifier .)
    ES_IGUAL        reduce using rule 146 (expression -> identifier .)
    NO_IGUAL        reduce using rule 146 (expression -> identifier .)
    MENOR_IGUAL     reduce using rule 146 (expression -> identifier .)
    MAYOR_IGUAL     reduce using rule 146 (expression -> identifier .)
    MENOR           reduce using rule 146 (expression -> identifier .)
    MAYOR           reduce using rule 146 (expression -> identifier .)
    AND_BIT         reduce using rule 146 (expression -> identifier .)
    OR_BIT          reduce using rule 146 (expression -> identifier .)
    XOR_BIT         reduce using rule 146 (expression -> identifier .)
    SHIFT_IZQ       reduce using rule 146 (expression -> identifier .)
    SHIFT_DER       reduce using rule 146 (expression -> identifier .)
    INTERROGACION   reduce using rule 146 (expression -> identifier .)
    SUMA_SUMA       reduce using rule 146 (expression -> identifier .)
    RESTA_RESTA     reduce using rule 146 (expression -> identifier .)
    IGUAL           shift and go to state 34
    SUMA_IGUAL      shift and go to state 35
    RESTA_IGUAL     shift and go to state 36
    MULT_IGUAL      shift and go to state 37
    DIV_IGUAL       shift and go to state 38
    MOD_IGUAL       shift and go to state 39
    SHIFT_IZQ_IGUAL shift and go to state 40
    SHIFT_DER_IGUAL shift and go to state 41
    AND_BIT_IGUAL   shift and go to state 42
    XOR_BIT_IGUAL   shift and go to state 43
    OR_BIT_IGUAL    shift and go to state 44

    equals                         shift and go to state 32

state 215

    (89) for -> FOR . PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block

    PAR_IZQ         shift and go to state 238


state 216

    (85) while -> WHILE . label_add PAR_IZQ expression PAR_DER while_add function_block
    (87) label_add -> .

    PAR_IZQ         reduce using rule 87 (label_add -> .)

    label_add                      shift and go to state 239

state 217

    (88) do -> DO . label_add function_block WHILE PAR_IZQ expression PAR_DER
    (87) label_add -> .

    BRA_IZQ         reduce using rule 87 (label_add -> .)

    label_add                      shift and go to state 240

state 218

    (79) if -> IF . PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> IF . PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> IF . PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block

    PAR_IZQ         shift and go to state 241


state 219

    (97) switch -> SWITCH . PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER

    PAR_IZQ         shift and go to state 242


state 220

    (104) goto -> GOTO . ID

    ID              shift and go to state 243


state 221

    (105) break -> BREAK .

    PUNTO_COMA      reduce using rule 105 (break -> BREAK .)


state 222

    (106) continue -> CONTINUE .

    PUNTO_COMA      reduce using rule 106 (continue -> CONTINUE .)


state 223

    (107) return -> RETURN . expression
    (108) return -> RETURN .
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    PUNTO_COMA      reduce using rule 108 (return -> RETURN .)
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 244
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 224

    (51) declaration_list -> declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list . BRA_DER
    (112) expression_list -> expression_list . COMA expression

    BRA_DER         shift and go to state 245
    COMA            shift and go to state 187


state 225

    (54) declaration_list -> declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA .

    COMA            reduce using rule 54 (declaration_list -> declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA .)
    PUNTO_COMA      reduce using rule 54 (declaration_list -> declaration_list COMA ID COR_IZQ COR_DER IGUAL CADENA .)


state 226

    (27) function_block -> BRA_IZQ new_scope instructions BRA_DER .

    $end            reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    INT             reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    VOID            reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    DOUBLE          reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    CHAR            reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    STRUCT          reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    ID              reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    WHILE           reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    ELSE            reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    BRA_DER         reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    PUNTO_COMA      reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    FOR             reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    DO              reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    IF              reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    SWITCH          reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    GOTO            reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    BREAK           reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    CONTINUE        reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    RETURN          reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    RESTA           reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    AND_BIT         reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    NOT             reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    NOT_BIT         reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    PAR_IZQ         reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    ENTERO          reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    DECIMAL         reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    CARACTER        reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    CADENA          reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    SUMA_SUMA       reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    RESTA_RESTA     reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    CASE            reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)
    DEFAULT         reduce using rule 27 (function_block -> BRA_IZQ new_scope instructions BRA_DER .)


state 227

    (30) instructions -> instructions instruction .

    BRA_DER         reduce using rule 30 (instructions -> instructions instruction .)
    PUNTO_COMA      reduce using rule 30 (instructions -> instructions instruction .)
    ID              reduce using rule 30 (instructions -> instructions instruction .)
    FOR             reduce using rule 30 (instructions -> instructions instruction .)
    WHILE           reduce using rule 30 (instructions -> instructions instruction .)
    DO              reduce using rule 30 (instructions -> instructions instruction .)
    IF              reduce using rule 30 (instructions -> instructions instruction .)
    SWITCH          reduce using rule 30 (instructions -> instructions instruction .)
    GOTO            reduce using rule 30 (instructions -> instructions instruction .)
    BREAK           reduce using rule 30 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 30 (instructions -> instructions instruction .)
    RETURN          reduce using rule 30 (instructions -> instructions instruction .)
    RESTA           reduce using rule 30 (instructions -> instructions instruction .)
    AND_BIT         reduce using rule 30 (instructions -> instructions instruction .)
    NOT             reduce using rule 30 (instructions -> instructions instruction .)
    NOT_BIT         reduce using rule 30 (instructions -> instructions instruction .)
    PAR_IZQ         reduce using rule 30 (instructions -> instructions instruction .)
    ENTERO          reduce using rule 30 (instructions -> instructions instruction .)
    DECIMAL         reduce using rule 30 (instructions -> instructions instruction .)
    CARACTER        reduce using rule 30 (instructions -> instructions instruction .)
    CADENA          reduce using rule 30 (instructions -> instructions instruction .)
    INT             reduce using rule 30 (instructions -> instructions instruction .)
    DOUBLE          reduce using rule 30 (instructions -> instructions instruction .)
    CHAR            reduce using rule 30 (instructions -> instructions instruction .)
    STRUCT          reduce using rule 30 (instructions -> instructions instruction .)
    SUMA_SUMA       reduce using rule 30 (instructions -> instructions instruction .)
    RESTA_RESTA     reduce using rule 30 (instructions -> instructions instruction .)
    CASE            reduce using rule 30 (instructions -> instructions instruction .)
    DEFAULT         reduce using rule 30 (instructions -> instructions instruction .)


state 228

    (32) instruction -> declaration PUNTO_COMA .

    BRA_DER         reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    ID              reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    FOR             reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    WHILE           reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    DO              reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    IF              reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    SWITCH          reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    GOTO            reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    BREAK           reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    CONTINUE        reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    RETURN          reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    RESTA           reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    AND_BIT         reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    NOT             reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    NOT_BIT         reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    PAR_IZQ         reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    ENTERO          reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    DECIMAL         reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    CARACTER        reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    CADENA          reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    INT             reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    DOUBLE          reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    CHAR            reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    STRUCT          reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    CASE            reduce using rule 32 (instruction -> declaration PUNTO_COMA .)
    DEFAULT         reduce using rule 32 (instruction -> declaration PUNTO_COMA .)


state 229

    (33) instruction -> assignation PUNTO_COMA .

    BRA_DER         reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    ID              reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    FOR             reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    WHILE           reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    DO              reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    IF              reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    SWITCH          reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    GOTO            reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    BREAK           reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    CONTINUE        reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    RETURN          reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    RESTA           reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    AND_BIT         reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    NOT             reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    NOT_BIT         reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    PAR_IZQ         reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    ENTERO          reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    DECIMAL         reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    CARACTER        reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    CADENA          reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    INT             reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    DOUBLE          reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    CHAR            reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    STRUCT          reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    CASE            reduce using rule 33 (instruction -> assignation PUNTO_COMA .)
    DEFAULT         reduce using rule 33 (instruction -> assignation PUNTO_COMA .)


state 230

    (36) instruction -> do PUNTO_COMA .

    BRA_DER         reduce using rule 36 (instruction -> do PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 36 (instruction -> do PUNTO_COMA .)
    ID              reduce using rule 36 (instruction -> do PUNTO_COMA .)
    FOR             reduce using rule 36 (instruction -> do PUNTO_COMA .)
    WHILE           reduce using rule 36 (instruction -> do PUNTO_COMA .)
    DO              reduce using rule 36 (instruction -> do PUNTO_COMA .)
    IF              reduce using rule 36 (instruction -> do PUNTO_COMA .)
    SWITCH          reduce using rule 36 (instruction -> do PUNTO_COMA .)
    GOTO            reduce using rule 36 (instruction -> do PUNTO_COMA .)
    BREAK           reduce using rule 36 (instruction -> do PUNTO_COMA .)
    CONTINUE        reduce using rule 36 (instruction -> do PUNTO_COMA .)
    RETURN          reduce using rule 36 (instruction -> do PUNTO_COMA .)
    RESTA           reduce using rule 36 (instruction -> do PUNTO_COMA .)
    AND_BIT         reduce using rule 36 (instruction -> do PUNTO_COMA .)
    NOT             reduce using rule 36 (instruction -> do PUNTO_COMA .)
    NOT_BIT         reduce using rule 36 (instruction -> do PUNTO_COMA .)
    PAR_IZQ         reduce using rule 36 (instruction -> do PUNTO_COMA .)
    ENTERO          reduce using rule 36 (instruction -> do PUNTO_COMA .)
    DECIMAL         reduce using rule 36 (instruction -> do PUNTO_COMA .)
    CARACTER        reduce using rule 36 (instruction -> do PUNTO_COMA .)
    CADENA          reduce using rule 36 (instruction -> do PUNTO_COMA .)
    INT             reduce using rule 36 (instruction -> do PUNTO_COMA .)
    DOUBLE          reduce using rule 36 (instruction -> do PUNTO_COMA .)
    CHAR            reduce using rule 36 (instruction -> do PUNTO_COMA .)
    STRUCT          reduce using rule 36 (instruction -> do PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 36 (instruction -> do PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 36 (instruction -> do PUNTO_COMA .)
    CASE            reduce using rule 36 (instruction -> do PUNTO_COMA .)
    DEFAULT         reduce using rule 36 (instruction -> do PUNTO_COMA .)


state 231

    (40) instruction -> goto PUNTO_COMA .

    BRA_DER         reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    ID              reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    FOR             reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    WHILE           reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    DO              reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    IF              reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    SWITCH          reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    GOTO            reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    BREAK           reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    CONTINUE        reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    RETURN          reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    RESTA           reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    AND_BIT         reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    NOT             reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    NOT_BIT         reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    PAR_IZQ         reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    ENTERO          reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    DECIMAL         reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    CARACTER        reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    CADENA          reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    INT             reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    DOUBLE          reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    CHAR            reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    STRUCT          reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    CASE            reduce using rule 40 (instruction -> goto PUNTO_COMA .)
    DEFAULT         reduce using rule 40 (instruction -> goto PUNTO_COMA .)


state 232

    (41) instruction -> break PUNTO_COMA .

    BRA_DER         reduce using rule 41 (instruction -> break PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 41 (instruction -> break PUNTO_COMA .)
    ID              reduce using rule 41 (instruction -> break PUNTO_COMA .)
    FOR             reduce using rule 41 (instruction -> break PUNTO_COMA .)
    WHILE           reduce using rule 41 (instruction -> break PUNTO_COMA .)
    DO              reduce using rule 41 (instruction -> break PUNTO_COMA .)
    IF              reduce using rule 41 (instruction -> break PUNTO_COMA .)
    SWITCH          reduce using rule 41 (instruction -> break PUNTO_COMA .)
    GOTO            reduce using rule 41 (instruction -> break PUNTO_COMA .)
    BREAK           reduce using rule 41 (instruction -> break PUNTO_COMA .)
    CONTINUE        reduce using rule 41 (instruction -> break PUNTO_COMA .)
    RETURN          reduce using rule 41 (instruction -> break PUNTO_COMA .)
    RESTA           reduce using rule 41 (instruction -> break PUNTO_COMA .)
    AND_BIT         reduce using rule 41 (instruction -> break PUNTO_COMA .)
    NOT             reduce using rule 41 (instruction -> break PUNTO_COMA .)
    NOT_BIT         reduce using rule 41 (instruction -> break PUNTO_COMA .)
    PAR_IZQ         reduce using rule 41 (instruction -> break PUNTO_COMA .)
    ENTERO          reduce using rule 41 (instruction -> break PUNTO_COMA .)
    DECIMAL         reduce using rule 41 (instruction -> break PUNTO_COMA .)
    CARACTER        reduce using rule 41 (instruction -> break PUNTO_COMA .)
    CADENA          reduce using rule 41 (instruction -> break PUNTO_COMA .)
    INT             reduce using rule 41 (instruction -> break PUNTO_COMA .)
    DOUBLE          reduce using rule 41 (instruction -> break PUNTO_COMA .)
    CHAR            reduce using rule 41 (instruction -> break PUNTO_COMA .)
    STRUCT          reduce using rule 41 (instruction -> break PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 41 (instruction -> break PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 41 (instruction -> break PUNTO_COMA .)
    CASE            reduce using rule 41 (instruction -> break PUNTO_COMA .)
    DEFAULT         reduce using rule 41 (instruction -> break PUNTO_COMA .)


state 233

    (42) instruction -> continue PUNTO_COMA .

    BRA_DER         reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    ID              reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    FOR             reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    WHILE           reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    DO              reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    IF              reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    SWITCH          reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    GOTO            reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    BREAK           reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    CONTINUE        reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    RETURN          reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    RESTA           reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    AND_BIT         reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    NOT             reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    NOT_BIT         reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    PAR_IZQ         reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    ENTERO          reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    DECIMAL         reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    CARACTER        reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    CADENA          reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    INT             reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    DOUBLE          reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    CHAR            reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    STRUCT          reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    CASE            reduce using rule 42 (instruction -> continue PUNTO_COMA .)
    DEFAULT         reduce using rule 42 (instruction -> continue PUNTO_COMA .)


state 234

    (43) instruction -> return PUNTO_COMA .

    BRA_DER         reduce using rule 43 (instruction -> return PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 43 (instruction -> return PUNTO_COMA .)
    ID              reduce using rule 43 (instruction -> return PUNTO_COMA .)
    FOR             reduce using rule 43 (instruction -> return PUNTO_COMA .)
    WHILE           reduce using rule 43 (instruction -> return PUNTO_COMA .)
    DO              reduce using rule 43 (instruction -> return PUNTO_COMA .)
    IF              reduce using rule 43 (instruction -> return PUNTO_COMA .)
    SWITCH          reduce using rule 43 (instruction -> return PUNTO_COMA .)
    GOTO            reduce using rule 43 (instruction -> return PUNTO_COMA .)
    BREAK           reduce using rule 43 (instruction -> return PUNTO_COMA .)
    CONTINUE        reduce using rule 43 (instruction -> return PUNTO_COMA .)
    RETURN          reduce using rule 43 (instruction -> return PUNTO_COMA .)
    RESTA           reduce using rule 43 (instruction -> return PUNTO_COMA .)
    AND_BIT         reduce using rule 43 (instruction -> return PUNTO_COMA .)
    NOT             reduce using rule 43 (instruction -> return PUNTO_COMA .)
    NOT_BIT         reduce using rule 43 (instruction -> return PUNTO_COMA .)
    PAR_IZQ         reduce using rule 43 (instruction -> return PUNTO_COMA .)
    ENTERO          reduce using rule 43 (instruction -> return PUNTO_COMA .)
    DECIMAL         reduce using rule 43 (instruction -> return PUNTO_COMA .)
    CARACTER        reduce using rule 43 (instruction -> return PUNTO_COMA .)
    CADENA          reduce using rule 43 (instruction -> return PUNTO_COMA .)
    INT             reduce using rule 43 (instruction -> return PUNTO_COMA .)
    DOUBLE          reduce using rule 43 (instruction -> return PUNTO_COMA .)
    CHAR            reduce using rule 43 (instruction -> return PUNTO_COMA .)
    STRUCT          reduce using rule 43 (instruction -> return PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 43 (instruction -> return PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 43 (instruction -> return PUNTO_COMA .)
    CASE            reduce using rule 43 (instruction -> return PUNTO_COMA .)
    DEFAULT         reduce using rule 43 (instruction -> return PUNTO_COMA .)


state 235

    (44) instruction -> expression PUNTO_COMA .

    BRA_DER         reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    ID              reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    FOR             reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    WHILE           reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    DO              reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    IF              reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    SWITCH          reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    GOTO            reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    BREAK           reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    CONTINUE        reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    RETURN          reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    RESTA           reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    AND_BIT         reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    NOT             reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    NOT_BIT         reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    PAR_IZQ         reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    ENTERO          reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    DECIMAL         reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    CARACTER        reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    CADENA          reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    INT             reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    DOUBLE          reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    CHAR            reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    STRUCT          reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    SUMA_SUMA       reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    RESTA_RESTA     reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    CASE            reduce using rule 44 (instruction -> expression PUNTO_COMA .)
    DEFAULT         reduce using rule 44 (instruction -> expression PUNTO_COMA .)


state 236

    (103) label -> ID DOS_PUNTOS .

    BRA_DER         reduce using rule 103 (label -> ID DOS_PUNTOS .)
    PUNTO_COMA      reduce using rule 103 (label -> ID DOS_PUNTOS .)
    ID              reduce using rule 103 (label -> ID DOS_PUNTOS .)
    FOR             reduce using rule 103 (label -> ID DOS_PUNTOS .)
    WHILE           reduce using rule 103 (label -> ID DOS_PUNTOS .)
    DO              reduce using rule 103 (label -> ID DOS_PUNTOS .)
    IF              reduce using rule 103 (label -> ID DOS_PUNTOS .)
    SWITCH          reduce using rule 103 (label -> ID DOS_PUNTOS .)
    GOTO            reduce using rule 103 (label -> ID DOS_PUNTOS .)
    BREAK           reduce using rule 103 (label -> ID DOS_PUNTOS .)
    CONTINUE        reduce using rule 103 (label -> ID DOS_PUNTOS .)
    RETURN          reduce using rule 103 (label -> ID DOS_PUNTOS .)
    RESTA           reduce using rule 103 (label -> ID DOS_PUNTOS .)
    AND_BIT         reduce using rule 103 (label -> ID DOS_PUNTOS .)
    NOT             reduce using rule 103 (label -> ID DOS_PUNTOS .)
    NOT_BIT         reduce using rule 103 (label -> ID DOS_PUNTOS .)
    PAR_IZQ         reduce using rule 103 (label -> ID DOS_PUNTOS .)
    ENTERO          reduce using rule 103 (label -> ID DOS_PUNTOS .)
    DECIMAL         reduce using rule 103 (label -> ID DOS_PUNTOS .)
    CARACTER        reduce using rule 103 (label -> ID DOS_PUNTOS .)
    CADENA          reduce using rule 103 (label -> ID DOS_PUNTOS .)
    INT             reduce using rule 103 (label -> ID DOS_PUNTOS .)
    DOUBLE          reduce using rule 103 (label -> ID DOS_PUNTOS .)
    CHAR            reduce using rule 103 (label -> ID DOS_PUNTOS .)
    STRUCT          reduce using rule 103 (label -> ID DOS_PUNTOS .)
    SUMA_SUMA       reduce using rule 103 (label -> ID DOS_PUNTOS .)
    RESTA_RESTA     reduce using rule 103 (label -> ID DOS_PUNTOS .)
    CASE            reduce using rule 103 (label -> ID DOS_PUNTOS .)
    DEFAULT         reduce using rule 103 (label -> ID DOS_PUNTOS .)


state 237

    (67) assignation -> identifier PUNTO . ID equals expression
    (147) expression -> identifier PUNTO . ID

    ID              shift and go to state 246


state 238

    (89) for -> FOR PAR_IZQ . for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (92) for_declaration -> . declaration
    (93) for_declaration -> . assignation
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    ID              shift and go to state 15
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131

    for_declaration                shift and go to state 247
    declaration                    shift and go to state 248
    assignation                    shift and go to state 249
    primitive_type                 shift and go to state 136
    identifier                     shift and go to state 16

state 239

    (85) while -> WHILE label_add . PAR_IZQ expression PAR_DER while_add function_block

    PAR_IZQ         shift and go to state 250


state 240

    (88) do -> DO label_add . function_block WHILE PAR_IZQ expression PAR_DER
    (27) function_block -> . BRA_IZQ new_scope instructions BRA_DER
    (29) function_block -> . BRA_IZQ BRA_DER

    BRA_IZQ         shift and go to state 168

    function_block                 shift and go to state 251

state 241

    (79) if -> IF PAR_IZQ . expression PAR_DER if_marcker function_block add_if_label
    (82) if -> IF PAR_IZQ . expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> IF PAR_IZQ . expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 252
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 242

    (97) switch -> SWITCH PAR_IZQ . expression PAR_DER BRA_IZQ cases BRA_DER
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 253
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 243

    (104) goto -> GOTO ID .

    PUNTO_COMA      reduce using rule 104 (goto -> GOTO ID .)


state 244

    (107) return -> RETURN expression .
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PUNTO_COMA      reduce using rule 107 (return -> RETURN expression .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 245

    (51) declaration_list -> declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER .

    COMA            reduce using rule 51 (declaration_list -> declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER .)
    PUNTO_COMA      reduce using rule 51 (declaration_list -> declaration_list COMA ID brackets IGUAL BRA_IZQ expression_list BRA_DER .)


state 246

    (67) assignation -> identifier PUNTO ID . equals expression
    (147) expression -> identifier PUNTO ID .
    (68) equals -> . IGUAL
    (69) equals -> . SUMA_IGUAL
    (70) equals -> . RESTA_IGUAL
    (71) equals -> . MULT_IGUAL
    (72) equals -> . DIV_IGUAL
    (73) equals -> . MOD_IGUAL
    (74) equals -> . SHIFT_IZQ_IGUAL
    (75) equals -> . SHIFT_DER_IGUAL
    (76) equals -> . AND_BIT_IGUAL
    (77) equals -> . XOR_BIT_IGUAL
    (78) equals -> . OR_BIT_IGUAL

    PUNTO_COMA      reduce using rule 147 (expression -> identifier PUNTO ID .)
    SUMA            reduce using rule 147 (expression -> identifier PUNTO ID .)
    RESTA           reduce using rule 147 (expression -> identifier PUNTO ID .)
    MULT            reduce using rule 147 (expression -> identifier PUNTO ID .)
    DIV             reduce using rule 147 (expression -> identifier PUNTO ID .)
    MOD             reduce using rule 147 (expression -> identifier PUNTO ID .)
    AND             reduce using rule 147 (expression -> identifier PUNTO ID .)
    OR              reduce using rule 147 (expression -> identifier PUNTO ID .)
    ES_IGUAL        reduce using rule 147 (expression -> identifier PUNTO ID .)
    NO_IGUAL        reduce using rule 147 (expression -> identifier PUNTO ID .)
    MENOR_IGUAL     reduce using rule 147 (expression -> identifier PUNTO ID .)
    MAYOR_IGUAL     reduce using rule 147 (expression -> identifier PUNTO ID .)
    MENOR           reduce using rule 147 (expression -> identifier PUNTO ID .)
    MAYOR           reduce using rule 147 (expression -> identifier PUNTO ID .)
    AND_BIT         reduce using rule 147 (expression -> identifier PUNTO ID .)
    OR_BIT          reduce using rule 147 (expression -> identifier PUNTO ID .)
    XOR_BIT         reduce using rule 147 (expression -> identifier PUNTO ID .)
    SHIFT_IZQ       reduce using rule 147 (expression -> identifier PUNTO ID .)
    SHIFT_DER       reduce using rule 147 (expression -> identifier PUNTO ID .)
    INTERROGACION   reduce using rule 147 (expression -> identifier PUNTO ID .)
    SUMA_SUMA       reduce using rule 147 (expression -> identifier PUNTO ID .)
    RESTA_RESTA     reduce using rule 147 (expression -> identifier PUNTO ID .)
    IGUAL           shift and go to state 34
    SUMA_IGUAL      shift and go to state 35
    RESTA_IGUAL     shift and go to state 36
    MULT_IGUAL      shift and go to state 37
    DIV_IGUAL       shift and go to state 38
    MOD_IGUAL       shift and go to state 39
    SHIFT_IZQ_IGUAL shift and go to state 40
    SHIFT_DER_IGUAL shift and go to state 41
    AND_BIT_IGUAL   shift and go to state 42
    XOR_BIT_IGUAL   shift and go to state 43
    OR_BIT_IGUAL    shift and go to state 44

    equals                         shift and go to state 120

state 247

    (89) for -> FOR PAR_IZQ for_declaration . PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block

    PUNTO_COMA      shift and go to state 254


state 248

    (92) for_declaration -> declaration .

    PUNTO_COMA      reduce using rule 92 (for_declaration -> declaration .)


state 249

    (93) for_declaration -> assignation .

    PUNTO_COMA      reduce using rule 93 (for_declaration -> assignation .)


state 250

    (85) while -> WHILE label_add PAR_IZQ . expression PAR_DER while_add function_block
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 255
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 251

    (88) do -> DO label_add function_block . WHILE PAR_IZQ expression PAR_DER

    WHILE           shift and go to state 256


state 252

    (79) if -> IF PAR_IZQ expression . PAR_DER if_marcker function_block add_if_label
    (82) if -> IF PAR_IZQ expression . PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> IF PAR_IZQ expression . PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PAR_DER         shift and go to state 257
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 253

    (97) switch -> SWITCH PAR_IZQ expression . PAR_DER BRA_IZQ cases BRA_DER
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PAR_DER         shift and go to state 258
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 254

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA . label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (87) label_add -> .

    RESTA           reduce using rule 87 (label_add -> .)
    AND_BIT         reduce using rule 87 (label_add -> .)
    NOT             reduce using rule 87 (label_add -> .)
    NOT_BIT         reduce using rule 87 (label_add -> .)
    PAR_IZQ         reduce using rule 87 (label_add -> .)
    ENTERO          reduce using rule 87 (label_add -> .)
    DECIMAL         reduce using rule 87 (label_add -> .)
    CARACTER        reduce using rule 87 (label_add -> .)
    CADENA          reduce using rule 87 (label_add -> .)
    SUMA_SUMA       reduce using rule 87 (label_add -> .)
    RESTA_RESTA     reduce using rule 87 (label_add -> .)
    ID              reduce using rule 87 (label_add -> .)

    label_add                      shift and go to state 259

state 255

    (85) while -> WHILE label_add PAR_IZQ expression . PAR_DER while_add function_block
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PAR_DER         shift and go to state 260
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 256

    (88) do -> DO label_add function_block WHILE . PAR_IZQ expression PAR_DER

    PAR_IZQ         shift and go to state 261


state 257

    (79) if -> IF PAR_IZQ expression PAR_DER . if_marcker function_block add_if_label
    (82) if -> IF PAR_IZQ expression PAR_DER . if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> IF PAR_IZQ expression PAR_DER . if_marcker function_block add_if_label ELSE else_marcker function_block
    (81) if_marcker -> .

    BRA_IZQ         reduce using rule 81 (if_marcker -> .)

    if_marcker                     shift and go to state 262

state 258

    (97) switch -> SWITCH PAR_IZQ expression PAR_DER . BRA_IZQ cases BRA_DER

    BRA_IZQ         shift and go to state 263


state 259

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add . expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 264
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 260

    (85) while -> WHILE label_add PAR_IZQ expression PAR_DER . while_add function_block
    (86) while_add -> .

    BRA_IZQ         reduce using rule 86 (while_add -> .)

    while_add                      shift and go to state 265

state 261

    (88) do -> DO label_add function_block WHILE PAR_IZQ . expression PAR_DER
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 266
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 262

    (79) if -> IF PAR_IZQ expression PAR_DER if_marcker . function_block add_if_label
    (82) if -> IF PAR_IZQ expression PAR_DER if_marcker . function_block add_if_label ELSE else_marcker if
    (84) if -> IF PAR_IZQ expression PAR_DER if_marcker . function_block add_if_label ELSE else_marcker function_block
    (27) function_block -> . BRA_IZQ new_scope instructions BRA_DER
    (29) function_block -> . BRA_IZQ BRA_DER

    BRA_IZQ         shift and go to state 168

    function_block                 shift and go to state 267

state 263

    (97) switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ . cases BRA_DER
    (98) cases -> . cases case
    (99) cases -> . cases default
    (100) cases -> . case
    (101) case -> . CASE expression DOS_PUNTOS instructions

    CASE            shift and go to state 270

    cases                          shift and go to state 268
    case                           shift and go to state 269

state 264

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression . PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PUNTO_COMA      shift and go to state 271
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 265

    (85) while -> WHILE label_add PAR_IZQ expression PAR_DER while_add . function_block
    (27) function_block -> . BRA_IZQ new_scope instructions BRA_DER
    (29) function_block -> . BRA_IZQ BRA_DER

    BRA_IZQ         shift and go to state 168

    function_block                 shift and go to state 272

state 266

    (88) do -> DO label_add function_block WHILE PAR_IZQ expression . PAR_DER
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    PAR_DER         shift and go to state 273
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 267

    (79) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block . add_if_label
    (82) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block . add_if_label ELSE else_marcker if
    (84) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block . add_if_label ELSE else_marcker function_block
    (80) add_if_label -> .

    ELSE            reduce using rule 80 (add_if_label -> .)
    BRA_DER         reduce using rule 80 (add_if_label -> .)
    PUNTO_COMA      reduce using rule 80 (add_if_label -> .)
    ID              reduce using rule 80 (add_if_label -> .)
    FOR             reduce using rule 80 (add_if_label -> .)
    WHILE           reduce using rule 80 (add_if_label -> .)
    DO              reduce using rule 80 (add_if_label -> .)
    IF              reduce using rule 80 (add_if_label -> .)
    SWITCH          reduce using rule 80 (add_if_label -> .)
    GOTO            reduce using rule 80 (add_if_label -> .)
    BREAK           reduce using rule 80 (add_if_label -> .)
    CONTINUE        reduce using rule 80 (add_if_label -> .)
    RETURN          reduce using rule 80 (add_if_label -> .)
    RESTA           reduce using rule 80 (add_if_label -> .)
    AND_BIT         reduce using rule 80 (add_if_label -> .)
    NOT             reduce using rule 80 (add_if_label -> .)
    NOT_BIT         reduce using rule 80 (add_if_label -> .)
    PAR_IZQ         reduce using rule 80 (add_if_label -> .)
    ENTERO          reduce using rule 80 (add_if_label -> .)
    DECIMAL         reduce using rule 80 (add_if_label -> .)
    CARACTER        reduce using rule 80 (add_if_label -> .)
    CADENA          reduce using rule 80 (add_if_label -> .)
    INT             reduce using rule 80 (add_if_label -> .)
    DOUBLE          reduce using rule 80 (add_if_label -> .)
    CHAR            reduce using rule 80 (add_if_label -> .)
    STRUCT          reduce using rule 80 (add_if_label -> .)
    SUMA_SUMA       reduce using rule 80 (add_if_label -> .)
    RESTA_RESTA     reduce using rule 80 (add_if_label -> .)
    CASE            reduce using rule 80 (add_if_label -> .)
    DEFAULT         reduce using rule 80 (add_if_label -> .)

    add_if_label                   shift and go to state 274

state 268

    (97) switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases . BRA_DER
    (98) cases -> cases . case
    (99) cases -> cases . default
    (101) case -> . CASE expression DOS_PUNTOS instructions
    (102) default -> . DEFAULT DOS_PUNTOS instructions

    BRA_DER         shift and go to state 275
    CASE            shift and go to state 270
    DEFAULT         shift and go to state 278

    case                           shift and go to state 276
    default                        shift and go to state 277

state 269

    (100) cases -> case .

    BRA_DER         reduce using rule 100 (cases -> case .)
    CASE            reduce using rule 100 (cases -> case .)
    DEFAULT         reduce using rule 100 (cases -> case .)


state 270

    (101) case -> CASE . expression DOS_PUNTOS instructions
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression
    (60) identifier -> . ID
    (61) identifier -> . ID bracket

    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 70

    expression                     shift and go to state 279
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68
    identifier                     shift and go to state 69

state 271

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA . step_marcker step PAR_DER do_marcker function_block
    (91) step_marcker -> .

    SUMA_SUMA       reduce using rule 91 (step_marcker -> .)
    RESTA_RESTA     reduce using rule 91 (step_marcker -> .)
    ID              reduce using rule 91 (step_marcker -> .)
    RESTA           reduce using rule 91 (step_marcker -> .)
    AND_BIT         reduce using rule 91 (step_marcker -> .)
    NOT             reduce using rule 91 (step_marcker -> .)
    NOT_BIT         reduce using rule 91 (step_marcker -> .)
    PAR_IZQ         reduce using rule 91 (step_marcker -> .)
    ENTERO          reduce using rule 91 (step_marcker -> .)
    DECIMAL         reduce using rule 91 (step_marcker -> .)
    CARACTER        reduce using rule 91 (step_marcker -> .)
    CADENA          reduce using rule 91 (step_marcker -> .)

    step_marcker                   shift and go to state 280

state 272

    (85) while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .

    BRA_DER         reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    PUNTO_COMA      reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    ID              reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    FOR             reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    WHILE           reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    DO              reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    IF              reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    SWITCH          reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    GOTO            reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    BREAK           reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    CONTINUE        reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    RETURN          reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    RESTA           reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    AND_BIT         reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    NOT             reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    NOT_BIT         reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    PAR_IZQ         reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    ENTERO          reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    DECIMAL         reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    CARACTER        reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    CADENA          reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    INT             reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    DOUBLE          reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    CHAR            reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    STRUCT          reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    SUMA_SUMA       reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    RESTA_RESTA     reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    CASE            reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)
    DEFAULT         reduce using rule 85 (while -> WHILE label_add PAR_IZQ expression PAR_DER while_add function_block .)


state 273

    (88) do -> DO label_add function_block WHILE PAR_IZQ expression PAR_DER .

    PUNTO_COMA      reduce using rule 88 (do -> DO label_add function_block WHILE PAR_IZQ expression PAR_DER .)


state 274

    (79) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .
    (82) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label . ELSE else_marcker if
    (84) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label . ELSE else_marcker function_block

    BRA_DER         reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    PUNTO_COMA      reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    ID              reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    FOR             reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    WHILE           reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    DO              reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    IF              reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    SWITCH          reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    GOTO            reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    BREAK           reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    CONTINUE        reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    RETURN          reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    RESTA           reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    AND_BIT         reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    NOT             reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    NOT_BIT         reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    PAR_IZQ         reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    ENTERO          reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    DECIMAL         reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    CARACTER        reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    CADENA          reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    INT             reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    DOUBLE          reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    CHAR            reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    STRUCT          reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    SUMA_SUMA       reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    RESTA_RESTA     reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    CASE            reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    DEFAULT         reduce using rule 79 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label .)
    ELSE            shift and go to state 281


state 275

    (97) switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .

    BRA_DER         reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    PUNTO_COMA      reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    ID              reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    FOR             reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    WHILE           reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    DO              reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    IF              reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    SWITCH          reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    GOTO            reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    BREAK           reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    CONTINUE        reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    RETURN          reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    RESTA           reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    AND_BIT         reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    NOT             reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    NOT_BIT         reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    PAR_IZQ         reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    ENTERO          reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    DECIMAL         reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    CARACTER        reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    CADENA          reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    INT             reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    DOUBLE          reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    CHAR            reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    STRUCT          reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    SUMA_SUMA       reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    RESTA_RESTA     reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    CASE            reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)
    DEFAULT         reduce using rule 97 (switch -> SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER .)


state 276

    (98) cases -> cases case .

    BRA_DER         reduce using rule 98 (cases -> cases case .)
    CASE            reduce using rule 98 (cases -> cases case .)
    DEFAULT         reduce using rule 98 (cases -> cases case .)


state 277

    (99) cases -> cases default .

    BRA_DER         reduce using rule 99 (cases -> cases default .)
    CASE            reduce using rule 99 (cases -> cases default .)
    DEFAULT         reduce using rule 99 (cases -> cases default .)


state 278

    (102) default -> DEFAULT . DOS_PUNTOS instructions

    DOS_PUNTOS      shift and go to state 282


state 279

    (101) case -> CASE expression . DOS_PUNTOS instructions
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression
    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA

    DOS_PUNTOS      shift and go to state 283
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104
    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106


state 280

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker . step PAR_DER do_marcker function_block
    (94) step -> . assignation
    (95) step -> . increase
    (96) step -> . decrease
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (60) identifier -> . ID
    (61) identifier -> . ID bracket
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression

    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72
    ID              shift and go to state 289
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66

    expression                     shift and go to state 284
    step                           shift and go to state 285
    assignation                    shift and go to state 286
    increase                       shift and go to state 287
    decrease                       shift and go to state 288
    identifier                     shift and go to state 214
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 281

    (82) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE . else_marcker if
    (84) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE . else_marcker function_block
    (83) else_marcker -> .

    IF              reduce using rule 83 (else_marcker -> .)
    BRA_IZQ         reduce using rule 83 (else_marcker -> .)

    else_marcker                   shift and go to state 290

state 282

    (102) default -> DEFAULT DOS_PUNTOS . instructions
    (30) instructions -> . instructions instruction
    (31) instructions -> . instruction
    (32) instruction -> . declaration PUNTO_COMA
    (33) instruction -> . assignation PUNTO_COMA
    (34) instruction -> . for
    (35) instruction -> . while
    (36) instruction -> . do PUNTO_COMA
    (37) instruction -> . if
    (38) instruction -> . switch
    (39) instruction -> . label
    (40) instruction -> . goto PUNTO_COMA
    (41) instruction -> . break PUNTO_COMA
    (42) instruction -> . continue PUNTO_COMA
    (43) instruction -> . return PUNTO_COMA
    (44) instruction -> . expression PUNTO_COMA
    (45) instruction -> . PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (89) for -> . FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (85) while -> . WHILE label_add PAR_IZQ expression PAR_DER while_add function_block
    (88) do -> . DO label_add function_block WHILE PAR_IZQ expression PAR_DER
    (79) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (97) switch -> . SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER
    (103) label -> . ID DOS_PUNTOS
    (104) goto -> . GOTO ID
    (105) break -> . BREAK
    (106) continue -> . CONTINUE
    (107) return -> . RETURN expression
    (108) return -> . RETURN
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (60) identifier -> . ID
    (61) identifier -> . ID bracket
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression

    PUNTO_COMA      shift and go to state 200
    ID              shift and go to state 213
    FOR             shift and go to state 215
    WHILE           shift and go to state 216
    DO              shift and go to state 217
    IF              shift and go to state 218
    SWITCH          shift and go to state 219
    GOTO            shift and go to state 220
    BREAK           shift and go to state 221
    CONTINUE        shift and go to state 222
    RETURN          shift and go to state 223
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72

    instructions                   shift and go to state 291
    instruction                    shift and go to state 198
    declaration                    shift and go to state 199
    assignation                    shift and go to state 201
    for                            shift and go to state 202
    while                          shift and go to state 203
    do                             shift and go to state 204
    if                             shift and go to state 205
    switch                         shift and go to state 206
    label                          shift and go to state 207
    goto                           shift and go to state 208
    break                          shift and go to state 209
    continue                       shift and go to state 210
    return                         shift and go to state 211
    expression                     shift and go to state 212
    primitive_type                 shift and go to state 136
    identifier                     shift and go to state 214
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 283

    (101) case -> CASE expression DOS_PUNTOS . instructions
    (30) instructions -> . instructions instruction
    (31) instructions -> . instruction
    (32) instruction -> . declaration PUNTO_COMA
    (33) instruction -> . assignation PUNTO_COMA
    (34) instruction -> . for
    (35) instruction -> . while
    (36) instruction -> . do PUNTO_COMA
    (37) instruction -> . if
    (38) instruction -> . switch
    (39) instruction -> . label
    (40) instruction -> . goto PUNTO_COMA
    (41) instruction -> . break PUNTO_COMA
    (42) instruction -> . continue PUNTO_COMA
    (43) instruction -> . return PUNTO_COMA
    (44) instruction -> . expression PUNTO_COMA
    (45) instruction -> . PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (89) for -> . FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (85) while -> . WHILE label_add PAR_IZQ expression PAR_DER while_add function_block
    (88) do -> . DO label_add function_block WHILE PAR_IZQ expression PAR_DER
    (79) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (97) switch -> . SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER
    (103) label -> . ID DOS_PUNTOS
    (104) goto -> . GOTO ID
    (105) break -> . BREAK
    (106) continue -> . CONTINUE
    (107) return -> . RETURN expression
    (108) return -> . RETURN
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (60) identifier -> . ID
    (61) identifier -> . ID bracket
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression

    PUNTO_COMA      shift and go to state 200
    ID              shift and go to state 213
    FOR             shift and go to state 215
    WHILE           shift and go to state 216
    DO              shift and go to state 217
    IF              shift and go to state 218
    SWITCH          shift and go to state 219
    GOTO            shift and go to state 220
    BREAK           shift and go to state 221
    CONTINUE        shift and go to state 222
    RETURN          shift and go to state 223
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72

    expression                     shift and go to state 212
    instructions                   shift and go to state 292
    instruction                    shift and go to state 198
    declaration                    shift and go to state 199
    assignation                    shift and go to state 201
    for                            shift and go to state 202
    while                          shift and go to state 203
    do                             shift and go to state 204
    if                             shift and go to state 205
    switch                         shift and go to state 206
    label                          shift and go to state 207
    goto                           shift and go to state 208
    break                          shift and go to state 209
    continue                       shift and go to state 210
    return                         shift and go to state 211
    primitive_type                 shift and go to state 136
    identifier                     shift and go to state 214
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 284

    (152) increase -> expression . SUMA_SUMA
    (154) decrease -> expression . RESTA_RESTA
    (114) expression -> expression . SUMA expression
    (115) expression -> expression . RESTA expression
    (116) expression -> expression . MULT expression
    (117) expression -> expression . DIV expression
    (118) expression -> expression . MOD expression
    (119) expression -> expression . AND expression
    (120) expression -> expression . OR expression
    (121) expression -> expression . ES_IGUAL expression
    (122) expression -> expression . NO_IGUAL expression
    (123) expression -> expression . MENOR_IGUAL expression
    (124) expression -> expression . MAYOR_IGUAL expression
    (125) expression -> expression . MENOR expression
    (126) expression -> expression . MAYOR expression
    (127) expression -> expression . AND_BIT expression
    (128) expression -> expression . OR_BIT expression
    (129) expression -> expression . XOR_BIT expression
    (130) expression -> expression . SHIFT_IZQ expression
    (131) expression -> expression . SHIFT_DER expression
    (137) expression -> expression . INTERROGACION expression DOS_PUNTOS expression

    SUMA_SUMA       shift and go to state 105
    RESTA_RESTA     shift and go to state 106
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULT            shift and go to state 88
    DIV             shift and go to state 89
    MOD             shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92
    ES_IGUAL        shift and go to state 93
    NO_IGUAL        shift and go to state 94
    MENOR_IGUAL     shift and go to state 95
    MAYOR_IGUAL     shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR           shift and go to state 98
    AND_BIT         shift and go to state 99
    OR_BIT          shift and go to state 100
    XOR_BIT         shift and go to state 101
    SHIFT_IZQ       shift and go to state 102
    SHIFT_DER       shift and go to state 103
    INTERROGACION   shift and go to state 104


state 285

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step . PAR_DER do_marcker function_block

    PAR_DER         shift and go to state 293


state 286

    (94) step -> assignation .

    PAR_DER         reduce using rule 94 (step -> assignation .)


state 287

    (95) step -> increase .
    (138) expression -> increase .

    PAR_DER         reduce using rule 95 (step -> increase .)
    SUMA_SUMA       reduce using rule 138 (expression -> increase .)
    RESTA_RESTA     reduce using rule 138 (expression -> increase .)
    SUMA            reduce using rule 138 (expression -> increase .)
    RESTA           reduce using rule 138 (expression -> increase .)
    MULT            reduce using rule 138 (expression -> increase .)
    DIV             reduce using rule 138 (expression -> increase .)
    MOD             reduce using rule 138 (expression -> increase .)
    AND             reduce using rule 138 (expression -> increase .)
    OR              reduce using rule 138 (expression -> increase .)
    ES_IGUAL        reduce using rule 138 (expression -> increase .)
    NO_IGUAL        reduce using rule 138 (expression -> increase .)
    MENOR_IGUAL     reduce using rule 138 (expression -> increase .)
    MAYOR_IGUAL     reduce using rule 138 (expression -> increase .)
    MENOR           reduce using rule 138 (expression -> increase .)
    MAYOR           reduce using rule 138 (expression -> increase .)
    AND_BIT         reduce using rule 138 (expression -> increase .)
    OR_BIT          reduce using rule 138 (expression -> increase .)
    XOR_BIT         reduce using rule 138 (expression -> increase .)
    SHIFT_IZQ       reduce using rule 138 (expression -> increase .)
    SHIFT_DER       reduce using rule 138 (expression -> increase .)
    INTERROGACION   reduce using rule 138 (expression -> increase .)


state 288

    (96) step -> decrease .
    (139) expression -> decrease .

    PAR_DER         reduce using rule 96 (step -> decrease .)
    SUMA_SUMA       reduce using rule 139 (expression -> decrease .)
    RESTA_RESTA     reduce using rule 139 (expression -> decrease .)
    SUMA            reduce using rule 139 (expression -> decrease .)
    RESTA           reduce using rule 139 (expression -> decrease .)
    MULT            reduce using rule 139 (expression -> decrease .)
    DIV             reduce using rule 139 (expression -> decrease .)
    MOD             reduce using rule 139 (expression -> decrease .)
    AND             reduce using rule 139 (expression -> decrease .)
    OR              reduce using rule 139 (expression -> decrease .)
    ES_IGUAL        reduce using rule 139 (expression -> decrease .)
    NO_IGUAL        reduce using rule 139 (expression -> decrease .)
    MENOR_IGUAL     reduce using rule 139 (expression -> decrease .)
    MAYOR_IGUAL     reduce using rule 139 (expression -> decrease .)
    MENOR           reduce using rule 139 (expression -> decrease .)
    MAYOR           reduce using rule 139 (expression -> decrease .)
    AND_BIT         reduce using rule 139 (expression -> decrease .)
    OR_BIT          reduce using rule 139 (expression -> decrease .)
    XOR_BIT         reduce using rule 139 (expression -> decrease .)
    SHIFT_IZQ       reduce using rule 139 (expression -> decrease .)
    SHIFT_DER       reduce using rule 139 (expression -> decrease .)
    INTERROGACION   reduce using rule 139 (expression -> decrease .)


state 289

    (60) identifier -> ID .
    (61) identifier -> ID . bracket
    (109) function_call -> ID . param_val
    (64) bracket -> . bracket COR_IZQ expression COR_DER
    (65) bracket -> . COR_IZQ expression COR_DER
    (110) param_val -> . PAR_IZQ PAR_DER
    (111) param_val -> . PAR_IZQ expression_list PAR_DER

    PUNTO           reduce using rule 60 (identifier -> ID .)
    IGUAL           reduce using rule 60 (identifier -> ID .)
    SUMA_IGUAL      reduce using rule 60 (identifier -> ID .)
    RESTA_IGUAL     reduce using rule 60 (identifier -> ID .)
    MULT_IGUAL      reduce using rule 60 (identifier -> ID .)
    DIV_IGUAL       reduce using rule 60 (identifier -> ID .)
    MOD_IGUAL       reduce using rule 60 (identifier -> ID .)
    SHIFT_IZQ_IGUAL reduce using rule 60 (identifier -> ID .)
    SHIFT_DER_IGUAL reduce using rule 60 (identifier -> ID .)
    AND_BIT_IGUAL   reduce using rule 60 (identifier -> ID .)
    XOR_BIT_IGUAL   reduce using rule 60 (identifier -> ID .)
    OR_BIT_IGUAL    reduce using rule 60 (identifier -> ID .)
    SUMA_SUMA       reduce using rule 60 (identifier -> ID .)
    RESTA_RESTA     reduce using rule 60 (identifier -> ID .)
    SUMA            reduce using rule 60 (identifier -> ID .)
    RESTA           reduce using rule 60 (identifier -> ID .)
    MULT            reduce using rule 60 (identifier -> ID .)
    DIV             reduce using rule 60 (identifier -> ID .)
    MOD             reduce using rule 60 (identifier -> ID .)
    AND             reduce using rule 60 (identifier -> ID .)
    OR              reduce using rule 60 (identifier -> ID .)
    ES_IGUAL        reduce using rule 60 (identifier -> ID .)
    NO_IGUAL        reduce using rule 60 (identifier -> ID .)
    MENOR_IGUAL     reduce using rule 60 (identifier -> ID .)
    MAYOR_IGUAL     reduce using rule 60 (identifier -> ID .)
    MENOR           reduce using rule 60 (identifier -> ID .)
    MAYOR           reduce using rule 60 (identifier -> ID .)
    AND_BIT         reduce using rule 60 (identifier -> ID .)
    OR_BIT          reduce using rule 60 (identifier -> ID .)
    XOR_BIT         reduce using rule 60 (identifier -> ID .)
    SHIFT_IZQ       reduce using rule 60 (identifier -> ID .)
    SHIFT_DER       reduce using rule 60 (identifier -> ID .)
    INTERROGACION   reduce using rule 60 (identifier -> ID .)
    COR_IZQ         shift and go to state 31
    PAR_IZQ         shift and go to state 117

    bracket                        shift and go to state 30
    param_val                      shift and go to state 116

state 290

    (82) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker . if
    (84) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker . function_block
    (79) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (27) function_block -> . BRA_IZQ new_scope instructions BRA_DER
    (29) function_block -> . BRA_IZQ BRA_DER

    IF              shift and go to state 218
    BRA_IZQ         shift and go to state 168

    function_block                 shift and go to state 294
    if                             shift and go to state 295

state 291

    (102) default -> DEFAULT DOS_PUNTOS instructions .
    (30) instructions -> instructions . instruction
    (32) instruction -> . declaration PUNTO_COMA
    (33) instruction -> . assignation PUNTO_COMA
    (34) instruction -> . for
    (35) instruction -> . while
    (36) instruction -> . do PUNTO_COMA
    (37) instruction -> . if
    (38) instruction -> . switch
    (39) instruction -> . label
    (40) instruction -> . goto PUNTO_COMA
    (41) instruction -> . break PUNTO_COMA
    (42) instruction -> . continue PUNTO_COMA
    (43) instruction -> . return PUNTO_COMA
    (44) instruction -> . expression PUNTO_COMA
    (45) instruction -> . PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (89) for -> . FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (85) while -> . WHILE label_add PAR_IZQ expression PAR_DER while_add function_block
    (88) do -> . DO label_add function_block WHILE PAR_IZQ expression PAR_DER
    (79) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (97) switch -> . SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER
    (103) label -> . ID DOS_PUNTOS
    (104) goto -> . GOTO ID
    (105) break -> . BREAK
    (106) continue -> . CONTINUE
    (107) return -> . RETURN expression
    (108) return -> . RETURN
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (60) identifier -> . ID
    (61) identifier -> . ID bracket
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression

    BRA_DER         reduce using rule 102 (default -> DEFAULT DOS_PUNTOS instructions .)
    CASE            reduce using rule 102 (default -> DEFAULT DOS_PUNTOS instructions .)
    DEFAULT         reduce using rule 102 (default -> DEFAULT DOS_PUNTOS instructions .)
    PUNTO_COMA      shift and go to state 200
    ID              shift and go to state 213
    FOR             shift and go to state 215
    WHILE           shift and go to state 216
    DO              shift and go to state 217
    IF              shift and go to state 218
    SWITCH          shift and go to state 219
    GOTO            shift and go to state 220
    BREAK           shift and go to state 221
    CONTINUE        shift and go to state 222
    RETURN          shift and go to state 223
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72

    instruction                    shift and go to state 227
    declaration                    shift and go to state 199
    assignation                    shift and go to state 201
    for                            shift and go to state 202
    while                          shift and go to state 203
    do                             shift and go to state 204
    if                             shift and go to state 205
    switch                         shift and go to state 206
    label                          shift and go to state 207
    goto                           shift and go to state 208
    break                          shift and go to state 209
    continue                       shift and go to state 210
    return                         shift and go to state 211
    expression                     shift and go to state 212
    primitive_type                 shift and go to state 136
    identifier                     shift and go to state 214
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 292

    (101) case -> CASE expression DOS_PUNTOS instructions .
    (30) instructions -> instructions . instruction
    (32) instruction -> . declaration PUNTO_COMA
    (33) instruction -> . assignation PUNTO_COMA
    (34) instruction -> . for
    (35) instruction -> . while
    (36) instruction -> . do PUNTO_COMA
    (37) instruction -> . if
    (38) instruction -> . switch
    (39) instruction -> . label
    (40) instruction -> . goto PUNTO_COMA
    (41) instruction -> . break PUNTO_COMA
    (42) instruction -> . continue PUNTO_COMA
    (43) instruction -> . return PUNTO_COMA
    (44) instruction -> . expression PUNTO_COMA
    (45) instruction -> . PUNTO_COMA
    (48) declaration -> . primitive_type declaration_list
    (49) declaration -> . ID declaration_list
    (66) assignation -> . identifier equals expression
    (67) assignation -> . identifier PUNTO ID equals expression
    (89) for -> . FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block
    (85) while -> . WHILE label_add PAR_IZQ expression PAR_DER while_add function_block
    (88) do -> . DO label_add function_block WHILE PAR_IZQ expression PAR_DER
    (79) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label
    (82) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if
    (84) if -> . IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block
    (97) switch -> . SWITCH PAR_IZQ expression PAR_DER BRA_IZQ cases BRA_DER
    (103) label -> . ID DOS_PUNTOS
    (104) goto -> . GOTO ID
    (105) break -> . BREAK
    (106) continue -> . CONTINUE
    (107) return -> . RETURN expression
    (108) return -> . RETURN
    (114) expression -> . expression SUMA expression
    (115) expression -> . expression RESTA expression
    (116) expression -> . expression MULT expression
    (117) expression -> . expression DIV expression
    (118) expression -> . expression MOD expression
    (119) expression -> . expression AND expression
    (120) expression -> . expression OR expression
    (121) expression -> . expression ES_IGUAL expression
    (122) expression -> . expression NO_IGUAL expression
    (123) expression -> . expression MENOR_IGUAL expression
    (124) expression -> . expression MAYOR_IGUAL expression
    (125) expression -> . expression MENOR expression
    (126) expression -> . expression MAYOR expression
    (127) expression -> . expression AND_BIT expression
    (128) expression -> . expression OR_BIT expression
    (129) expression -> . expression XOR_BIT expression
    (130) expression -> . expression SHIFT_IZQ expression
    (131) expression -> . expression SHIFT_DER expression
    (132) expression -> . RESTA expression
    (133) expression -> . AND_BIT expression
    (134) expression -> . NOT expression
    (135) expression -> . NOT_BIT expression
    (136) expression -> . PAR_IZQ expression PAR_DER
    (137) expression -> . expression INTERROGACION expression DOS_PUNTOS expression
    (138) expression -> . increase
    (139) expression -> . decrease
    (140) expression -> . ENTERO
    (141) expression -> . DECIMAL
    (142) expression -> . CARACTER
    (143) expression -> . CADENA
    (144) expression -> . function_call
    (145) expression -> . conversion
    (146) expression -> . identifier
    (147) expression -> . identifier PUNTO ID
    (21) primitive_type -> . INT
    (22) primitive_type -> . DOUBLE
    (23) primitive_type -> . CHAR
    (24) primitive_type -> . STRUCT ID
    (60) identifier -> . ID
    (61) identifier -> . ID bracket
    (151) increase -> . SUMA_SUMA expression
    (152) increase -> . expression SUMA_SUMA
    (153) decrease -> . RESTA_RESTA expression
    (154) decrease -> . expression RESTA_RESTA
    (109) function_call -> . ID param_val
    (148) conversion -> . PAR_IZQ INT PAR_DER expression
    (149) conversion -> . PAR_IZQ DOUBLE PAR_DER expression
    (150) conversion -> . PAR_IZQ CHAR PAR_DER expression

    BRA_DER         reduce using rule 101 (case -> CASE expression DOS_PUNTOS instructions .)
    CASE            reduce using rule 101 (case -> CASE expression DOS_PUNTOS instructions .)
    DEFAULT         reduce using rule 101 (case -> CASE expression DOS_PUNTOS instructions .)
    PUNTO_COMA      shift and go to state 200
    ID              shift and go to state 213
    FOR             shift and go to state 215
    WHILE           shift and go to state 216
    DO              shift and go to state 217
    IF              shift and go to state 218
    SWITCH          shift and go to state 219
    GOTO            shift and go to state 220
    BREAK           shift and go to state 221
    CONTINUE        shift and go to state 222
    RETURN          shift and go to state 223
    RESTA           shift and go to state 56
    AND_BIT         shift and go to state 57
    NOT             shift and go to state 58
    NOT_BIT         shift and go to state 59
    PAR_IZQ         shift and go to state 60
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    CARACTER        shift and go to state 65
    CADENA          shift and go to state 66
    INT             shift and go to state 130
    DOUBLE          shift and go to state 12
    CHAR            shift and go to state 13
    STRUCT          shift and go to state 131
    SUMA_SUMA       shift and go to state 71
    RESTA_RESTA     shift and go to state 72

    expression                     shift and go to state 212
    instruction                    shift and go to state 227
    declaration                    shift and go to state 199
    assignation                    shift and go to state 201
    for                            shift and go to state 202
    while                          shift and go to state 203
    do                             shift and go to state 204
    if                             shift and go to state 205
    switch                         shift and go to state 206
    label                          shift and go to state 207
    goto                           shift and go to state 208
    break                          shift and go to state 209
    continue                       shift and go to state 210
    return                         shift and go to state 211
    primitive_type                 shift and go to state 136
    identifier                     shift and go to state 214
    increase                       shift and go to state 61
    decrease                       shift and go to state 62
    function_call                  shift and go to state 67
    conversion                     shift and go to state 68

state 293

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER . do_marcker function_block
    (90) do_marcker -> .

    BRA_IZQ         reduce using rule 90 (do_marcker -> .)

    do_marcker                     shift and go to state 296

state 294

    (84) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .

    BRA_DER         reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    PUNTO_COMA      reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    ID              reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    FOR             reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    WHILE           reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    DO              reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    IF              reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    SWITCH          reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    GOTO            reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    BREAK           reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    CONTINUE        reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    RETURN          reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    RESTA           reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    AND_BIT         reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    NOT             reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    NOT_BIT         reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    PAR_IZQ         reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    ENTERO          reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    DECIMAL         reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    CARACTER        reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    CADENA          reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    INT             reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    DOUBLE          reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    CHAR            reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    STRUCT          reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    SUMA_SUMA       reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    RESTA_RESTA     reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    CASE            reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)
    DEFAULT         reduce using rule 84 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker function_block .)


state 295

    (82) if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .

    BRA_DER         reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    PUNTO_COMA      reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    ID              reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    FOR             reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    WHILE           reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    DO              reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    IF              reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    SWITCH          reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    GOTO            reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    BREAK           reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    CONTINUE        reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    RETURN          reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    RESTA           reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    AND_BIT         reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    NOT             reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    NOT_BIT         reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    PAR_IZQ         reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    ENTERO          reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    DECIMAL         reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    CARACTER        reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    CADENA          reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    INT             reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    DOUBLE          reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    CHAR            reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    STRUCT          reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    SUMA_SUMA       reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    RESTA_RESTA     reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    CASE            reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)
    DEFAULT         reduce using rule 82 (if -> IF PAR_IZQ expression PAR_DER if_marcker function_block add_if_label ELSE else_marcker if .)


state 296

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker . function_block
    (27) function_block -> . BRA_IZQ new_scope instructions BRA_DER
    (29) function_block -> . BRA_IZQ BRA_DER

    BRA_IZQ         shift and go to state 168

    function_block                 shift and go to state 297

state 297

    (89) for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .

    BRA_DER         reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    PUNTO_COMA      reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    ID              reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    FOR             reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    WHILE           reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    DO              reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    IF              reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    SWITCH          reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    GOTO            reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    BREAK           reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    CONTINUE        reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    RETURN          reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    RESTA           reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    AND_BIT         reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    NOT             reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    NOT_BIT         reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    PAR_IZQ         reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    ENTERO          reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    DECIMAL         reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    CARACTER        reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    CADENA          reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    INT             reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    DOUBLE          reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    CHAR            reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    STRUCT          reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    SUMA_SUMA       reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    RESTA_RESTA     reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    CASE            reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)
    DEFAULT         reduce using rule 89 (for -> FOR PAR_IZQ for_declaration PUNTO_COMA label_add expression PUNTO_COMA step_marcker step PAR_DER do_marcker function_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 183 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 183 resolved as shift
WARNING: shift/reduce conflict for MULT in state 183 resolved as shift
WARNING: shift/reduce conflict for DIV in state 183 resolved as shift
WARNING: shift/reduce conflict for MOD in state 183 resolved as shift
WARNING: shift/reduce conflict for AND in state 183 resolved as shift
WARNING: shift/reduce conflict for OR in state 183 resolved as shift
WARNING: shift/reduce conflict for ES_IGUAL in state 183 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 183 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 183 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 183 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 183 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 183 resolved as shift
WARNING: shift/reduce conflict for AND_BIT in state 183 resolved as shift
WARNING: shift/reduce conflict for OR_BIT in state 183 resolved as shift
WARNING: shift/reduce conflict for XOR_BIT in state 183 resolved as shift
WARNING: shift/reduce conflict for SHIFT_IZQ in state 183 resolved as shift
WARNING: shift/reduce conflict for SHIFT_DER in state 183 resolved as shift
WARNING: shift/reduce conflict for INTERROGACION in state 183 resolved as shift
WARNING: shift/reduce conflict for SUMA_SUMA in state 183 resolved as shift
WARNING: shift/reduce conflict for RESTA_RESTA in state 183 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 184 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 184 resolved as shift
WARNING: shift/reduce conflict for MULT in state 184 resolved as shift
WARNING: shift/reduce conflict for DIV in state 184 resolved as shift
WARNING: shift/reduce conflict for MOD in state 184 resolved as shift
WARNING: shift/reduce conflict for AND in state 184 resolved as shift
WARNING: shift/reduce conflict for OR in state 184 resolved as shift
WARNING: shift/reduce conflict for ES_IGUAL in state 184 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 184 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 184 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 184 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 184 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 184 resolved as shift
WARNING: shift/reduce conflict for AND_BIT in state 184 resolved as shift
WARNING: shift/reduce conflict for OR_BIT in state 184 resolved as shift
WARNING: shift/reduce conflict for XOR_BIT in state 184 resolved as shift
WARNING: shift/reduce conflict for SHIFT_IZQ in state 184 resolved as shift
WARNING: shift/reduce conflict for SHIFT_DER in state 184 resolved as shift
WARNING: shift/reduce conflict for INTERROGACION in state 184 resolved as shift
WARNING: shift/reduce conflict for SUMA_SUMA in state 184 resolved as shift
WARNING: shift/reduce conflict for RESTA_RESTA in state 184 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 185 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 185 resolved as shift
WARNING: shift/reduce conflict for MULT in state 185 resolved as shift
WARNING: shift/reduce conflict for DIV in state 185 resolved as shift
WARNING: shift/reduce conflict for MOD in state 185 resolved as shift
WARNING: shift/reduce conflict for AND in state 185 resolved as shift
WARNING: shift/reduce conflict for OR in state 185 resolved as shift
WARNING: shift/reduce conflict for ES_IGUAL in state 185 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 185 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 185 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 185 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 185 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 185 resolved as shift
WARNING: shift/reduce conflict for AND_BIT in state 185 resolved as shift
WARNING: shift/reduce conflict for OR_BIT in state 185 resolved as shift
WARNING: shift/reduce conflict for XOR_BIT in state 185 resolved as shift
WARNING: shift/reduce conflict for SHIFT_IZQ in state 185 resolved as shift
WARNING: shift/reduce conflict for SHIFT_DER in state 185 resolved as shift
WARNING: shift/reduce conflict for INTERROGACION in state 185 resolved as shift
WARNING: shift/reduce conflict for SUMA_SUMA in state 185 resolved as shift
WARNING: shift/reduce conflict for RESTA_RESTA in state 185 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 195 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 195 resolved as shift
WARNING: shift/reduce conflict for MULT in state 195 resolved as shift
WARNING: shift/reduce conflict for DIV in state 195 resolved as shift
WARNING: shift/reduce conflict for MOD in state 195 resolved as shift
WARNING: shift/reduce conflict for AND in state 195 resolved as shift
WARNING: shift/reduce conflict for OR in state 195 resolved as shift
WARNING: shift/reduce conflict for ES_IGUAL in state 195 resolved as shift
WARNING: shift/reduce conflict for NO_IGUAL in state 195 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 195 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 195 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 195 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 195 resolved as shift
WARNING: shift/reduce conflict for AND_BIT in state 195 resolved as shift
WARNING: shift/reduce conflict for OR_BIT in state 195 resolved as shift
WARNING: shift/reduce conflict for XOR_BIT in state 195 resolved as shift
WARNING: shift/reduce conflict for SHIFT_IZQ in state 195 resolved as shift
WARNING: shift/reduce conflict for SHIFT_DER in state 195 resolved as shift
WARNING: shift/reduce conflict for INTERROGACION in state 195 resolved as shift
WARNING: shift/reduce conflict for SUMA_SUMA in state 195 resolved as shift
WARNING: shift/reduce conflict for RESTA_RESTA in state 195 resolved as shift
